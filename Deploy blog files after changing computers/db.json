{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/about/a2.jpg","path":"about/a2.jpg","modified":1,"renderable":0},{"_id":"themes/landscape/source/css/comment-gitment.css","path":"css/comment-gitment.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/comment-ds.css","path":"css/comment-ds.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/glyphs.css","path":"css/glyphs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/hiero.css","path":"css/hiero.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/vdonate.css","path":"css/vdonate.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/my.js","path":"js/my.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/scripts.js","path":"js/scripts.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/vdonate.js","path":"js/vdonate.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/browser-support.png","path":"preview/browser-support.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/athemes-glyphs.woff","path":"css/fonts/athemes-glyphs.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/avatar.jpg","path":"css/images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/jy.jpg","path":"css/images/jy.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/Hiero_home.png","path":"preview/Hiero_home.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/logo-preview.jpg","path":"preview/logo-preview.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/favicon3.ico","path":"css/images/favicon3.ico","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/mobile-preview.png","path":"preview/mobile-preview.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/code-default-preview.png","path":"preview/code-default-preview.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/pose2.jpg","path":"css/images/pose2.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/preview/code-theme.jpg","path":"preview/code-theme.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/pose.jpg","path":"css/images/pose.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"9045875991710cb2fac39dc8986cc01da9bc69a1","modified":1571750450000},{"_id":"themes/landscape/.gitignore","hash":"2cc2b7a33e1d4f96eb2cf870091c31599e88aaab","modified":1586123124529},{"_id":"themes/landscape/.travis.yml","hash":"7ed5eb33c899eb49ec323f7ed7ee431bea52bf4f","modified":1586123124530},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1586123124530},{"_id":"themes/landscape/LICENSE","hash":"53bb975b001b0d0bb2ddd7c302a9c8a20195f0be","modified":1586123124531},{"_id":"themes/landscape/README.cn.md","hash":"b477baf18542914e5ea05e4de6915bbd82b52bf8","modified":1586123124532},{"_id":"themes/landscape/README.md","hash":"0d8eb552e0ad1edadb95c671a50d866b922eed4a","modified":1586123124533},{"_id":"themes/landscape/_config.yml","hash":"1725243a586990372f1fc2ff6157374c6227b7b0","modified":1586203285522},{"_id":"themes/landscape/package.json","hash":"5eaf2d3c5bc2a8d9fd503e2daed9c97333585d04","modified":1586123124582},{"_id":"source/_posts/hello-world  2.md","hash":"17de89c402d111f9b9bc92a8d29a022b27e34292","modified":1586192524420},{"_id":"source/_posts/kangsinx.md","hash":"6b3cf38db0478e3a388c10dc4a7071f36d6a6961","modified":1586192507950},{"_id":"source/_posts/hello-world.md","hash":"000b57fd891c6b51659d10ab65ae36d8c3f39eb8","modified":1586192429679},{"_id":"source/_posts/hello-world  3.md","hash":"059efecbea2762d9078f02103752bedfd0db0c99","modified":1586192629595},{"_id":"source/about/index.md","hash":"bc8cb1db2344fa81d7643a64fe48ff30981d7ace","modified":1586161677751},{"_id":"source/_posts/kc.md","hash":"57d8d8879b6dff06ff6db9b4e94c772ea1d00773","modified":1586192342514},{"_id":"source/categories/index.md","hash":"6e4b9fae5b8240a881d6f7c8d643970a36d47408","modified":1586189793275},{"_id":"source/guestbook/index.md","hash":"6e87584116d16b4dcbf02b64483b416611a7b29f","modified":1586104037933},{"_id":"source/tags/index.md","hash":"a475b80992c84d76f18ffe865febea1c20225d70","modified":1586191280967},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1586123124535},{"_id":"themes/landscape/languages/default.yml","hash":"351229288141e945d3c84b8c236c757b0d3e0897","modified":1586123124536},{"_id":"themes/landscape/languages/en.yml","hash":"351229288141e945d3c84b8c236c757b0d3e0897","modified":1586123124537},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1586123124538},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1586123124539},{"_id":"themes/landscape/languages/es.yml","hash":"8a185122a8968ae3e3ae850bb5569084ba0c0afd","modified":1586123124538},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1586123124540},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1586123124542},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"614eb1eab84c51948ab590a3d2bccf1d51747cf5","modified":1586175691216},{"_id":"themes/landscape/languages/pt.yml","hash":"0ec64b7e134e802846125770782fab9590495bcd","modified":1586123124541},{"_id":"source/about/a2.jpg","hash":"ed41e036bad23c23d2105c2029cdd27f3451558c","modified":1571848388000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"52976395ec52ac43de546958300ec297fe4e8ccc","modified":1586123124543},{"_id":"themes/landscape/layout/archive.ejs","hash":"97043b4761d9193f0c5836d093f26c3087c9c55c","modified":1586123124571},{"_id":"themes/landscape/layout/categories.ejs","hash":"a94bafe10d9f4b1fe42c0d586c9606a5c0ce3ea4","modified":1586123124572},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1586123124573},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1586123124572},{"_id":"themes/landscape/layout/layout.ejs","hash":"b0f554af2eca7e36ec4fcfaa776bb69fbceffc91","modified":1586123124574},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1586123124576},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1586123124575},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1586123124580},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1586123124583},{"_id":"themes/landscape/scripts/hierarchical-categories.js","hash":"d06470bcfd09777b056e34d6b0895d2c672bd58a","modified":1586123124584},{"_id":"themes/landscape/layout/tags.ejs","hash":"2ecf18cf840207c5688af0be0ded77e770661037","modified":1586123124581},{"_id":"source/_posts/hello-world/36.jpg","hash":"19a6efd95f46fba648e8408445e3b86bfb56f425","modified":1585533365506},{"_id":"source/_posts/hello-world/37.gif","hash":"9467a90527c08091f28003133ec8473e7dacf480","modified":1585533382911},{"_id":"source/_posts/hello-world/a2.jpg","hash":"ed41e036bad23c23d2105c2029cdd27f3451558c","modified":1571848388000},{"_id":"source/_posts/hello-world/wxgzh.JPG","hash":"1222a8f5e1e415542f2a8f8bc87fc08eef263238","modified":1585990927656},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"de51f9c48746bfba27cde31cb2057220f47183ea","modified":1586123124545},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"f380e5459a043979e0c7429dcf33f20302631214","modified":1586123124546},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"62ff097c313c1b87724c9916ec3fd44545b56d35","modified":1586123124547},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"1bd968f0d6ff40488ccac6a0030711a7e60856b1","modified":1586123124548},{"_id":"themes/landscape/layout/_partial/baidu-analytics.ejs","hash":"335749b60b4274d9751bac8baf39d69f424930fd","modified":1586123124548},{"_id":"themes/landscape/layout/_partial/busuanzi-analytics.ejs","hash":"a944a540fff0d7bfb5fd6ca81d34624f1d6b2ea2","modified":1586123124549},{"_id":"themes/landscape/layout/_partial/donate.ejs","hash":"ce2dc1ca23cc12a6b91651aaf7845508ab95832f","modified":1586123124551},{"_id":"themes/landscape/layout/_partial/cnzz-analytics.ejs","hash":"b340ae5f2b7550ff1eb771904bc374e09b6880b0","modified":1586123124550},{"_id":"themes/landscape/layout/_partial/facebook-sdk.ejs","hash":"8fc5cf7abbfd587057fb86ee028c7f216d30d68c","modified":1586123124552},{"_id":"themes/landscape/layout/_partial/comment.ejs","hash":"3273805713973f9a32fc1120c57c9fd9854acb52","modified":1586123124550},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"2b1f8a5926511049bdb258454c55576fa6057123","modified":1586123124553},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1586123124554},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1586123124553},{"_id":"themes/landscape/layout/_partial/header-post.ejs","hash":"2ae1c7b11cf95480cc62d93d981cc46ee352925c","modified":1586123124556},{"_id":"themes/landscape/layout/_partial/jsHelper.ejs","hash":"adb6c50f7b53d7f6e88fb7fd18ace0d054087929","modified":1586123124556},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"74b6e96f3b172e878d098cf004a692d4e653c4e8","modified":1586123124555},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1586123124564},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1586123124557},{"_id":"themes/landscape/layout/_partial/tencent-analytics.ejs","hash":"6a50e6fe7701ff131b2fc0c066a4615dd2a37da7","modified":1586123124564},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"856a6352a0f8d55f3d2965eea8ad4ec517f6af96","modified":1586123124565},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1586123124566},{"_id":"themes/landscape/layout/_widget/social.ejs","hash":"5719baf6cee0ddd97a0a61351d5d107257531504","modified":1586123124569},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1586123124570},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"b8d29ab002e7fa855f4322dccc6546841eaecd80","modified":1586123124567},{"_id":"themes/landscape/layout/_widget/search.ejs","hash":"77960bc8969dc0c5a341a239130f8d181442de03","modified":1586123124568},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1586123124570},{"_id":"themes/landscape/layout/search/baidu.ejs","hash":"bee2184ed56871cdd4eed38cb0802a07dd4e5191","modified":1586123124577},{"_id":"themes/landscape/layout/search/index.ejs","hash":"4a63d4f702fd5c8a0dbf4030ef313a75926424af","modified":1586123124578},{"_id":"themes/landscape/layout/search/index-mobile.ejs","hash":"8e2e28b37a908f60e4953bf9175a7af329d15d40","modified":1586123124577},{"_id":"themes/landscape/layout/search/swiftype.ejs","hash":"cce9c44180d9490f45b30b8f052ac82675a9d66a","modified":1586123124580},{"_id":"themes/landscape/layout/search/insight.ejs","hash":"11a07a4ea37b64e36a85f1f8889cce00c5979e1f","modified":1586123124579},{"_id":"themes/landscape/source/css/_extend.styl","hash":"e3bb9a6ec8b2c2341e97e92e5d92b106651d7144","modified":1586123124585},{"_id":"themes/landscape/source/css/_variables.styl","hash":"6f54ab92d25b2207c8d3d58987475269db8f334f","modified":1586123124598},{"_id":"themes/landscape/source/css/comment-gitment.css","hash":"f0afe10cac4ae779d442d7459de5bb67372da971","modified":1586123124599},{"_id":"themes/landscape/source/css/comment-ds.css","hash":"06f65a714265aa6d6e5d88fc371add1aa0cf8cb7","modified":1586123124599},{"_id":"themes/landscape/source/css/glyphs.css","hash":"788c8d61a24dcdbaa9d8026a18fb19fbb27dcd4d","modified":1586123124608},{"_id":"themes/landscape/source/css/hiero.css","hash":"12d3582928b5a79108c8fe54177603fc237a34c9","modified":1586123124609},{"_id":"themes/landscape/source/css/vdonate.css","hash":"b43acd89a3d87725d6496a4f780dcf5eb576f866","modified":1586123124617},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1586123124618},{"_id":"themes/landscape/source/css/style.styl","hash":"c43b118baab46850cc99933f5a04ce41373e7ec8","modified":1586123124616},{"_id":"themes/landscape/source/css/my.css","hash":"d282549fe341896a57aa3a8c03b98b6fde7ae215","modified":1586123124616},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1586123124619},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1586123124622},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1586123124621},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1586123124621},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1586123124620},{"_id":"themes/landscape/source/js/main.js","hash":"c6daf29e1ec12b6f7bc1b4fdec3fc01bdeae1998","modified":1586123124629},{"_id":"themes/landscape/source/js/my.js","hash":"abfef87b14ed2e6c2104633568a975d35685e521","modified":1586123124630},{"_id":"themes/landscape/source/js/insight.js","hash":"a69c9f5aecea2eae8f740b5857ee28694609373d","modified":1586123124628},{"_id":"themes/landscape/source/js/scripts.js","hash":"a0780585cbe85bf1d8367ff68279b0fe461acd37","modified":1586123124630},{"_id":"themes/landscape/source/js/totop.js","hash":"e9f388666901f97a601d2f3e44eb246413e5db9e","modified":1586123124631},{"_id":"themes/landscape/source/js/vdonate.js","hash":"a3482fae4f782028e7faa090f2f001ad9bca05e5","modified":1586123124632},{"_id":"themes/landscape/source/preview/browser-support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1586123124635},{"_id":"source/_posts/hello-world/ck.jpg","hash":"e78cd068e7a409126063d0d4bb46ff2190f0dee8","modified":1585535153865},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1586123124589},{"_id":"themes/landscape/source/css/_partial/header-post.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1586123124590},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1586123124590},{"_id":"themes/landscape/layout/_partial/post/busuanzi-analytics.ejs","hash":"d49ddbafab9fa6ebbb5108870901fcba0c8bcc6c","modified":1586123124558},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"f60d3c9a0943b8af97b1a8a82be0addf46cda1d9","modified":1586123124559},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"c176e681c1586f12606c7d350b0bdc615e633aa1","modified":1586123124559},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"bfde040b4c4a8ce43645e0783cdd2b944269ec80","modified":1586123124560},{"_id":"themes/landscape/layout/_partial/post/mathjax.ejs","hash":"b670bc52c3dbc5ca0216959ccd8cc2c6e1808446","modified":1586123124561},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1586123124561},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"22a3580e569cb6a616d6817e32075759c6554801","modified":1586123124562},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"9ee31f67ad337d5dcaaa10aa8ba55c7c22074b1c","modified":1586123124563},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1586123124596},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1586123124597},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"0ff4b7d6bfe35cc575aadccf3f568c262ce523e6","modified":1586123124587},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"df0e7fb20ed04945f74babc783ec52d9e1151148","modified":1586123124588},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"43279aaaa00cc07b4a65b13ef01c391355e82717","modified":1586123124589},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"57f33b0c54643204a2a0158d64108f01c28a0f27","modified":1586123124591},{"_id":"themes/landscape/source/css/_partial/insight.styl","hash":"cd0d114695779df632cc8fa856837303e2052ef2","modified":1586123124592},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"3920e4c3cd11f294d3e7835ed628f169cbea6b21","modified":1586123124593},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"cef960740150ee3a8eed84e8e44ec9351474834d","modified":1586123124594},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1586123124594},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1586123124595},{"_id":"themes/landscape/source/css/fonts/athemes-glyphs.woff","hash":"f1ac9ffcc97571ceff48b68792c34de97bc289c0","modified":1586123124602},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1586123124603},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1586123124608},{"_id":"themes/landscape/source/css/images/favicon.ico","hash":"277372f07132304ea7933196b9cfa07fd23fa603","modified":1586123124610},{"_id":"themes/landscape/source/css/images/avatar.jpg","hash":"67ef464a2486363d0bd6b8d82df7da679b656573","modified":1585480470258},{"_id":"themes/landscape/source/css/images/jy.jpg","hash":"b1234c9c42a7f7d4c634b6389b617756a2ecb140","modified":1585899427195},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1586123124623},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1586123124624},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1586123124625},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1586123124626},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1586123124626},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1586123124627},{"_id":"themes/landscape/source/preview/Hiero_home.png","hash":"7b430bf82a3f8f4194bac272822ed697e976117f","modified":1586123124634},{"_id":"themes/landscape/source/preview/logo-preview.jpg","hash":"18ec270e302e6870953bb59bf57052cd663659ec","modified":1586123124648},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1586123124601},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1586123124607},{"_id":"themes/landscape/source/css/images/favicon3.ico","hash":"36c56b1f3eb44e5e46aef5836f0089c605a15275","modified":1586150369216},{"_id":"themes/landscape/source/preview/mobile-preview.png","hash":"daa8cec3fdae123d97dd9893502e138a3779535e","modified":1586123124650},{"_id":"themes/landscape/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1586119421071},{"_id":"themes/landscape/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1586119421072},{"_id":"themes/landscape/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1586119421073},{"_id":"themes/landscape/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1586119421074},{"_id":"themes/landscape/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1586119421070},{"_id":"themes/landscape/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1586119421073},{"_id":"themes/landscape/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1586119421072},{"_id":"themes/landscape/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1586119421077},{"_id":"themes/landscape/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1586119421074},{"_id":"themes/landscape/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1586119421078},{"_id":"themes/landscape/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1586119421078},{"_id":"themes/landscape/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1586119421079},{"_id":"themes/landscape/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1586119421080},{"_id":"themes/landscape/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1586119421082},{"_id":"themes/landscape/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1586119421084},{"_id":"themes/landscape/source/css/_schemes/Pisces/_layout.styl","hash":"5f73faf77ad5c057a8b01122f1699bb32a96c5d1","modified":1586154953402},{"_id":"themes/landscape/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1586119421086},{"_id":"themes/landscape/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1586119421084},{"_id":"themes/landscape/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1586119421085},{"_id":"themes/landscape/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1586119421075},{"_id":"themes/landscape/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1586119421076},{"_id":"themes/landscape/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1586119421081},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1586123124605},{"_id":"themes/landscape/source/preview/code-default-preview.png","hash":"0862313cb73a498155d72aa2fa309470b12bf0cd","modified":1586123124640},{"_id":"themes/landscape/source/css/images/pose2.jpg","hash":"e8dcdb6e03bd02d831bae593feccb7028c9dc5e9","modified":1586123124615},{"_id":"themes/landscape/source/preview/code-theme.jpg","hash":"8c8512fd04e6106033656d10e92d51de76cca6d8","modified":1586123124646},{"_id":"themes/landscape/source/css/images/pose.jpg","hash":"253d0ab919621a21849e3705e7072f16c94a1eb0","modified":1586146599130},{"_id":"public/atom.xml","hash":"b1feb6826042881c269f98810490df70b44951e0","modified":1586203538644},{"_id":"public/content.json","hash":"87c29fa760b0572f812824d7d28f244bcd6a999a","modified":1586203538644},{"_id":"public/sitemap.xml","hash":"f27a44f23028f92ab40149f405a140d21494a6ec","modified":1586203538644},{"_id":"public/about/index.html","hash":"2524158831666bdde99032898c8a33829444a2be","modified":1586203538644},{"_id":"public/categories/index.html","hash":"26086a3b4bddd9136d02f29008290e93932299b2","modified":1586203538644},{"_id":"public/tags/index.html","hash":"542d9a02377274ee4fb27964ba426d0e7280e57e","modified":1586203538644},{"_id":"public/guestbook/index.html","hash":"298d47669f275acf63297eca8952ea8b3d80dee6","modified":1586203538644},{"_id":"public/2020/04/06/kc/index.html","hash":"4425776d96ec6e2c2b199cb42a81bca9219a1772","modified":1586203538644},{"_id":"public/2020/04/05/kangsinx/index.html","hash":"9c95c8681ee242c608bdc9361c56c483967c218e","modified":1586203538644},{"_id":"public/2020/04/05/hello-world  3/index.html","hash":"2a639a23a163ec4a4e0abe8a54a4fac0ae3585d1","modified":1586203538644},{"_id":"public/2020/04/05/hello-world  2/index.html","hash":"aedef4677db4d88568430db5cfe9122822d4ef01","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/index.html","hash":"f8920412f46c0bba7f08304e939c3720f6f290ec","modified":1586203538644},{"_id":"public/categories/激活与安装/index.html","hash":"7656813007a675420f616f2623d4f57a5f646495","modified":1586203538644},{"_id":"public/categories/博客教程/index.html","hash":"9e840b90aa1a901dcd9a222c72a4b8b56e5bf466","modified":1586203538644},{"_id":"public/categories/算法/index.html","hash":"e24f1fdd006ea3ad539f60fe4bf7644bd35113a0","modified":1586203538644},{"_id":"public/categories/学习资料/index.html","hash":"8d2aa48820f765e89d3ebfcbfbef00dd05891088","modified":1586203538644},{"_id":"public/archives/index.html","hash":"38a62b1731fd00ca223ca0f66ded57495ddffa32","modified":1586203538644},{"_id":"public/archives/2020/index.html","hash":"4210a1d933e2a942bcb123b7fe59f8567584be1b","modified":1586203538644},{"_id":"public/archives/2020/03/index.html","hash":"cbcf992e6d11378f1caff4bea3d3c8662905e6a9","modified":1586203538644},{"_id":"public/archives/2020/04/index.html","hash":"ae27d5e08f254dcd67035173c640be4efc0d2793","modified":1586203538644},{"_id":"public/index.html","hash":"c8c45bf07a7e8ed2b7f2071b36aefeaafd466277","modified":1586203538644},{"_id":"public/CNAME","hash":"9045875991710cb2fac39dc8986cc01da9bc69a1","modified":1586203538644},{"_id":"public/about/a2.jpg","hash":"ed41e036bad23c23d2105c2029cdd27f3451558c","modified":1586203538644},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1586203538644},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1586203538644},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1586203538644},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1586203538644},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1586203538644},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1586203538644},{"_id":"public/preview/browser-support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1586203538644},{"_id":"public/css/fonts/athemes-glyphs.woff","hash":"f1ac9ffcc97571ceff48b68792c34de97bc289c0","modified":1586203538644},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1586203538644},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1586203538644},{"_id":"public/css/images/favicon.ico","hash":"277372f07132304ea7933196b9cfa07fd23fa603","modified":1586203538644},{"_id":"public/css/images/avatar.jpg","hash":"67ef464a2486363d0bd6b8d82df7da679b656573","modified":1586203538644},{"_id":"public/css/images/jy.jpg","hash":"b1234c9c42a7f7d4c634b6389b617756a2ecb140","modified":1586203538644},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1586203538644},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/36.jpg","hash":"19a6efd95f46fba648e8408445e3b86bfb56f425","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/37.gif","hash":"9467a90527c08091f28003133ec8473e7dacf480","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/a2.jpg","hash":"ed41e036bad23c23d2105c2029cdd27f3451558c","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/wxgzh.JPG","hash":"1222a8f5e1e415542f2a8f8bc87fc08eef263238","modified":1586203538644},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1586203538644},{"_id":"public/css/prism.css","hash":"7525a8ef14db7e676922607e580e90dc68ad3e35","modified":1586203538644},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1586203538644},{"_id":"public/css/images/favicon3.ico","hash":"36c56b1f3eb44e5e46aef5836f0089c605a15275","modified":1586203538644},{"_id":"public/2020/03/30/hello-world/ck.jpg","hash":"e78cd068e7a409126063d0d4bb46ff2190f0dee8","modified":1586203538644},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1586203538644},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1586203538644},{"_id":"public/css/comment-ds.css","hash":"f699db93c8901b302b85385698228e8511d5e9d6","modified":1586203538644},{"_id":"public/css/comment-gitment.css","hash":"0a109d778790ee7938626a6611009d80a47375ed","modified":1586203538644},{"_id":"public/css/vdonate.css","hash":"bca2d291a71e7358654c51f23e8bfb467b2bc8b2","modified":1586203538644},{"_id":"public/css/glyphs.css","hash":"c4088f9a347e42a31d9aabc8aa17ead3d1ed8b8e","modified":1586203538644},{"_id":"public/css/my.css","hash":"bff3ece34f1fdbe4f83c77fd7323a7f5fce82a3e","modified":1586203538644},{"_id":"public/js/main.js","hash":"2381eccd9a1ac3d70988f9ea5a36d34f63153bcf","modified":1586203538644},{"_id":"public/js/insight.js","hash":"2995f3f94d0a9887b08e38a6f5053b6ca2997c19","modified":1586203538644},{"_id":"public/js/scripts.js","hash":"555ad1235d59d427b2ff4793aab276ffe7ed7a87","modified":1586203538644},{"_id":"public/js/totop.js","hash":"560baaa7bbf70ce67261b39aef61293646d9e539","modified":1586203538644},{"_id":"public/js/my.js","hash":"88772319186b065042f9a3d4433059ca0f295174","modified":1586203538644},{"_id":"public/js/vdonate.js","hash":"5738414c642d30e43943a69287b3d25a0b6be135","modified":1586203538644},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1586203538644},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1586203538644},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1586203538644},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1586203538644},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1586203538644},{"_id":"public/css/hiero.css","hash":"6f8daafd4defef83d5fe36f1310fe63226e41885","modified":1586203538644},{"_id":"public/css/style.css","hash":"f623e662c76f2b3a490dd4609a14e5f527bc8b8d","modified":1586203538644},{"_id":"public/preview/Hiero_home.png","hash":"7b430bf82a3f8f4194bac272822ed697e976117f","modified":1586203538644},{"_id":"public/preview/logo-preview.jpg","hash":"18ec270e302e6870953bb59bf57052cd663659ec","modified":1586203538644},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1586203538644},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1586203538644},{"_id":"public/preview/mobile-preview.png","hash":"daa8cec3fdae123d97dd9893502e138a3779535e","modified":1586203538644},{"_id":"public/css/images/pose2.jpg","hash":"e8dcdb6e03bd02d831bae593feccb7028c9dc5e9","modified":1586203538644},{"_id":"public/css/images/pose.jpg","hash":"253d0ab919621a21849e3705e7072f16c94a1eb0","modified":1586203538644},{"_id":"public/preview/code-default-preview.png","hash":"0862313cb73a498155d72aa2fa309470b12bf0cd","modified":1586203538644},{"_id":"public/preview/code-theme.jpg","hash":"8c8512fd04e6106033656d10e92d51de76cca6d8","modified":1586203538644}],"Category":[{"name":"激活与安装","_id":"ck8owmsq1000424ur5utjfxlr"},{"name":"博客教程","_id":"ck8owmsq8000a24urbvsz5ijv"},{"name":"算法","_id":"ck8owmsqa000c24ur1qmkbed9"},{"name":"学习资料","_id":"ck8owmsqb000e24ur22da3rmw"}],"Data":[],"Page":[{"title":"关于作者","date":"2020-04-05T04:14:54.000Z","type":"about","_content":"我是一名初入互联网的菜鸟，喜欢专研技术。\n如果你想了解更多关于科技的话题可以关注我的微信公众号：kangsinx\n\n点击回到博客主页：\n[\"博客主页\"](http://kangchou001.cn/ \"博客主页\")","source":"about/index.md","raw":"---\ntitle: 关于作者\ndate: 2020-04-05 12:14:54\ntype: \"about\"\n---\n我是一名初入互联网的菜鸟，喜欢专研技术。\n如果你想了解更多关于科技的话题可以关注我的微信公众号：kangsinx\n\n点击回到博客主页：\n[\"博客主页\"](http://kangchou001.cn/ \"博客主页\")","updated":"2020-04-06T08:27:57.751Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck8owmspv000124urcjh32wfo","content":"<p>我是一名初入互联网的菜鸟，喜欢专研技术。<br>如果你想了解更多关于科技的话题可以关注我的微信公众号：kangsinx</p>\n<p>点击回到博客主页：<br><a href=\"http://kangchou001.cn/\" title=\"博客主页\">“博客主页”</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我是一名初入互联网的菜鸟，喜欢专研技术。<br>如果你想了解更多关于科技的话题可以关注我的微信公众号：kangsinx</p>\n<p>点击回到博客主页：<br><a href=\"http://kangchou001.cn/\" title=\"博客主页\">“博客主页”</a></p>\n"},{"title":"文章分类","date":"2020-04-05T16:20:16.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2020-04-06 00:20:16\ntype: \"categories\"\n---","updated":"2020-04-06T16:16:33.275Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck8owmspz000324ur10hi8995","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2020-04-05T15:26:06.000Z","type":"tags","_content":"\n\n- 算法\n- Python\n- 技巧\n- 机器学习","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2020-04-05 23:26:06\ntype: \"tags\"\n---\n\n\n- 算法\n- Python\n- 技巧\n- 机器学习","updated":"2020-04-06T16:41:20.967Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck8owmsq4000624ur1nqj8k3s","content":"<ul>\n<li>算法</li>\n<li>Python</li>\n<li>技巧</li>\n<li>机器学习</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>算法</li>\n<li>Python</li>\n<li>技巧</li>\n<li>机器学习</li>\n</ul>\n"},{"_content":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","source":"guestbook/index.md","raw":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","date":"2020-04-05T16:27:17.933Z","updated":"2020-04-05T16:27:17.933Z","path":"guestbook/index.html","title":"","comments":1,"layout":"page","_id":"ck8owmsq6000824urganpdvbv","content":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","site":{"data":{}},"excerpt":"","more":"<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>"}],"Post":[{"title":"Sublime Text 3 最新注册码（ 亲测可用2020年4月1日更新）","_content":"\n![](https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image.png](https://upload-images.jianshu.io/upload_images/15863171-418aadb6cbc16b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### “废话不多说直接上干货”\n[Github原文链接](https://github.com/KangChou/Sublime-Text-3--s-latest-activation-code)\n\n### 备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\n具体步骤请参考：\n[https://www.jianshu.com/p/b6fae22fee0f](https://www.jianshu.com/p/b6fae22fee0f)\n打开sublime text ,选择help-->enter license，将下面的代码内容复制到输入框中\n```\nZYNGA INC.\n50 User License\nEA7E-811825\n927BA117 84C9300F 4A0CCBC4 34A56B44\n985E4562 59F2B63B CCCFF92F 0E646B83\n0FD6487D 1507AE29 9CC4F9F5 0A6F32E3\n0343D868 C18E2CD5 27641A71 25475648\n309705B3 E468DDC4 1B766A18 7952D28C\nE627DDBA 960A2153 69A2D98A C87C0607\n45DC6049 8C04EC29 D18DFA40 442C680B\n\n1342224D 44D90641 33A3B9F2 46AADB8F\n```\n<!-- more -->\n执行结果解题如下：\n![激活成功](https://upload-images.jianshu.io/upload_images/15863171-68b125f633ef4e97.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 备注2：想永久激活那就请别更新，具体操作请查考上面的链接\n\n### 附件：Sublime Text2  最新注册码请点击下面的蓝色链接\n[Sublime Text  最新注册码（ 亲测可用2019年8月24日更新）](https://www.jianshu.com/p/b6fae22fee0f)\n#### 获取更多学习资源请扫码以下公众号二维码进行关注\n![AI科技与算法编程](https://upload-images.jianshu.io/upload_images/15863171-707fa71de174ba5f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","source":"_posts/hello-world  2.md","raw":"---\ntitle: Sublime Text 3 最新注册码（ 亲测可用2020年4月1日更新）\ncategories: 激活与安装\n---\n\n![](https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image.png](https://upload-images.jianshu.io/upload_images/15863171-418aadb6cbc16b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n#### “废话不多说直接上干货”\n[Github原文链接](https://github.com/KangChou/Sublime-Text-3--s-latest-activation-code)\n\n### 备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\n具体步骤请参考：\n[https://www.jianshu.com/p/b6fae22fee0f](https://www.jianshu.com/p/b6fae22fee0f)\n打开sublime text ,选择help-->enter license，将下面的代码内容复制到输入框中\n```\nZYNGA INC.\n50 User License\nEA7E-811825\n927BA117 84C9300F 4A0CCBC4 34A56B44\n985E4562 59F2B63B CCCFF92F 0E646B83\n0FD6487D 1507AE29 9CC4F9F5 0A6F32E3\n0343D868 C18E2CD5 27641A71 25475648\n309705B3 E468DDC4 1B766A18 7952D28C\nE627DDBA 960A2153 69A2D98A C87C0607\n45DC6049 8C04EC29 D18DFA40 442C680B\n\n1342224D 44D90641 33A3B9F2 46AADB8F\n```\n<!-- more -->\n执行结果解题如下：\n![激活成功](https://upload-images.jianshu.io/upload_images/15863171-68b125f633ef4e97.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 备注2：想永久激活那就请别更新，具体操作请查考上面的链接\n\n### 附件：Sublime Text2  最新注册码请点击下面的蓝色链接\n[Sublime Text  最新注册码（ 亲测可用2019年8月24日更新）](https://www.jianshu.com/p/b6fae22fee0f)\n#### 获取更多学习资源请扫码以下公众号二维码进行关注\n![AI科技与算法编程](https://upload-images.jianshu.io/upload_images/15863171-707fa71de174ba5f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n","slug":"hello-world  2","published":1,"date":"2020-04-05T09:41:37.888Z","updated":"2020-04-06T17:02:04.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8owmspo000024ur32sy4356","content":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-418aadb6cbc16b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h4 id=\"“废话不多说直接上干货”\"><a href=\"#“废话不多说直接上干货”\" class=\"headerlink\" title=\"“废话不多说直接上干货”\"></a>“废话不多说直接上干货”</h4><p><a href=\"https://github.com/KangChou/Sublime-Text-3--s-latest-activation-code\" target=\"_blank\" rel=\"noopener\">Github原文链接</a></p>\n<h3 id=\"备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\"><a href=\"#备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\" class=\"headerlink\" title=\"备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\"></a>备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整</h3><p>具体步骤请参考：<br><a href=\"https://www.jianshu.com/p/b6fae22fee0f\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b6fae22fee0f</a><br>打开sublime text ,选择help–&gt;enter license，将下面的代码内容复制到输入框中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZYNGA INC.</span><br><span class=\"line\">50 User License</span><br><span class=\"line\">EA7E-811825</span><br><span class=\"line\">927BA117 84C9300F 4A0CCBC4 34A56B44</span><br><span class=\"line\">985E4562 59F2B63B CCCFF92F 0E646B83</span><br><span class=\"line\">0FD6487D 1507AE29 9CC4F9F5 0A6F32E3</span><br><span class=\"line\">0343D868 C18E2CD5 27641A71 25475648</span><br><span class=\"line\">309705B3 E468DDC4 1B766A18 7952D28C</span><br><span class=\"line\">E627DDBA 960A2153 69A2D98A C87C0607</span><br><span class=\"line\">45DC6049 8C04EC29 D18DFA40 442C680B</span><br><span class=\"line\"></span><br><span class=\"line\">1342224D 44D90641 33A3B9F2 46AADB8F</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>执行结果解题如下：<br><img src=\"https://upload-images.jianshu.io/upload_images/15863171-68b125f633ef4e97.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"激活成功\"></p>\n<h3 id=\"备注2：想永久激活那就请别更新，具体操作请查考上面的链接\"><a href=\"#备注2：想永久激活那就请别更新，具体操作请查考上面的链接\" class=\"headerlink\" title=\"备注2：想永久激活那就请别更新，具体操作请查考上面的链接\"></a>备注2：想永久激活那就请别更新，具体操作请查考上面的链接</h3><h3 id=\"附件：Sublime-Text2-最新注册码请点击下面的蓝色链接\"><a href=\"#附件：Sublime-Text2-最新注册码请点击下面的蓝色链接\" class=\"headerlink\" title=\"附件：Sublime Text2  最新注册码请点击下面的蓝色链接\"></a>附件：Sublime Text2  最新注册码请点击下面的蓝色链接</h3><p><a href=\"https://www.jianshu.com/p/b6fae22fee0f\" target=\"_blank\" rel=\"noopener\">Sublime Text  最新注册码（ 亲测可用2019年8月24日更新）</a></p>\n<h4 id=\"获取更多学习资源请扫码以下公众号二维码进行关注\"><a href=\"#获取更多学习资源请扫码以下公众号二维码进行关注\" class=\"headerlink\" title=\"获取更多学习资源请扫码以下公众号二维码进行关注\"></a>获取更多学习资源请扫码以下公众号二维码进行关注</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-707fa71de174ba5f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"AI科技与算法编程\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-418aadb6cbc16b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image.png\"></p>\n<h4 id=\"“废话不多说直接上干货”\"><a href=\"#“废话不多说直接上干货”\" class=\"headerlink\" title=\"“废话不多说直接上干货”\"></a>“废话不多说直接上干货”</h4><p><a href=\"https://github.com/KangChou/Sublime-Text-3--s-latest-activation-code\" target=\"_blank\" rel=\"noopener\">Github原文链接</a></p>\n<h3 id=\"备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\"><a href=\"#备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\" class=\"headerlink\" title=\"备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整\"></a>备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整</h3><p>具体步骤请参考：<br><a href=\"https://www.jianshu.com/p/b6fae22fee0f\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b6fae22fee0f</a><br>打开sublime text ,选择help–&gt;enter license，将下面的代码内容复制到输入框中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ZYNGA INC.</span><br><span class=\"line\">50 User License</span><br><span class=\"line\">EA7E-811825</span><br><span class=\"line\">927BA117 84C9300F 4A0CCBC4 34A56B44</span><br><span class=\"line\">985E4562 59F2B63B CCCFF92F 0E646B83</span><br><span class=\"line\">0FD6487D 1507AE29 9CC4F9F5 0A6F32E3</span><br><span class=\"line\">0343D868 C18E2CD5 27641A71 25475648</span><br><span class=\"line\">309705B3 E468DDC4 1B766A18 7952D28C</span><br><span class=\"line\">E627DDBA 960A2153 69A2D98A C87C0607</span><br><span class=\"line\">45DC6049 8C04EC29 D18DFA40 442C680B</span><br><span class=\"line\"></span><br><span class=\"line\">1342224D 44D90641 33A3B9F2 46AADB8F</span><br></pre></td></tr></table></figure>","more":"<p>执行结果解题如下：<br><img src=\"https://upload-images.jianshu.io/upload_images/15863171-68b125f633ef4e97.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"激活成功\"></p>\n<h3 id=\"备注2：想永久激活那就请别更新，具体操作请查考上面的链接\"><a href=\"#备注2：想永久激活那就请别更新，具体操作请查考上面的链接\" class=\"headerlink\" title=\"备注2：想永久激活那就请别更新，具体操作请查考上面的链接\"></a>备注2：想永久激活那就请别更新，具体操作请查考上面的链接</h3><h3 id=\"附件：Sublime-Text2-最新注册码请点击下面的蓝色链接\"><a href=\"#附件：Sublime-Text2-最新注册码请点击下面的蓝色链接\" class=\"headerlink\" title=\"附件：Sublime Text2  最新注册码请点击下面的蓝色链接\"></a>附件：Sublime Text2  最新注册码请点击下面的蓝色链接</h3><p><a href=\"https://www.jianshu.com/p/b6fae22fee0f\" target=\"_blank\" rel=\"noopener\">Sublime Text  最新注册码（ 亲测可用2019年8月24日更新）</a></p>\n<h4 id=\"获取更多学习资源请扫码以下公众号二维码进行关注\"><a href=\"#获取更多学习资源请扫码以下公众号二维码进行关注\" class=\"headerlink\" title=\"获取更多学习资源请扫码以下公众号二维码进行关注\"></a>获取更多学习资源请扫码以下公众号二维码进行关注</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-707fa71de174ba5f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"AI科技与算法编程\"></p>"},{"title":"值得你阅读的Hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！","comments":1,"date":"2020-04-05T14:57:06.000Z","_content":"\n本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页\n\n[值得你阅读的Hexo个人博客搭建](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&mpshare=1&scene=1&srcid=&sharer_sharetime=1571762807076&sharer_shareid=d33f5fb4b35f5c6867199f25b3752a3a&key=b97804376b1264af0c3ca188cf96e5b8d3b5990c40809c5c043e6da161476ef8c6e3cef3a9329dcc6d4eec6f605d83d617cd92d6f6883c7b9b632ca8aaf81c0f84c846463da87113881750250a56879b&ascene=1&uin=MjE2NzAwOTgyNA%3D%3D&devicetype=Windows+7&version=62060844&lang=zh_CN&pass_ticket=fLo4Au8Vos0w%2Fs3CVdzWInlkCBCduYag%2BmLa3dny9lkniGqUIl0wnHtlfaWbwpJJ)\n\n<!-- more -->\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5d2cad24656d6ec6?imageMogr2/auto-orient/strip)\n\n**Hexo快速搭建个人博客（2019/10/22更新）**\n\n* * *\n\n**使用到的工具**  **（本教程统一在Windows系统下搭建）**\n\n**Node.js、Hexo、Git、Github账号、Sublime Text3**\n\n**请自行注册一个Github账号**\n\n**最后的部署到网上的博客展示**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-043a5ac720ecf50e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**文章目录：**\n\n***前言***\n\n***值得你知道的话***\n\n***一、从创建到部署博客***\n\n*****二、博客的网页主题*****\n\n*******三、更换域名+博客测试成功*******\n\n## 前言\n\n今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，**我发现我踩了不少坑**，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是**“乱”**，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我**一头雾水**、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。\n\n但我还是要告诫一下一些技术编辑者：\n\n**如果是怕别人偷学你的内容，那就不要发在网上；****如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要****让别人看懂你的文章，让别人欣赏你的作品**。其实，有时候还能看出一个人的品性。\n\n吐槽到此结束~**下面开始进入博客搭建环节**\n\n\n\n* * *\n\n**值得你知道到话：**\n\n**是的，你没有看错！**\n\n**不用服务器，不用注册域名，不用花钱，不用敲大代码等等**\n\n**一个博客就值得你拥有**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e986c13e7884ba5e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**一、从创建到部署博客**\n\n**1、安装好Node.js**\n\n**别忘了用命令npm检验Node.js安装是否完成，**\n\n**关于hexo的安装教程比较简单，**网上有很多完整的教程，在这里就不再赘述。****\n\n**安装Hexo 命令：**\n\n**npm install -g hexo-cli**\n\n做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。\n\n**2、安装好Git**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a4e86914d7fb9e91?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**3、在C盘下创建hexo文件夹**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4305fa235e22863c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**4、打开Hexo文件夹下，右键点击Git bash 下执行命令**\n\n**再使用一次这个命令：npm install hexo-cli -g**\n\n**创建博客KangChou：hexo init KangChou**\n\n**cd KangChou**\n\n**npm install**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-86626ca86774851f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ca1dd2643b1763df?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**5、命令hexo server启动github服务器**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-1e94d2681edcb4c7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**6、浏览博客**\n\n安照5中提示的网址**http://localhost:4000/**\n\n复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-413a5bb6f3a026d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<iframe js_editor_cpcad=\"\" class=\"js_cpc_area res_iframe cpc_iframe\" src=\"https://mp.weixin.qq.com/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1571758997949\" data-category_id_list=\"1|11|16|17|22|24|26|27|28|29|3|31|32|35|36|37|39|41|42|43|45|46|47|48|49|5|50|51|52|53|54|55|6|7|8\" data-id=\"1571758997949\" style=\"margin: 14px 0px; padding: 0px; border: 0px; width: 636.997px; height: 378px; z-index: 9999; position: relative; display: block;\"></iframe>\n\n* * *\n\n**7、部署前哨（一）：添加Github仓库地址**\n\n在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库\n\n**https://github.com/KangChou/KangChou.github.io.git**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-37a284670b9229e9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，**千万别用文本编辑器打开**），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f13b882b7caa2aa1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ed5e07e94af174d6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**8、部署前哨（二）：****部署插件**\n\n需要安装一个支持 Git 的部署插件： **hexo-deployer-git**，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错).\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d32abbfefeb8993c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**9、下面开始部署到Github**\n\n如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：**hexo deploy**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a75220ce47ab7fbb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n结尾....\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-493e6eac238f3015?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n可以发现出现了上面的报错提示：\n\n```\nError: Spawn failed\n```\n\n**解决方法第一次：**\n\n经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试：\n\n**https://blog.csdn.net/njc_sec/article/details/89021083**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ab8ed69e747e3063?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。\n\n\n**解决方法第二次：**\n\n因此我怀疑可能是仓库的地址出错，因此去看看了看地址\n\n这是原来的地址：\n\n```\ndeploy:\n```\n\n我按照出现错误提示中的网址去打开它：\n\n **https://hexo.io/docs/troubleshooting.html**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8c51d47cc7ef2771?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n并找到了部署到Github目前的语法规定的网页下\n\n**https://hexo.io/docs/github-pages**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d6b129e141a8145d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n按照上面对部署仓库的地址，我将上述的Deploy的源码修改为\n\n```\ndeploy:\n```\n\n于是我再试了上述的三个命令：\n\n**hexo clean**\n\n**hexo g**\n\n**hexo d**\n\n最终出现下面的结果:说明出现的问题解决了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-1f7057da994fc77a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n由于我起初没有部署仓库的密钥，所以要去仓库部署。\n\n\n\n* * *\n\n**10、创建的 ssh 密钥的密码**\n\n(1)、我打开了我得仓库，并找到了设置\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b8bf99f34165bc5a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（2）查看部署密钥指南以了解更多信息\n\n**https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys**\n\n**找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5）** \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8e7b841fcf04215d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）怎么创建SSH密钥?\n\n步骤：\n\n*   找到本地环境：C:\\Users\\admin\\.ssh   这个路径下的用户/名称/.ssh\n\n*   在这路径下，打开gitbub的命令控制台\n\n*   (I): git  init  //初始化一下，看看路径对不对\n\n       (II):ssh-keygen -t rsa -C \"你的邮箱\"\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b281bce325d745cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-131505bff939d0c3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-3c81f356789d79d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**点击Add SSH key获得下面结果**\n\n**注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-89e2033be93edf32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   密钥配置成功后，要验证一下是否配置成功\n\n    命令：ssh -T git@github.com \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-cc6a335f218b3320?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n出现下面提示，说明配置成功。\n\nHi KangChou/KangChou.github.io! You've successfully authenticated, but GitHub does not provide shell access\n\n\n\n* * *\n\n**11、再次使用密钥部署**\n\n仍然使用命令：\n\n**hexo clean**\n\n**hexo g**\n\n**hexo d**\n\n如果都没有问题就会出现下面的结果，输入你刚刚设置的**名**和**SSH的密码**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-def53ac7478a95a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n但是这里又出错了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d1bc176ec42c6cf0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-74d95c20e284e23b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n命令hexo d执行又出错\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d92a80fb7c0daede?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n下面终于找到了答案。这里要特别感谢**@李典金 @崔庆才**两位网络开发大佬的**细节**点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。\n\n* * *\n\n**12、终于部署成功**\n\n**最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误**\n\n因此，我去仓库找到了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f3ee696c4cb87cd1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4464f8f6a93f4809?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**再次输入命令hexo d执行以后出现下面的结果，**\n\n**出现Deploy done :git说明已经部署成功**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-9c5b976ce7d76499?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这时候我们访问一下 GitHub Repository 同名的链接，\n\n比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io，\n\n那我就访问 **http://KangChou.github.io**\n\n这时候我们就可以看到跟本地一模一样的博客内容了。\n\n（此时你用手机同样可以打开该网站）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-70ed2679f4199a51?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**二、博客的网页主题**\n\n主题的设置包括中文页面、整个页面的样式、页面风格等等，\n\n目前 Hexo 里面应用最多的主题基本就是 Next 主题，\n\n这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富，\n\n配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。\n\n* * *\n\n**13、下载主题**\n\n打开我的电脑创建的Hexo文件夹下的KangChou目录，\n\n单击右键Git bush输入下面的命令，执行结果如下：\n\n**git clone https://github.com/theme-next/hexo-theme-next themes/next**\n\n将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令\n\n**hexo server**\n\n执行结果如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5214e650d56b52e8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**14、配置中文环境**\n\n在博客kangchou目录下打开_config.yml修改语言为中文汉语**zh-Hans**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-97a8757ede80d883?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**执行的结果如下**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7019987a190e37b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**由于这只是部分为中文，而我的目的是大部分是中文的，**\n\n**为了方便还要在网页上手动添加更多中文描述**\n\n* * *\n\n****15、配置中文菜单栏****\n\n打开C:\\Hexo\\KangChou\\themes\\landscape\\languages\n\n**发有三种汉语:简体中文、香港繁体、台湾繁体**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f9eab1d43e4c88b0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后点开`zh-Hans.yml`其中的配置项就是已经翻译的文本\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-feb255f5e31c71c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n网站会根据你`站点配置``yml`中的语言配置来去读取对应的语言文件\n\n打开你`languages``皮肤配置``yml`你会看到菜单栏基础配置：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-97d28c5da514ced8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**发现home和archives菜单是开启的，**\n\n现在我们**全部开****启**，只需要去掉前面的#，刷新浏览器\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7d27267e3513c00?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**尝试修改站点配置yml语言，重启服务后刷新浏览器**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b98e3e122477a1f2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**显然结果很成功，****下面关闭git,将结果上传到Github页面：**\n\n**重新打开输入部署的三个命令：**\n\n**hexo clean** \n\n**hexo g** \n\n**hexo d**\n\n**结果和上面一样，此时就可以访问了.**\n\n**访问网站****https://kangchou.github.io/**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-6a1efa620e95e530?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**实际上文章到这里就已经结束博客的搭建了，至于其他的**\n\n**比如上传文章、上传图片，添加logo等这些我这里就不说了，**\n\n**hexo官网以及其他网站都能搜索到具体的教程，**\n\n**想继续完善博客网站部署的朋友可以去搜索相关文献学习。**\n\n**三、更换域名**\n\n**相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。****因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。****事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。****不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。****如果不想花钱买域名的，这一小节可以跳过。********16、购买域名+注册阿里网+实名认证********自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是****一定要使用自己在学校注册的电子邮箱****，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。****![image](https://upload-images.jianshu.io/upload_images/15863171-f3c8e7d17283f43d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)** **然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）****https://www.aliyun.com/**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a028317d842d34b8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******![image](https://upload-images.jianshu.io/upload_images/15863171-bcaf075232acdbdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)****** \n\n## ******17、在阿里云添加域名解析******\n\ncmd+ping你的http://github.io域名，得到一个IP\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d18a11e68e24e027?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n修改你的域名解析记录\n\n**添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，**\n\n**这样通过https://kangchou001.cn/就能访问到你的博客了**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-9cd1f1c2795c5b34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bf614aded754aa07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******18、******填写绑定的域名在你的本地文件下也就是hexo—>你的博客（我的是KangChou）本地目录下找到 文件夹`source` ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件**没有任何扩展名**（切记）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4540a14e0f6958d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再一次使用部署三命令**hexo clean****hexo g****hexo d****完成以后，**进入Github设置，找到 Custom domain添加域名后保存即可\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e19a027997a12e07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******19、刷新网页+更改域名成功******\n\n**如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-3a79faab75fee299?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-72c6ba2cdc3ddde6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**……到此完成了本博客的搭建……**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4ef2eaac3b9bccd6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n投稿--->展示你的才华\n\n请发邮件到\n\n**kangsinx@yeah.net**\n\n标题注明【投稿】\n\n告诉我们\n\n你是谁，从哪来，投什么\n\n我们会及时回复你\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-808d129cea0370eb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n","source":"_posts/kangsinx.md","raw":"---\ntitle: 值得你阅读的Hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！\ncategories: 博客教程\ncomments: true\ndate: 2020-04-05 22:57:06\n---\n\n本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页\n\n[值得你阅读的Hexo个人博客搭建](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&mpshare=1&scene=1&srcid=&sharer_sharetime=1571762807076&sharer_shareid=d33f5fb4b35f5c6867199f25b3752a3a&key=b97804376b1264af0c3ca188cf96e5b8d3b5990c40809c5c043e6da161476ef8c6e3cef3a9329dcc6d4eec6f605d83d617cd92d6f6883c7b9b632ca8aaf81c0f84c846463da87113881750250a56879b&ascene=1&uin=MjE2NzAwOTgyNA%3D%3D&devicetype=Windows+7&version=62060844&lang=zh_CN&pass_ticket=fLo4Au8Vos0w%2Fs3CVdzWInlkCBCduYag%2BmLa3dny9lkniGqUIl0wnHtlfaWbwpJJ)\n\n<!-- more -->\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5d2cad24656d6ec6?imageMogr2/auto-orient/strip)\n\n**Hexo快速搭建个人博客（2019/10/22更新）**\n\n* * *\n\n**使用到的工具**  **（本教程统一在Windows系统下搭建）**\n\n**Node.js、Hexo、Git、Github账号、Sublime Text3**\n\n**请自行注册一个Github账号**\n\n**最后的部署到网上的博客展示**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-043a5ac720ecf50e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**文章目录：**\n\n***前言***\n\n***值得你知道的话***\n\n***一、从创建到部署博客***\n\n*****二、博客的网页主题*****\n\n*******三、更换域名+博客测试成功*******\n\n## 前言\n\n今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，**我发现我踩了不少坑**，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是**“乱”**，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我**一头雾水**、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。\n\n但我还是要告诫一下一些技术编辑者：\n\n**如果是怕别人偷学你的内容，那就不要发在网上；****如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要****让别人看懂你的文章，让别人欣赏你的作品**。其实，有时候还能看出一个人的品性。\n\n吐槽到此结束~**下面开始进入博客搭建环节**\n\n\n\n* * *\n\n**值得你知道到话：**\n\n**是的，你没有看错！**\n\n**不用服务器，不用注册域名，不用花钱，不用敲大代码等等**\n\n**一个博客就值得你拥有**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e986c13e7884ba5e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**一、从创建到部署博客**\n\n**1、安装好Node.js**\n\n**别忘了用命令npm检验Node.js安装是否完成，**\n\n**关于hexo的安装教程比较简单，**网上有很多完整的教程，在这里就不再赘述。****\n\n**安装Hexo 命令：**\n\n**npm install -g hexo-cli**\n\n做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。\n\n**2、安装好Git**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a4e86914d7fb9e91?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**3、在C盘下创建hexo文件夹**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4305fa235e22863c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**4、打开Hexo文件夹下，右键点击Git bash 下执行命令**\n\n**再使用一次这个命令：npm install hexo-cli -g**\n\n**创建博客KangChou：hexo init KangChou**\n\n**cd KangChou**\n\n**npm install**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-86626ca86774851f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ca1dd2643b1763df?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**5、命令hexo server启动github服务器**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-1e94d2681edcb4c7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**6、浏览博客**\n\n安照5中提示的网址**http://localhost:4000/**\n\n复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-413a5bb6f3a026d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<iframe js_editor_cpcad=\"\" class=\"js_cpc_area res_iframe cpc_iframe\" src=\"https://mp.weixin.qq.com/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1571758997949\" data-category_id_list=\"1|11|16|17|22|24|26|27|28|29|3|31|32|35|36|37|39|41|42|43|45|46|47|48|49|5|50|51|52|53|54|55|6|7|8\" data-id=\"1571758997949\" style=\"margin: 14px 0px; padding: 0px; border: 0px; width: 636.997px; height: 378px; z-index: 9999; position: relative; display: block;\"></iframe>\n\n* * *\n\n**7、部署前哨（一）：添加Github仓库地址**\n\n在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库\n\n**https://github.com/KangChou/KangChou.github.io.git**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-37a284670b9229e9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，**千万别用文本编辑器打开**），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f13b882b7caa2aa1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ed5e07e94af174d6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**8、部署前哨（二）：****部署插件**\n\n需要安装一个支持 Git 的部署插件： **hexo-deployer-git**，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错).\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d32abbfefeb8993c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**9、下面开始部署到Github**\n\n如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：**hexo deploy**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a75220ce47ab7fbb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n结尾....\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-493e6eac238f3015?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n可以发现出现了上面的报错提示：\n\n```\nError: Spawn failed\n```\n\n**解决方法第一次：**\n\n经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试：\n\n**https://blog.csdn.net/njc_sec/article/details/89021083**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ab8ed69e747e3063?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。\n\n\n**解决方法第二次：**\n\n因此我怀疑可能是仓库的地址出错，因此去看看了看地址\n\n这是原来的地址：\n\n```\ndeploy:\n```\n\n我按照出现错误提示中的网址去打开它：\n\n **https://hexo.io/docs/troubleshooting.html**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8c51d47cc7ef2771?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n并找到了部署到Github目前的语法规定的网页下\n\n**https://hexo.io/docs/github-pages**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d6b129e141a8145d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n按照上面对部署仓库的地址，我将上述的Deploy的源码修改为\n\n```\ndeploy:\n```\n\n于是我再试了上述的三个命令：\n\n**hexo clean**\n\n**hexo g**\n\n**hexo d**\n\n最终出现下面的结果:说明出现的问题解决了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-1f7057da994fc77a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n由于我起初没有部署仓库的密钥，所以要去仓库部署。\n\n\n\n* * *\n\n**10、创建的 ssh 密钥的密码**\n\n(1)、我打开了我得仓库，并找到了设置\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b8bf99f34165bc5a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（2）查看部署密钥指南以了解更多信息\n\n**https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys**\n\n**找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5）** \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8e7b841fcf04215d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）怎么创建SSH密钥?\n\n步骤：\n\n*   找到本地环境：C:\\Users\\admin\\.ssh   这个路径下的用户/名称/.ssh\n\n*   在这路径下，打开gitbub的命令控制台\n\n*   (I): git  init  //初始化一下，看看路径对不对\n\n       (II):ssh-keygen -t rsa -C \"你的邮箱\"\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b281bce325d745cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-131505bff939d0c3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-3c81f356789d79d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**点击Add SSH key获得下面结果**\n\n**注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-89e2033be93edf32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n*   密钥配置成功后，要验证一下是否配置成功\n\n    命令：ssh -T git@github.com \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-cc6a335f218b3320?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n出现下面提示，说明配置成功。\n\nHi KangChou/KangChou.github.io! You've successfully authenticated, but GitHub does not provide shell access\n\n\n\n* * *\n\n**11、再次使用密钥部署**\n\n仍然使用命令：\n\n**hexo clean**\n\n**hexo g**\n\n**hexo d**\n\n如果都没有问题就会出现下面的结果，输入你刚刚设置的**名**和**SSH的密码**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-def53ac7478a95a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n但是这里又出错了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d1bc176ec42c6cf0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-74d95c20e284e23b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n命令hexo d执行又出错\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d92a80fb7c0daede?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n下面终于找到了答案。这里要特别感谢**@李典金 @崔庆才**两位网络开发大佬的**细节**点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。\n\n* * *\n\n**12、终于部署成功**\n\n**最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误**\n\n因此，我去仓库找到了\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f3ee696c4cb87cd1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4464f8f6a93f4809?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**再次输入命令hexo d执行以后出现下面的结果，**\n\n**出现Deploy done :git说明已经部署成功**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-9c5b976ce7d76499?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这时候我们访问一下 GitHub Repository 同名的链接，\n\n比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io，\n\n那我就访问 **http://KangChou.github.io**\n\n这时候我们就可以看到跟本地一模一样的博客内容了。\n\n（此时你用手机同样可以打开该网站）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-70ed2679f4199a51?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**二、博客的网页主题**\n\n主题的设置包括中文页面、整个页面的样式、页面风格等等，\n\n目前 Hexo 里面应用最多的主题基本就是 Next 主题，\n\n这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富，\n\n配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。\n\n* * *\n\n**13、下载主题**\n\n打开我的电脑创建的Hexo文件夹下的KangChou目录，\n\n单击右键Git bush输入下面的命令，执行结果如下：\n\n**git clone https://github.com/theme-next/hexo-theme-next themes/next**\n\n将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令\n\n**hexo server**\n\n执行结果如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5214e650d56b52e8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**14、配置中文环境**\n\n在博客kangchou目录下打开_config.yml修改语言为中文汉语**zh-Hans**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-97a8757ede80d883?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**执行的结果如下**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7019987a190e37b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**由于这只是部分为中文，而我的目的是大部分是中文的，**\n\n**为了方便还要在网页上手动添加更多中文描述**\n\n* * *\n\n****15、配置中文菜单栏****\n\n打开C:\\Hexo\\KangChou\\themes\\landscape\\languages\n\n**发有三种汉语:简体中文、香港繁体、台湾繁体**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f9eab1d43e4c88b0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n然后点开`zh-Hans.yml`其中的配置项就是已经翻译的文本\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-feb255f5e31c71c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n网站会根据你`站点配置``yml`中的语言配置来去读取对应的语言文件\n\n打开你`languages``皮肤配置``yml`你会看到菜单栏基础配置：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-97d28c5da514ced8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**发现home和archives菜单是开启的，**\n\n现在我们**全部开****启**，只需要去掉前面的#，刷新浏览器\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7d27267e3513c00?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**尝试修改站点配置yml语言，重启服务后刷新浏览器**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b98e3e122477a1f2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**显然结果很成功，****下面关闭git,将结果上传到Github页面：**\n\n**重新打开输入部署的三个命令：**\n\n**hexo clean** \n\n**hexo g** \n\n**hexo d**\n\n**结果和上面一样，此时就可以访问了.**\n\n**访问网站****https://kangchou.github.io/**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-6a1efa620e95e530?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n* * *\n\n**实际上文章到这里就已经结束博客的搭建了，至于其他的**\n\n**比如上传文章、上传图片，添加logo等这些我这里就不说了，**\n\n**hexo官网以及其他网站都能搜索到具体的教程，**\n\n**想继续完善博客网站部署的朋友可以去搜索相关文献学习。**\n\n**三、更换域名**\n\n**相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。****因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。****事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。****不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。****如果不想花钱买域名的，这一小节可以跳过。********16、购买域名+注册阿里网+实名认证********自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是****一定要使用自己在学校注册的电子邮箱****，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。****![image](https://upload-images.jianshu.io/upload_images/15863171-f3c8e7d17283f43d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)** **然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）****https://www.aliyun.com/**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a028317d842d34b8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******![image](https://upload-images.jianshu.io/upload_images/15863171-bcaf075232acdbdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)****** \n\n## ******17、在阿里云添加域名解析******\n\ncmd+ping你的http://github.io域名，得到一个IP\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d18a11e68e24e027?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n修改你的域名解析记录\n\n**添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，**\n\n**这样通过https://kangchou001.cn/就能访问到你的博客了**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-9cd1f1c2795c5b34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bf614aded754aa07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******18、******填写绑定的域名在你的本地文件下也就是hexo—>你的博客（我的是KangChou）本地目录下找到 文件夹`source` ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件**没有任何扩展名**（切记）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4540a14e0f6958d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再一次使用部署三命令**hexo clean****hexo g****hexo d****完成以后，**进入Github设置，找到 Custom domain添加域名后保存即可\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e19a027997a12e07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n******19、刷新网页+更改域名成功******\n\n**如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-3a79faab75fee299?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-72c6ba2cdc3ddde6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**……到此完成了本博客的搭建……**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-4ef2eaac3b9bccd6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n投稿--->展示你的才华\n\n请发邮件到\n\n**kangsinx@yeah.net**\n\n标题注明【投稿】\n\n告诉我们\n\n你是谁，从哪来，投什么\n\n我们会及时回复你\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-808d129cea0370eb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n","slug":"kangsinx","published":1,"updated":"2020-04-06T17:01:47.950Z","layout":"post","photos":[],"link":"","_id":"ck8owmspx000224ur08u5gxm1","content":"<p>本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&mpshare=1&scene=1&srcid=&sharer_sharetime=1571762807076&sharer_shareid=d33f5fb4b35f5c6867199f25b3752a3a&key=b97804376b1264af0c3ca188cf96e5b8d3b5990c40809c5c043e6da161476ef8c6e3cef3a9329dcc6d4eec6f605d83d617cd92d6f6883c7b9b632ca8aaf81c0f84c846463da87113881750250a56879b&ascene=1&uin=MjE2NzAwOTgyNA%3D%3D&devicetype=Windows+7&version=62060844&lang=zh_CN&pass_ticket=fLo4Au8Vos0w%2Fs3CVdzWInlkCBCduYag%2BmLa3dny9lkniGqUIl0wnHtlfaWbwpJJ\" target=\"_blank\" rel=\"noopener\">值得你阅读的Hexo个人博客搭建</a></p>\n<a id=\"more\"></a>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5d2cad24656d6ec6?imageMogr2/auto-orient/strip\" alt=\"image\"></p>\n<p><strong>Hexo快速搭建个人博客（2019/10/22更新）</strong></p>\n<hr>\n<p><strong>使用到的工具</strong>  <strong>（本教程统一在Windows系统下搭建）</strong></p>\n<p><strong>Node.js、Hexo、Git、Github账号、Sublime Text3</strong></p>\n<p><strong>请自行注册一个Github账号</strong></p>\n<p><strong>最后的部署到网上的博客展示</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-043a5ac720ecf50e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>文章目录：</strong></p>\n<p><strong><em>前言</em></strong></p>\n<p><strong><em>值得你知道的话</em></strong></p>\n<p><strong><em>一、从创建到部署博客</em></strong></p>\n<p><strong><strong><em>二、博客的网页主题</em></strong></strong></p>\n<p><strong>***</strong>三、更换域名+博客测试成功<strong>***</strong></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，<strong>我发现我踩了不少坑</strong>，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是<strong>“乱”</strong>，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我<strong>一头雾水</strong>、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。</p>\n<p>但我还是要告诫一下一些技术编辑者：</p>\n<p><strong>如果是怕别人偷学你的内容，那就不要发在网上；**</strong>如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要<strong>**让别人看懂你的文章，让别人欣赏你的作品</strong>。其实，有时候还能看出一个人的品性。</p>\n<p>吐槽到此结束~<strong>下面开始进入博客搭建环节</strong></p>\n<hr>\n<p><strong>值得你知道到话：</strong></p>\n<p><strong>是的，你没有看错！</strong></p>\n<p><strong>不用服务器，不用注册域名，不用花钱，不用敲大代码等等</strong></p>\n<p><strong>一个博客就值得你拥有</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e986c13e7884ba5e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>一、从创建到部署博客</strong></p>\n<p><strong>1、安装好Node.js</strong></p>\n<p><strong>别忘了用命令npm检验Node.js安装是否完成，</strong></p>\n<p><strong>关于hexo的安装教程比较简单，</strong>网上有很多完整的教程，在这里就不再赘述。****</p>\n<p><strong>安装Hexo 命令：</strong></p>\n<p><strong>npm install -g hexo-cli</strong></p>\n<p>做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。</p>\n<p><strong>2、安装好Git</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a4e86914d7fb9e91?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>3、在C盘下创建hexo文件夹</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4305fa235e22863c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>4、打开Hexo文件夹下，右键点击Git bash 下执行命令</strong></p>\n<p><strong>再使用一次这个命令：npm install hexo-cli -g</strong></p>\n<p><strong>创建博客KangChou：hexo init KangChou</strong></p>\n<p><strong>cd KangChou</strong></p>\n<p><strong>npm install</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-86626ca86774851f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ca1dd2643b1763df?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>5、命令hexo server启动github服务器</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-1e94d2681edcb4c7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>6、浏览博客</strong></p>\n<p>安照5中提示的网址<strong><a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a></strong></p>\n<p>复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-413a5bb6f3a026d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<iframe js_editor_cpcad class=\"js_cpc_area res_iframe cpc_iframe\" src=\"https://mp.weixin.qq.com/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1571758997949\" data-category_id_list=\"1|11|16|17|22|24|26|27|28|29|3|31|32|35|36|37|39|41|42|43|45|46|47|48|49|5|50|51|52|53|54|55|6|7|8\" data-id=\"1571758997949\" style=\"margin: 14px 0px; padding: 0px; border: 0px; width: 636.997px; height: 378px; z-index: 9999; position: relative; display: block;\"></iframe>\n\n<hr>\n<p><strong>7、部署前哨（一）：添加Github仓库地址</strong></p>\n<p>在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库</p>\n<p><strong><a href=\"https://github.com/KangChou/KangChou.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/KangChou/KangChou.github.io.git</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-37a284670b9229e9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，<strong>千万别用文本编辑器打开</strong>），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f13b882b7caa2aa1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ed5e07e94af174d6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>8、部署前哨（二）：**</strong>部署插件**</p>\n<p>需要安装一个支持 Git 的部署插件： <strong>hexo-deployer-git</strong>，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错).</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d32abbfefeb8993c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>9、下面开始部署到Github</strong></p>\n<p>如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：<strong>hexo deploy</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a75220ce47ab7fbb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>结尾….</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-493e6eac238f3015?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>可以发现出现了上面的报错提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: Spawn failed</span><br></pre></td></tr></table></figure>\n\n<p><strong>解决方法第一次：</strong></p>\n<p>经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试：</p>\n<p><strong><a href=\"https://blog.csdn.net/njc_sec/article/details/89021083\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/njc_sec/article/details/89021083</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ab8ed69e747e3063?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。</p>\n<p><strong>解决方法第二次：</strong></p>\n<p>因此我怀疑可能是仓库的地址出错，因此去看看了看地址</p>\n<p>这是原来的地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br></pre></td></tr></table></figure>\n\n<p>我按照出现错误提示中的网址去打开它：</p>\n<p> <strong><a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/troubleshooting.html</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8c51d47cc7ef2771?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>并找到了部署到Github目前的语法规定的网页下</p>\n<p><strong><a href=\"https://hexo.io/docs/github-pages\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/github-pages</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d6b129e141a8145d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>按照上面对部署仓库的地址，我将上述的Deploy的源码修改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br></pre></td></tr></table></figure>\n\n<p>于是我再试了上述的三个命令：</p>\n<p><strong>hexo clean</strong></p>\n<p><strong>hexo g</strong></p>\n<p><strong>hexo d</strong></p>\n<p>最终出现下面的结果:说明出现的问题解决了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-1f7057da994fc77a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>由于我起初没有部署仓库的密钥，所以要去仓库部署。</p>\n<hr>\n<p><strong>10、创建的 ssh 密钥的密码</strong></p>\n<p>(1)、我打开了我得仓库，并找到了设置</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b8bf99f34165bc5a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（2）查看部署密钥指南以了解更多信息</p>\n<p><strong><a href=\"https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys\" target=\"_blank\" rel=\"noopener\">https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys</a></strong></p>\n<p><strong>找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5）</strong> </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8e7b841fcf04215d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）怎么创建SSH密钥?</p>\n<p>步骤：</p>\n<ul>\n<li><p>找到本地环境：C:\\Users\\admin.ssh   这个路径下的用户/名称/.ssh</p>\n</li>\n<li><p>在这路径下，打开gitbub的命令控制台</p>\n</li>\n<li><p>(I): git  init  //初始化一下，看看路径对不对</p>\n<p>   (II):ssh-keygen -t rsa -C “你的邮箱”</p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b281bce325d745cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li>到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-131505bff939d0c3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li>生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方）</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-3c81f356789d79d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>点击Add SSH key获得下面结果</strong></p>\n<p><strong>注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-89e2033be93edf32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li><p>密钥配置成功后，要验证一下是否配置成功</p>\n<p>命令：ssh -T <a href=\"mailto:git@github.com\">git@github.com</a> </p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-cc6a335f218b3320?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>出现下面提示，说明配置成功。</p>\n<p>Hi KangChou/KangChou.github.io! You’ve successfully authenticated, but GitHub does not provide shell access</p>\n<hr>\n<p><strong>11、再次使用密钥部署</strong></p>\n<p>仍然使用命令：</p>\n<p><strong>hexo clean</strong></p>\n<p><strong>hexo g</strong></p>\n<p><strong>hexo d</strong></p>\n<p>如果都没有问题就会出现下面的结果，输入你刚刚设置的<strong>名</strong>和<strong>SSH的密码</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-def53ac7478a95a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>但是这里又出错了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d1bc176ec42c6cf0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-74d95c20e284e23b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>命令hexo d执行又出错</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d92a80fb7c0daede?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>下面终于找到了答案。这里要特别感谢<strong>@李典金 @崔庆才</strong>两位网络开发大佬的<strong>细节</strong>点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。</p>\n<hr>\n<p><strong>12、终于部署成功</strong></p>\n<p><strong>最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误</strong></p>\n<p>因此，我去仓库找到了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f3ee696c4cb87cd1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4464f8f6a93f4809?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>再次输入命令hexo d执行以后出现下面的结果，</strong></p>\n<p><strong>出现Deploy done :git说明已经部署成功</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-9c5b976ce7d76499?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>这时候我们访问一下 GitHub Repository 同名的链接，</p>\n<p>比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io，</p>\n<p>那我就访问 <strong><a href=\"http://KangChou.github.io\" target=\"_blank\" rel=\"noopener\">http://KangChou.github.io</a></strong></p>\n<p>这时候我们就可以看到跟本地一模一样的博客内容了。</p>\n<p>（此时你用手机同样可以打开该网站）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-70ed2679f4199a51?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>二、博客的网页主题</strong></p>\n<p>主题的设置包括中文页面、整个页面的样式、页面风格等等，</p>\n<p>目前 Hexo 里面应用最多的主题基本就是 Next 主题，</p>\n<p>这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富，</p>\n<p>配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。</p>\n<hr>\n<p><strong>13、下载主题</strong></p>\n<p>打开我的电脑创建的Hexo文件夹下的KangChou目录，</p>\n<p>单击右键Git bush输入下面的命令，执行结果如下：</p>\n<p><strong>git clone <a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-theme-next</a> themes/next</strong></p>\n<p>将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令</p>\n<p><strong>hexo server</strong></p>\n<p>执行结果如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5214e650d56b52e8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>14、配置中文环境</strong></p>\n<p>在博客kangchou目录下打开_config.yml修改语言为中文汉语<strong>zh-Hans</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-97a8757ede80d883?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>执行的结果如下</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7019987a190e37b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>由于这只是部分为中文，而我的目的是大部分是中文的，</strong></p>\n<p><strong>为了方便还要在网页上手动添加更多中文描述</strong></p>\n<hr>\n<p><strong><strong>15、配置中文菜单栏</strong></strong></p>\n<p>打开C:\\Hexo\\KangChou\\themes\\landscape\\languages</p>\n<p><strong>发有三种汉语:简体中文、香港繁体、台湾繁体</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f9eab1d43e4c88b0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>然后点开<code>zh-Hans.yml</code>其中的配置项就是已经翻译的文本</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-feb255f5e31c71c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>网站会根据你<code>站点配置``yml</code>中的语言配置来去读取对应的语言文件</p>\n<p>打开你<code>languages``皮肤配置``yml</code>你会看到菜单栏基础配置：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-97d28c5da514ced8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>发现home和archives菜单是开启的，</strong></p>\n<p>现在我们<strong>全部开**</strong>启**，只需要去掉前面的#，刷新浏览器</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7d27267e3513c00?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>尝试修改站点配置yml语言，重启服务后刷新浏览器</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b98e3e122477a1f2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>显然结果很成功，**</strong>下面关闭git,将结果上传到Github页面：**</p>\n<p><strong>重新打开输入部署的三个命令：</strong></p>\n<p><strong>hexo clean</strong> </p>\n<p><strong>hexo g</strong> </p>\n<p><strong>hexo d</strong></p>\n<p><strong>结果和上面一样，此时就可以访问了.</strong></p>\n<p><strong>访问网站**</strong><a href=\"https://kangchou.github.io/\" target=\"_blank\" rel=\"noopener\">https://kangchou.github.io/</a>**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-6a1efa620e95e530?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>实际上文章到这里就已经结束博客的搭建了，至于其他的</strong></p>\n<p><strong>比如上传文章、上传图片，添加logo等这些我这里就不说了，</strong></p>\n<p><strong>hexo官网以及其他网站都能搜索到具体的教程，</strong></p>\n<p><strong>想继续完善博客网站部署的朋友可以去搜索相关文献学习。</strong></p>\n<p><strong>三、更换域名</strong></p>\n<p><strong>相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。**</strong>因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。<strong><strong>事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。</strong></strong>不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。<strong><strong>如果不想花钱买域名的，这一小节可以跳过。****</strong></strong>16、购买域名+注册阿里网+实名认证<strong>****</strong>自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是<strong><strong>一定要使用自己在学校注册的电子邮箱</strong></strong>，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。<strong>**<img src=\"https://upload-images.jianshu.io/upload_images/15863171-f3c8e7d17283f43d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></strong> <strong>然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）**</strong><a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://www.aliyun.com/</a>**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a028317d842d34b8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bcaf075232acdbdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"><strong>**</strong> </p>\n<h2 id=\"17、在阿里云添加域名解析\"><a href=\"#17、在阿里云添加域名解析\" class=\"headerlink\" title=\"**17、在阿里云添加域名解析**\"></a><strong>**</strong>17、在阿里云添加域名解析<strong>**</strong></h2><p>cmd+ping你的<a href=\"http://github.io域名，得到一个IP\" target=\"_blank\" rel=\"noopener\">http://github.io域名，得到一个IP</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d18a11e68e24e027?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>修改你的域名解析记录</p>\n<p><strong>添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，</strong></p>\n<p><strong>这样通过<a href=\"https://kangchou001.cn/就能访问到你的博客了\">https://kangchou001.cn/就能访问到你的博客了</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-9cd1f1c2795c5b34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bf614aded754aa07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong>18、<strong>**</strong>填写绑定的域名在你的本地文件下也就是hexo—&gt;你的博客（我的是KangChou）本地目录下找到 文件夹<code>source</code> ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件<strong>没有任何扩展名</strong>（切记）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4540a14e0f6958d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再一次使用部署三命令<strong>hexo clean**</strong>hexo g<strong><strong>hexo d</strong></strong>完成以后，**进入Github设置，找到 Custom domain添加域名后保存即可</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e19a027997a12e07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong>19、刷新网页+更改域名成功<strong>**</strong></p>\n<p><strong>如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-3a79faab75fee299?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-72c6ba2cdc3ddde6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>……到此完成了本博客的搭建……</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4ef2eaac3b9bccd6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>投稿—&gt;展示你的才华</p>\n<p>请发邮件到</p>\n<p><strong><a href=\"mailto:kangsinx@yeah.net\">kangsinx@yeah.net</a></strong></p>\n<p>标题注明【投稿】</p>\n<p>告诉我们</p>\n<p>你是谁，从哪来，投什么</p>\n<p>我们会及时回复你</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-808d129cea0370eb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"<p>本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页</p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&mpshare=1&scene=1&srcid=&sharer_sharetime=1571762807076&sharer_shareid=d33f5fb4b35f5c6867199f25b3752a3a&key=b97804376b1264af0c3ca188cf96e5b8d3b5990c40809c5c043e6da161476ef8c6e3cef3a9329dcc6d4eec6f605d83d617cd92d6f6883c7b9b632ca8aaf81c0f84c846463da87113881750250a56879b&ascene=1&uin=MjE2NzAwOTgyNA%3D%3D&devicetype=Windows+7&version=62060844&lang=zh_CN&pass_ticket=fLo4Au8Vos0w%2Fs3CVdzWInlkCBCduYag%2BmLa3dny9lkniGqUIl0wnHtlfaWbwpJJ\" target=\"_blank\" rel=\"noopener\">值得你阅读的Hexo个人博客搭建</a></p>","more":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5d2cad24656d6ec6?imageMogr2/auto-orient/strip\" alt=\"image\"></p>\n<p><strong>Hexo快速搭建个人博客（2019/10/22更新）</strong></p>\n<hr>\n<p><strong>使用到的工具</strong>  <strong>（本教程统一在Windows系统下搭建）</strong></p>\n<p><strong>Node.js、Hexo、Git、Github账号、Sublime Text3</strong></p>\n<p><strong>请自行注册一个Github账号</strong></p>\n<p><strong>最后的部署到网上的博客展示</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-043a5ac720ecf50e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>文章目录：</strong></p>\n<p><strong><em>前言</em></strong></p>\n<p><strong><em>值得你知道的话</em></strong></p>\n<p><strong><em>一、从创建到部署博客</em></strong></p>\n<p><strong><strong><em>二、博客的网页主题</em></strong></strong></p>\n<p><strong>***</strong>三、更换域名+博客测试成功<strong>***</strong></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，<strong>我发现我踩了不少坑</strong>，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是<strong>“乱”</strong>，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我<strong>一头雾水</strong>、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。</p>\n<p>但我还是要告诫一下一些技术编辑者：</p>\n<p><strong>如果是怕别人偷学你的内容，那就不要发在网上；**</strong>如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要<strong>**让别人看懂你的文章，让别人欣赏你的作品</strong>。其实，有时候还能看出一个人的品性。</p>\n<p>吐槽到此结束~<strong>下面开始进入博客搭建环节</strong></p>\n<hr>\n<p><strong>值得你知道到话：</strong></p>\n<p><strong>是的，你没有看错！</strong></p>\n<p><strong>不用服务器，不用注册域名，不用花钱，不用敲大代码等等</strong></p>\n<p><strong>一个博客就值得你拥有</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e986c13e7884ba5e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>一、从创建到部署博客</strong></p>\n<p><strong>1、安装好Node.js</strong></p>\n<p><strong>别忘了用命令npm检验Node.js安装是否完成，</strong></p>\n<p><strong>关于hexo的安装教程比较简单，</strong>网上有很多完整的教程，在这里就不再赘述。****</p>\n<p><strong>安装Hexo 命令：</strong></p>\n<p><strong>npm install -g hexo-cli</strong></p>\n<p>做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。</p>\n<p><strong>2、安装好Git</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a4e86914d7fb9e91?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>3、在C盘下创建hexo文件夹</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4305fa235e22863c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>4、打开Hexo文件夹下，右键点击Git bash 下执行命令</strong></p>\n<p><strong>再使用一次这个命令：npm install hexo-cli -g</strong></p>\n<p><strong>创建博客KangChou：hexo init KangChou</strong></p>\n<p><strong>cd KangChou</strong></p>\n<p><strong>npm install</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-86626ca86774851f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ca1dd2643b1763df?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>5、命令hexo server启动github服务器</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-1e94d2681edcb4c7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>6、浏览博客</strong></p>\n<p>安照5中提示的网址<strong><a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/</a></strong></p>\n<p>复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-413a5bb6f3a026d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<iframe js_editor_cpcad class=\"js_cpc_area res_iframe cpc_iframe\" src=\"https://mp.weixin.qq.com/cgi-bin/readtemplate?t=tmpl/cpc_tmpl#1571758997949\" data-category_id_list=\"1|11|16|17|22|24|26|27|28|29|3|31|32|35|36|37|39|41|42|43|45|46|47|48|49|5|50|51|52|53|54|55|6|7|8\" data-id=\"1571758997949\" style=\"margin: 14px 0px; padding: 0px; border: 0px; width: 636.997px; height: 378px; z-index: 9999; position: relative; display: block;\"></iframe>\n\n<hr>\n<p><strong>7、部署前哨（一）：添加Github仓库地址</strong></p>\n<p>在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库</p>\n<p><strong><a href=\"https://github.com/KangChou/KangChou.github.io.git\" target=\"_blank\" rel=\"noopener\">https://github.com/KangChou/KangChou.github.io.git</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-37a284670b9229e9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，<strong>千万别用文本编辑器打开</strong>），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f13b882b7caa2aa1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ed5e07e94af174d6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>8、部署前哨（二）：**</strong>部署插件**</p>\n<p>需要安装一个支持 Git 的部署插件： <strong>hexo-deployer-git</strong>，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错).</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d32abbfefeb8993c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>9、下面开始部署到Github</strong></p>\n<p>如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：<strong>hexo deploy</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a75220ce47ab7fbb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>结尾….</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-493e6eac238f3015?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>可以发现出现了上面的报错提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: Spawn failed</span><br></pre></td></tr></table></figure>\n\n<p><strong>解决方法第一次：</strong></p>\n<p>经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试：</p>\n<p><strong><a href=\"https://blog.csdn.net/njc_sec/article/details/89021083\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/njc_sec/article/details/89021083</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ab8ed69e747e3063?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。</p>\n<p><strong>解决方法第二次：</strong></p>\n<p>因此我怀疑可能是仓库的地址出错，因此去看看了看地址</p>\n<p>这是原来的地址：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br></pre></td></tr></table></figure>\n\n<p>我按照出现错误提示中的网址去打开它：</p>\n<p> <strong><a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/troubleshooting.html</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8c51d47cc7ef2771?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>并找到了部署到Github目前的语法规定的网页下</p>\n<p><strong><a href=\"https://hexo.io/docs/github-pages\" target=\"_blank\" rel=\"noopener\">https://hexo.io/docs/github-pages</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d6b129e141a8145d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>按照上面对部署仓库的地址，我将上述的Deploy的源码修改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br></pre></td></tr></table></figure>\n\n<p>于是我再试了上述的三个命令：</p>\n<p><strong>hexo clean</strong></p>\n<p><strong>hexo g</strong></p>\n<p><strong>hexo d</strong></p>\n<p>最终出现下面的结果:说明出现的问题解决了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-1f7057da994fc77a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>由于我起初没有部署仓库的密钥，所以要去仓库部署。</p>\n<hr>\n<p><strong>10、创建的 ssh 密钥的密码</strong></p>\n<p>(1)、我打开了我得仓库，并找到了设置</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b8bf99f34165bc5a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（2）查看部署密钥指南以了解更多信息</p>\n<p><strong><a href=\"https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys\" target=\"_blank\" rel=\"noopener\">https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys</a></strong></p>\n<p><strong>找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5）</strong> </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8e7b841fcf04215d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）怎么创建SSH密钥?</p>\n<p>步骤：</p>\n<ul>\n<li><p>找到本地环境：C:\\Users\\admin.ssh   这个路径下的用户/名称/.ssh</p>\n</li>\n<li><p>在这路径下，打开gitbub的命令控制台</p>\n</li>\n<li><p>(I): git  init  //初始化一下，看看路径对不对</p>\n<p>   (II):ssh-keygen -t rsa -C “你的邮箱”</p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b281bce325d745cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li>到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-131505bff939d0c3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li>生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方）</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-3c81f356789d79d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>点击Add SSH key获得下面结果</strong></p>\n<p><strong>注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-89e2033be93edf32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<ul>\n<li><p>密钥配置成功后，要验证一下是否配置成功</p>\n<p>命令：ssh -T <a href=\"mailto:git@github.com\">git@github.com</a> </p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-cc6a335f218b3320?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>出现下面提示，说明配置成功。</p>\n<p>Hi KangChou/KangChou.github.io! You’ve successfully authenticated, but GitHub does not provide shell access</p>\n<hr>\n<p><strong>11、再次使用密钥部署</strong></p>\n<p>仍然使用命令：</p>\n<p><strong>hexo clean</strong></p>\n<p><strong>hexo g</strong></p>\n<p><strong>hexo d</strong></p>\n<p>如果都没有问题就会出现下面的结果，输入你刚刚设置的<strong>名</strong>和<strong>SSH的密码</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-def53ac7478a95a4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>但是这里又出错了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d1bc176ec42c6cf0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-74d95c20e284e23b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>命令hexo d执行又出错</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d92a80fb7c0daede?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>下面终于找到了答案。这里要特别感谢<strong>@李典金 @崔庆才</strong>两位网络开发大佬的<strong>细节</strong>点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。</p>\n<hr>\n<p><strong>12、终于部署成功</strong></p>\n<p><strong>最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误</strong></p>\n<p>因此，我去仓库找到了</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f3ee696c4cb87cd1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4464f8f6a93f4809?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>再次输入命令hexo d执行以后出现下面的结果，</strong></p>\n<p><strong>出现Deploy done :git说明已经部署成功</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-9c5b976ce7d76499?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>这时候我们访问一下 GitHub Repository 同名的链接，</p>\n<p>比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io，</p>\n<p>那我就访问 <strong><a href=\"http://KangChou.github.io\" target=\"_blank\" rel=\"noopener\">http://KangChou.github.io</a></strong></p>\n<p>这时候我们就可以看到跟本地一模一样的博客内容了。</p>\n<p>（此时你用手机同样可以打开该网站）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-70ed2679f4199a51?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>二、博客的网页主题</strong></p>\n<p>主题的设置包括中文页面、整个页面的样式、页面风格等等，</p>\n<p>目前 Hexo 里面应用最多的主题基本就是 Next 主题，</p>\n<p>这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富，</p>\n<p>配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。</p>\n<hr>\n<p><strong>13、下载主题</strong></p>\n<p>打开我的电脑创建的Hexo文件夹下的KangChou目录，</p>\n<p>单击右键Git bush输入下面的命令，执行结果如下：</p>\n<p><strong>git clone <a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/theme-next/hexo-theme-next</a> themes/next</strong></p>\n<p>将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令</p>\n<p><strong>hexo server</strong></p>\n<p>执行结果如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5214e650d56b52e8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>14、配置中文环境</strong></p>\n<p>在博客kangchou目录下打开_config.yml修改语言为中文汉语<strong>zh-Hans</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-97a8757ede80d883?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>执行的结果如下</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7019987a190e37b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>由于这只是部分为中文，而我的目的是大部分是中文的，</strong></p>\n<p><strong>为了方便还要在网页上手动添加更多中文描述</strong></p>\n<hr>\n<p><strong><strong>15、配置中文菜单栏</strong></strong></p>\n<p>打开C:\\Hexo\\KangChou\\themes\\landscape\\languages</p>\n<p><strong>发有三种汉语:简体中文、香港繁体、台湾繁体</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f9eab1d43e4c88b0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>然后点开<code>zh-Hans.yml</code>其中的配置项就是已经翻译的文本</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-feb255f5e31c71c8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>网站会根据你<code>站点配置``yml</code>中的语言配置来去读取对应的语言文件</p>\n<p>打开你<code>languages``皮肤配置``yml</code>你会看到菜单栏基础配置：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-97d28c5da514ced8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>发现home和archives菜单是开启的，</strong></p>\n<p>现在我们<strong>全部开**</strong>启**，只需要去掉前面的#，刷新浏览器</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7d27267e3513c00?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>尝试修改站点配置yml语言，重启服务后刷新浏览器</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b98e3e122477a1f2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>显然结果很成功，**</strong>下面关闭git,将结果上传到Github页面：**</p>\n<p><strong>重新打开输入部署的三个命令：</strong></p>\n<p><strong>hexo clean</strong> </p>\n<p><strong>hexo g</strong> </p>\n<p><strong>hexo d</strong></p>\n<p><strong>结果和上面一样，此时就可以访问了.</strong></p>\n<p><strong>访问网站**</strong><a href=\"https://kangchou.github.io/\" target=\"_blank\" rel=\"noopener\">https://kangchou.github.io/</a>**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-6a1efa620e95e530?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<hr>\n<p><strong>实际上文章到这里就已经结束博客的搭建了，至于其他的</strong></p>\n<p><strong>比如上传文章、上传图片，添加logo等这些我这里就不说了，</strong></p>\n<p><strong>hexo官网以及其他网站都能搜索到具体的教程，</strong></p>\n<p><strong>想继续完善博客网站部署的朋友可以去搜索相关文献学习。</strong></p>\n<p><strong>三、更换域名</strong></p>\n<p><strong>相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。**</strong>因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。<strong><strong>事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。</strong></strong>不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。<strong><strong>如果不想花钱买域名的，这一小节可以跳过。****</strong></strong>16、购买域名+注册阿里网+实名认证<strong>****</strong>自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是<strong><strong>一定要使用自己在学校注册的电子邮箱</strong></strong>，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。<strong>**<img src=\"https://upload-images.jianshu.io/upload_images/15863171-f3c8e7d17283f43d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></strong> <strong>然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）**</strong><a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://www.aliyun.com/</a>**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a028317d842d34b8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bcaf075232acdbdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"><strong>**</strong> </p>\n<h2 id=\"17、在阿里云添加域名解析\"><a href=\"#17、在阿里云添加域名解析\" class=\"headerlink\" title=\"**17、在阿里云添加域名解析**\"></a><strong>**</strong>17、在阿里云添加域名解析<strong>**</strong></h2><p>cmd+ping你的<a href=\"http://github.io域名，得到一个IP\" target=\"_blank\" rel=\"noopener\">http://github.io域名，得到一个IP</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d18a11e68e24e027?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>修改你的域名解析记录</p>\n<p><strong>添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”，</strong></p>\n<p><strong>这样通过<a href=\"https://kangchou001.cn/就能访问到你的博客了\">https://kangchou001.cn/就能访问到你的博客了</a></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-9cd1f1c2795c5b34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bf614aded754aa07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong>18、<strong>**</strong>填写绑定的域名在你的本地文件下也就是hexo—&gt;你的博客（我的是KangChou）本地目录下找到 文件夹<code>source</code> ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件<strong>没有任何扩展名</strong>（切记）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4540a14e0f6958d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再一次使用部署三命令<strong>hexo clean**</strong>hexo g<strong><strong>hexo d</strong></strong>完成以后，**进入Github设置，找到 Custom domain添加域名后保存即可</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e19a027997a12e07?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>**</strong>19、刷新网页+更改域名成功<strong>**</strong></p>\n<p><strong>如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-3a79faab75fee299?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-72c6ba2cdc3ddde6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>……到此完成了本博客的搭建……</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-4ef2eaac3b9bccd6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>投稿—&gt;展示你的才华</p>\n<p>请发邮件到</p>\n<p><strong><a href=\"mailto:kangsinx@yeah.net\">kangsinx@yeah.net</a></strong></p>\n<p>标题注明【投稿】</p>\n<p>告诉我们</p>\n<p>你是谁，从哪来，投什么</p>\n<p>我们会及时回复你</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-808d129cea0370eb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>"},{"title":"解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】","_content":"\n![image](https://upload-images.jianshu.io/upload_images/15863171-26164f6d1bc4bb3d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n[https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect](https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect)\n\n\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-71789e2df6d6ed6f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**正文开始**\n\n众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。\n\n<!-- more -->\n\n（注意：本文的linux系统教程适用于deepin和ubuntu 18.04两种，其他系统安装类似）\n\n**TensorFlow简介**\n\n```\nhttps://baike.baidu.com/item/Tensorflow/18828108\n```\n\n**一、在Windows10系统开展如下操作**\n\n安装前提：\n\n已经安装好Anaconda3, 由于国外的镜像文件下载较慢，所以我选择了国内的镜像——*h**ttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/*\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ce7c6e0587a7c488?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n以上请自行安装....\n\n**1、前期准备：****Anaconda3的终端上的过渡**\n\n打开已经安装好的Anaconda3\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b57f7b23de823478?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n运行 Anaconda Prompt，输入如下命令检验是否安装成功\n\n```\nconda list\n```\n\n输出：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5a84907c79501c3b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再次输入清华镜像检验一下\n\n```\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n```\n\n这里是因为我已经安装过了，所以结果是这样的。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a80a3e20371e9d76?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**2、开始安装TensorFlow**\n\n**（1）运行 Anaconda Prompt，输入以下命令，创建版本为python 3.7.4的tensorflow 环境：**\n\n```\nconda create -n tensorflow python=3.7.4\n```\n\n这里的TensorFlow我以前已经安装过了，所以下面再给大家安装另一个tensorflow2环境：输入命令\n\n```\nconda create -n tensorflow2 python=3.7.4\n```\n\n输出：\n\n```\n(base) C:\\Users\\kangs>conda create -n tensorflow2 python=3.7.4\n```\n\n然后打开Anaconda Navigator，进入点击中间的选项applications on可以看到我们刚刚创建的**TensorFlow2**，这里的**TensorFlow**是我以前安装的环境：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e53123b11adc7f79?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开上述左侧菜单栏，也就是开始菜单下的Anaconda Navigator 左边的 Environments，点击之后可看到此环境：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a9485535f2279889?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（2）启动tensorflow2环境**\n\n这里有两种启动方式：第一种是连续刚刚的 Anaconda Prompt终端输入\n\n```\nactivate tensorflow2\n```\n\n输出\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-192d5301fed0623e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n第二种打开方式，启动刚刚的Anaconda Navigator，进入环境点击\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-90dd4c3ba803a72f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（3）安装cpu版本的tensorflow **\n\n有两种方法可以安装：\n\n方法一：cpu版本（我推荐的）\n\n```\npip install --ignore-installed --upgrade tensorflow\n```\n\n方法二：gpu版本, 注意: gpu版要事先选好, 并装好CUDA和cuDNN\n\n```\npip install --ignore-installed --upgrade tensorflow-gpu\n```\n\n执行结果：\n\n```\n​\n```\n\n这样就安装成功了，当不使用TensorFlow时，可以通过deactivate来关闭TensorFlow环境：\n\n(不过先不要着急关闭，我们下面还有进行检验，如果最后不用，再关掉)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d78a84c1d330c6a9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（4）测试tensorflow**\n\n```\npython --version\n```\n\n创建一个项目：\n\n```\nimport tensorflow as tf\n```\n\n执行结果显然是可行的，测试成功： \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-c97b1a7f8fad4028?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**提示**：如果遇到No module named ‘tensorflow’，那是因为没有在tensorflow的环境下打开它们，所以记得激活tensorflow的环境。\n\n**（5）解决你安装的Tensorflow环境不能安装ipython,spyder等插件**\n\n**错误提示如下图：**\n\n**“无法定位程序输入点OPENSSL_sk_new_reserve于动态链接库...... libssl-1_1-x64.dll上的问题”‘’**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-59809fc432afc141?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**解放方法：****互换 libssl-1_1-x64.dll文件，时间必须一样**\n\n第一步 打开D:\\Anaconda\\Library\\bin文件夹下面的 libssl-1_1-x64.dll\n\n第二步 D:\\Anaconda\\DLLs 文件夹下面的 libssl-1_1-x64.dll\n\n如果两个文件夹时间不一样的话，把两个文件换成一样的就可以了。\n\n**注意：**为了避免系统出错，要事先备份好一样的文件，以避免修改后出错而找不会原来的文件。最简单的方法就是复制换成另一个名称的，例如我加了一个“源文件”。\n\n**互换如下图：**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a3d8e043de3cbacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**换文件之后,时间都是****2018/6/28 21:00**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-77fbc15a650735c0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**下面再次点击安装插件就可以了**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bd85738a366ebcdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**安装成功，如图下所示** \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fb77f13dd07901ec?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**二**、在Linux******系统开展如下操作**\n\n这里使用的虚拟机VMware Workstation Pro 15.0安装的linux系统进行操作的，如图：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ab1ed27647df109f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**下面打开deepin系统开始进行安装**\n\n**1、先安装Anaconda3**\n\n(1)、下载：https://www.anaconda.com/distribution/#linux\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fa15556461748b0f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将下载好的anacoda3放在主目录下（home）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bf11b22476c67c32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（2）、安装命令：\n\n```\nbash Anaconda3-2019.10-Linux-x86_64.sh\n```\n\n回车运行如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-abc60657a1bc3e68?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n按回车键继续，会读取许可，出现个More，一直按回车以及yes,然后会出现下图：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7d46ce7235b42f5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n一直往下回车和yes\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fd72e95629e0bbc4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装成功\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-6eb44e62214df4b5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）、配置环境变量\n\n为了方便编辑环境变量，这里安装一个编辑器gedit，命令\n\n```\nsudo apt-get install gedit\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-53b5ae85401a288e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开环境变量，并使用命令：sudo gedit ~/.bashrc查看系统环境，文件末尾输入以下代码:\n\n```\n在文件的末尾加上下述代码：\n```\n\n如下图\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f09470e155fecbd2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（5）、更新bashrc，并查看Anacoda3的安装情况\n\n```\nsource ~/.bashrc\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-619cb7a09394eacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n查询当前已经安装的conda库\n\n```\nconda list\n```\n\n安装库(这里的***代表库名称）, 如果没有你的库文件，可以选择这个命令：\n\n```\nconda install ***\n```\n\n更新库\n\n```\nconda update ***\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-391a8441d334bd03?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（5）、(如果你不用还可以卸载)，不卸载就跳过此处，建议不要卸载\n\n卸载conda: 直接删除anaconda文件夹即可：\n\n```\nrm -rf anaconda3\n```\n\n(6)、进入和退出 conda base 环境\n\n进入 conda base 环境\n\n```\nconda activate base\n```\n\n退出 conda base 环境\n\n```\nconda deactivate\n```\n\n编辑 conda 环境变量\n\n```\nvim ~/.bashrc 或者 sudo gedit ~/.bashrc\n```\n\n**2、使用以上Anaconda3安装Tensorflow**\n\n(1)、在linux终端或cmd中输入以下命令搜索当前可用的tensorflow版本，如果没有就要创建：\n\n```\nconda search -t conda tensorflow\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fe8a4e1123595e80?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装完成之后，最后还提示激活与退出\n\n```\n# To activate this environment, use\n```\n\n（2）、正式安装tensorflow\n\n激活虚拟环境后conda activate tf，我们开始用conda安装tensorflow吧！\n\n 如果你还不知道GPU是什么东东，那你的计算机里肯定没有安装cuda、cudnn 、显卡之类的东西，那就安装CPU版本；\n\n安装CPU版本的tensorflow(推荐安装)：\n\n```\nconda install tensorflow\n```\n\n安装GPU版本\n\n（如果你不理解建议不要安装，初学者还是卸载CPU版本的tensorflow吧！）\n\n```\nconda install tensorflow-gpu\n```\n\n等待几分钟之后，看看自己是否安装成功：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-c8cb43c1e8d6bc34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-41da2da8da65d70a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）、测试安装是否成功：在python3.7.6下导入tensorflow：\n\n(不报错的话说明成功安装了)\n\n```\nimport tensorflow as tf\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-df2c1e9930e63b44?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n至此我们完整地安装完毕，以下是一些附件资料\n\n* * *\n\n**附件资料**\n\n## Conda的环境管理及知识点\n\n```\n#conda版本查看\n#conda版本查看\nconda -V\nconda --version\n​\n#更新         \nconda update conda           #更新conda\nconda update anaconda        #更新anaconda\nconda update anaconda-navigator    #update最新版本的anaconda-navigator\n​\n# 查看已安装的虚拟环境\nconda env list \nconda info -e\nconda info --env\n​\n# conda -create -n env_name list_of_packages\n# env_name是需要创建的环境名称，list_of_packages是在新环境中需要安装的工具包，有多个时用空格隔开\n# 创建一个名为的环境，指定Python版本是3.5（conda会自动寻找3.5.x中的最新版本）\n​\nconda create -n xxxx python=3.5\nconda create --name xxxx python=3.5\n​\nconda activate xxxx           #开启xxxx环境\nconda deactivate              #关闭环境\n​\n# 克隆环境，我想创建一个新环境BBB，完全克隆AAA的环境配置\nconda create -n BBB --clone AAA\n​\n# 删除一个已有的环境\nconda remove -n xxxx --all\n​\n# 环境重命名\n# conda没有重命名的命令，所以可以先 clone 一个环境，然后删除原有的环境\n```\n\n### Conda的包管理知识点\n\n```\n# 查看当前环境下已安装的包\nconda list\n# 查看某个指定环境（xxxxx）下已安装的包\nconda list -n xxxxx\n# 查找package信息，例如查找numpy包信息，会列numpy的所有版本\nconda search numpy\n# 安装package，安装多个包用空格隔开\n# 如果不用-n指定环境名称，则被安装在当前活跃环境\n# 也可以通过-c指定通过某个channel安装\nconda install -n xxxxx numpy pandas\n# 更新package\nconda update numpy           # 更新numpy（当前活跃的环境）  \nconda update -n xxxxx numpy  # 更新指定xxxxx环境下的numpy\nconda update python          # 假设当前环境是python3.4, conda会将python升级为3.4.x系列的最新版本\n# 删除环境package\nconda uninstall numpy\nconda remove numpy           # 删除numpy包（当前活跃的环境）\nconda remove -n xxxxx numpy  # 删除xxxxx环境下的包\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e2f8f134250641fa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) \n**参考文献：**\n\n\n```\n​https://blog.csdn.net/qq654129588/article/details/79917515\nhttps://ask.csdn.net/questions/657580\nhttps://www.cnblogs.com/HongjianChen/p/8385547.html\nhttps://blog.csdn.net/qq_45100771/article/details/102868264\nhttps://blog.csdn.net/superjunenaruto/article/details/9539068\n\n```\n\n***您可能喜欢的文章：***\n\n*   [数据分析开篇：一个简单的应用（2019/11/04）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（一）：NumPy数组](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（二）：NumPy摘要----文章末尾附Python](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect)\n\n*   [数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（七）：pandas入门与数据结构基础](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（九）：数据的分组与聚合](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-509095b3dfd78508?imageMogr2/auto-orient/strip)\n\n***认认真真系统学习数据分析***\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-27cc989be402ba6c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-2a8e6db7678c1331?imageMogr2/auto-orient/strip)\n","source":"_posts/hello-world  3.md","raw":"---\ntitle: 解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】\ncategories: 算法\n---\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-26164f6d1bc4bb3d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n[https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect](https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect)\n\n\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-71789e2df6d6ed6f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**正文开始**\n\n众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。\n\n<!-- more -->\n\n（注意：本文的linux系统教程适用于deepin和ubuntu 18.04两种，其他系统安装类似）\n\n**TensorFlow简介**\n\n```\nhttps://baike.baidu.com/item/Tensorflow/18828108\n```\n\n**一、在Windows10系统开展如下操作**\n\n安装前提：\n\n已经安装好Anaconda3, 由于国外的镜像文件下载较慢，所以我选择了国内的镜像——*h**ttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/*\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ce7c6e0587a7c488?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n以上请自行安装....\n\n**1、前期准备：****Anaconda3的终端上的过渡**\n\n打开已经安装好的Anaconda3\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-b57f7b23de823478?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n运行 Anaconda Prompt，输入如下命令检验是否安装成功\n\n```\nconda list\n```\n\n输出：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-5a84907c79501c3b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再次输入清华镜像检验一下\n\n```\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\n```\n\n这里是因为我已经安装过了，所以结果是这样的。\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a80a3e20371e9d76?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**2、开始安装TensorFlow**\n\n**（1）运行 Anaconda Prompt，输入以下命令，创建版本为python 3.7.4的tensorflow 环境：**\n\n```\nconda create -n tensorflow python=3.7.4\n```\n\n这里的TensorFlow我以前已经安装过了，所以下面再给大家安装另一个tensorflow2环境：输入命令\n\n```\nconda create -n tensorflow2 python=3.7.4\n```\n\n输出：\n\n```\n(base) C:\\Users\\kangs>conda create -n tensorflow2 python=3.7.4\n```\n\n然后打开Anaconda Navigator，进入点击中间的选项applications on可以看到我们刚刚创建的**TensorFlow2**，这里的**TensorFlow**是我以前安装的环境：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e53123b11adc7f79?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开上述左侧菜单栏，也就是开始菜单下的Anaconda Navigator 左边的 Environments，点击之后可看到此环境：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a9485535f2279889?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（2）启动tensorflow2环境**\n\n这里有两种启动方式：第一种是连续刚刚的 Anaconda Prompt终端输入\n\n```\nactivate tensorflow2\n```\n\n输出\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-192d5301fed0623e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n第二种打开方式，启动刚刚的Anaconda Navigator，进入环境点击\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-90dd4c3ba803a72f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（3）安装cpu版本的tensorflow **\n\n有两种方法可以安装：\n\n方法一：cpu版本（我推荐的）\n\n```\npip install --ignore-installed --upgrade tensorflow\n```\n\n方法二：gpu版本, 注意: gpu版要事先选好, 并装好CUDA和cuDNN\n\n```\npip install --ignore-installed --upgrade tensorflow-gpu\n```\n\n执行结果：\n\n```\n​\n```\n\n这样就安装成功了，当不使用TensorFlow时，可以通过deactivate来关闭TensorFlow环境：\n\n(不过先不要着急关闭，我们下面还有进行检验，如果最后不用，再关掉)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-d78a84c1d330c6a9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**（4）测试tensorflow**\n\n```\npython --version\n```\n\n创建一个项目：\n\n```\nimport tensorflow as tf\n```\n\n执行结果显然是可行的，测试成功： \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-c97b1a7f8fad4028?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**提示**：如果遇到No module named ‘tensorflow’，那是因为没有在tensorflow的环境下打开它们，所以记得激活tensorflow的环境。\n\n**（5）解决你安装的Tensorflow环境不能安装ipython,spyder等插件**\n\n**错误提示如下图：**\n\n**“无法定位程序输入点OPENSSL_sk_new_reserve于动态链接库...... libssl-1_1-x64.dll上的问题”‘’**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-59809fc432afc141?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**解放方法：****互换 libssl-1_1-x64.dll文件，时间必须一样**\n\n第一步 打开D:\\Anaconda\\Library\\bin文件夹下面的 libssl-1_1-x64.dll\n\n第二步 D:\\Anaconda\\DLLs 文件夹下面的 libssl-1_1-x64.dll\n\n如果两个文件夹时间不一样的话，把两个文件换成一样的就可以了。\n\n**注意：**为了避免系统出错，要事先备份好一样的文件，以避免修改后出错而找不会原来的文件。最简单的方法就是复制换成另一个名称的，例如我加了一个“源文件”。\n\n**互换如下图：**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-a3d8e043de3cbacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**换文件之后,时间都是****2018/6/28 21:00**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-77fbc15a650735c0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**下面再次点击安装插件就可以了**\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bd85738a366ebcdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**安装成功，如图下所示** \n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fb77f13dd07901ec?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**二**、在Linux******系统开展如下操作**\n\n这里使用的虚拟机VMware Workstation Pro 15.0安装的linux系统进行操作的，如图：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-ab1ed27647df109f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n**下面打开deepin系统开始进行安装**\n\n**1、先安装Anaconda3**\n\n(1)、下载：https://www.anaconda.com/distribution/#linux\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fa15556461748b0f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n将下载好的anacoda3放在主目录下（home）\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-bf11b22476c67c32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（2）、安装命令：\n\n```\nbash Anaconda3-2019.10-Linux-x86_64.sh\n```\n\n回车运行如下\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-abc60657a1bc3e68?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n按回车键继续，会读取许可，出现个More，一直按回车以及yes,然后会出现下图：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e7d46ce7235b42f5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n一直往下回车和yes\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fd72e95629e0bbc4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装成功\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-6eb44e62214df4b5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）、配置环境变量\n\n为了方便编辑环境变量，这里安装一个编辑器gedit，命令\n\n```\nsudo apt-get install gedit\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-53b5ae85401a288e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n打开环境变量，并使用命令：sudo gedit ~/.bashrc查看系统环境，文件末尾输入以下代码:\n\n```\n在文件的末尾加上下述代码：\n```\n\n如下图\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-f09470e155fecbd2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（5）、更新bashrc，并查看Anacoda3的安装情况\n\n```\nsource ~/.bashrc\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-619cb7a09394eacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n查询当前已经安装的conda库\n\n```\nconda list\n```\n\n安装库(这里的***代表库名称）, 如果没有你的库文件，可以选择这个命令：\n\n```\nconda install ***\n```\n\n更新库\n\n```\nconda update ***\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-391a8441d334bd03?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（5）、(如果你不用还可以卸载)，不卸载就跳过此处，建议不要卸载\n\n卸载conda: 直接删除anaconda文件夹即可：\n\n```\nrm -rf anaconda3\n```\n\n(6)、进入和退出 conda base 环境\n\n进入 conda base 环境\n\n```\nconda activate base\n```\n\n退出 conda base 环境\n\n```\nconda deactivate\n```\n\n编辑 conda 环境变量\n\n```\nvim ~/.bashrc 或者 sudo gedit ~/.bashrc\n```\n\n**2、使用以上Anaconda3安装Tensorflow**\n\n(1)、在linux终端或cmd中输入以下命令搜索当前可用的tensorflow版本，如果没有就要创建：\n\n```\nconda search -t conda tensorflow\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-fe8a4e1123595e80?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n安装完成之后，最后还提示激活与退出\n\n```\n# To activate this environment, use\n```\n\n（2）、正式安装tensorflow\n\n激活虚拟环境后conda activate tf，我们开始用conda安装tensorflow吧！\n\n 如果你还不知道GPU是什么东东，那你的计算机里肯定没有安装cuda、cudnn 、显卡之类的东西，那就安装CPU版本；\n\n安装CPU版本的tensorflow(推荐安装)：\n\n```\nconda install tensorflow\n```\n\n安装GPU版本\n\n（如果你不理解建议不要安装，初学者还是卸载CPU版本的tensorflow吧！）\n\n```\nconda install tensorflow-gpu\n```\n\n等待几分钟之后，看看自己是否安装成功：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-c8cb43c1e8d6bc34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-41da2da8da65d70a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n（3）、测试安装是否成功：在python3.7.6下导入tensorflow：\n\n(不报错的话说明成功安装了)\n\n```\nimport tensorflow as tf\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-df2c1e9930e63b44?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n至此我们完整地安装完毕，以下是一些附件资料\n\n* * *\n\n**附件资料**\n\n## Conda的环境管理及知识点\n\n```\n#conda版本查看\n#conda版本查看\nconda -V\nconda --version\n​\n#更新         \nconda update conda           #更新conda\nconda update anaconda        #更新anaconda\nconda update anaconda-navigator    #update最新版本的anaconda-navigator\n​\n# 查看已安装的虚拟环境\nconda env list \nconda info -e\nconda info --env\n​\n# conda -create -n env_name list_of_packages\n# env_name是需要创建的环境名称，list_of_packages是在新环境中需要安装的工具包，有多个时用空格隔开\n# 创建一个名为的环境，指定Python版本是3.5（conda会自动寻找3.5.x中的最新版本）\n​\nconda create -n xxxx python=3.5\nconda create --name xxxx python=3.5\n​\nconda activate xxxx           #开启xxxx环境\nconda deactivate              #关闭环境\n​\n# 克隆环境，我想创建一个新环境BBB，完全克隆AAA的环境配置\nconda create -n BBB --clone AAA\n​\n# 删除一个已有的环境\nconda remove -n xxxx --all\n​\n# 环境重命名\n# conda没有重命名的命令，所以可以先 clone 一个环境，然后删除原有的环境\n```\n\n### Conda的包管理知识点\n\n```\n# 查看当前环境下已安装的包\nconda list\n# 查看某个指定环境（xxxxx）下已安装的包\nconda list -n xxxxx\n# 查找package信息，例如查找numpy包信息，会列numpy的所有版本\nconda search numpy\n# 安装package，安装多个包用空格隔开\n# 如果不用-n指定环境名称，则被安装在当前活跃环境\n# 也可以通过-c指定通过某个channel安装\nconda install -n xxxxx numpy pandas\n# 更新package\nconda update numpy           # 更新numpy（当前活跃的环境）  \nconda update -n xxxxx numpy  # 更新指定xxxxx环境下的numpy\nconda update python          # 假设当前环境是python3.4, conda会将python升级为3.4.x系列的最新版本\n# 删除环境package\nconda uninstall numpy\nconda remove numpy           # 删除numpy包（当前活跃的环境）\nconda remove -n xxxxx numpy  # 删除xxxxx环境下的包\n```\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e2f8f134250641fa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240) \n**参考文献：**\n\n\n```\n​https://blog.csdn.net/qq654129588/article/details/79917515\nhttps://ask.csdn.net/questions/657580\nhttps://www.cnblogs.com/HongjianChen/p/8385547.html\nhttps://blog.csdn.net/qq_45100771/article/details/102868264\nhttps://blog.csdn.net/superjunenaruto/article/details/9539068\n\n```\n\n***您可能喜欢的文章：***\n\n*   [数据分析开篇：一个简单的应用（2019/11/04）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（一）：NumPy数组](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（二）：NumPy摘要----文章末尾附Python](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect)\n\n*   [数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（七）：pandas入门与数据结构基础](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（九）：数据的分组与聚合](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-509095b3dfd78508?imageMogr2/auto-orient/strip)\n\n***认认真真系统学习数据分析***\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-27cc989be402ba6c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-2a8e6db7678c1331?imageMogr2/auto-orient/strip)\n","slug":"hello-world  3","published":1,"date":"2020-04-05T10:44:09.554Z","updated":"2020-04-06T17:03:49.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8owmsq3000524uraszl97q6","content":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-26164f6d1bc4bb3d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><a href=\"https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIwNzUwOTY1Nw==&amp;scene=124#wechat_redirect</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-71789e2df6d6ed6f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>正文开始</strong></p>\n<p>众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。</p>\n<a id=\"more\"></a>\n\n<p>（注意：本文的linux系统教程适用于deepin和ubuntu 18.04两种，其他系统安装类似）</p>\n<p><strong>TensorFlow简介</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;baike.baidu.com&#x2F;item&#x2F;Tensorflow&#x2F;18828108</span><br></pre></td></tr></table></figure>\n\n<p><strong>一、在Windows10系统开展如下操作</strong></p>\n<p>安装前提：</p>\n<p>已经安装好Anaconda3, 由于国外的镜像文件下载较慢，所以我选择了国内的镜像——<em>h**ttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</em></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ce7c6e0587a7c488?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>以上请自行安装….</p>\n<p><strong>1、前期准备：**</strong>Anaconda3的终端上的过渡**</p>\n<p>打开已经安装好的Anaconda3</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b57f7b23de823478?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>运行 Anaconda Prompt，输入如下命令检验是否安装成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda list</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5a84907c79501c3b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再次输入清华镜像检验一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>这里是因为我已经安装过了，所以结果是这样的。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a80a3e20371e9d76?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>2、开始安装TensorFlow</strong></p>\n<p><strong>（1）运行 Anaconda Prompt，输入以下命令，创建版本为python 3.7.4的tensorflow 环境：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tensorflow python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>这里的TensorFlow我以前已经安装过了，所以下面再给大家安装另一个tensorflow2环境：输入命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tensorflow2 python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) C:\\Users\\kangs&gt;conda create -n tensorflow2 python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>然后打开Anaconda Navigator，进入点击中间的选项applications on可以看到我们刚刚创建的<strong>TensorFlow2</strong>，这里的<strong>TensorFlow</strong>是我以前安装的环境：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e53123b11adc7f79?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开上述左侧菜单栏，也就是开始菜单下的Anaconda Navigator 左边的 Environments，点击之后可看到此环境：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a9485535f2279889?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>（2）启动tensorflow2环境</strong></p>\n<p>这里有两种启动方式：第一种是连续刚刚的 Anaconda Prompt终端输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">activate tensorflow2</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-192d5301fed0623e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>第二种打开方式，启动刚刚的Anaconda Navigator，进入环境点击</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-90dd4c3ba803a72f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>*<em>（3）安装cpu版本的tensorflow *</em></p>\n<p>有两种方法可以安装：</p>\n<p>方法一：cpu版本（我推荐的）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --ignore-installed --upgrade tensorflow</span><br></pre></td></tr></table></figure>\n\n<p>方法二：gpu版本, 注意: gpu版要事先选好, 并装好CUDA和cuDNN</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --ignore-installed --upgrade tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n<p>执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​</span><br></pre></td></tr></table></figure>\n\n<p>这样就安装成功了，当不使用TensorFlow时，可以通过deactivate来关闭TensorFlow环境：</p>\n<p>(不过先不要着急关闭，我们下面还有进行检验，如果最后不用，再关掉)</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d78a84c1d330c6a9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>（4）测试tensorflow</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python --version</span><br></pre></td></tr></table></figure>\n\n<p>创建一个项目：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import tensorflow as tf</span><br></pre></td></tr></table></figure>\n\n<p>执行结果显然是可行的，测试成功： </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-c97b1a7f8fad4028?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>提示</strong>：如果遇到No module named ‘tensorflow’，那是因为没有在tensorflow的环境下打开它们，所以记得激活tensorflow的环境。</p>\n<p><strong>（5）解决你安装的Tensorflow环境不能安装ipython,spyder等插件</strong></p>\n<p><strong>错误提示如下图：</strong></p>\n<p><strong>“无法定位程序输入点OPENSSL_sk_new_reserve于动态链接库…… libssl-1_1-x64.dll上的问题”‘’</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-59809fc432afc141?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>解放方法：**</strong>互换 libssl-1_1-x64.dll文件，时间必须一样**</p>\n<p>第一步 打开D:\\Anaconda\\Library\\bin文件夹下面的 libssl-1_1-x64.dll</p>\n<p>第二步 D:\\Anaconda\\DLLs 文件夹下面的 libssl-1_1-x64.dll</p>\n<p>如果两个文件夹时间不一样的话，把两个文件换成一样的就可以了。</p>\n<p><strong>注意：</strong>为了避免系统出错，要事先备份好一样的文件，以避免修改后出错而找不会原来的文件。最简单的方法就是复制换成另一个名称的，例如我加了一个“源文件”。</p>\n<p><strong>互换如下图：</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a3d8e043de3cbacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>换文件之后,时间都是**</strong>2018/6/28 21:00**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-77fbc15a650735c0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>下面再次点击安装插件就可以了</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bd85738a366ebcdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>安装成功，如图下所示</strong> </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fb77f13dd07901ec?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>二</strong>、在Linux<strong>**</strong>系统开展如下操作**</p>\n<p>这里使用的虚拟机VMware Workstation Pro 15.0安装的linux系统进行操作的，如图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ab1ed27647df109f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>下面打开deepin系统开始进行安装</strong></p>\n<p><strong>1、先安装Anaconda3</strong></p>\n<p>(1)、下载：<a href=\"https://www.anaconda.com/distribution/#linux\" target=\"_blank\" rel=\"noopener\">https://www.anaconda.com/distribution/#linux</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fa15556461748b0f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将下载好的anacoda3放在主目录下（home）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bf11b22476c67c32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（2）、安装命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash Anaconda3-2019.10-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>回车运行如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-abc60657a1bc3e68?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>按回车键继续，会读取许可，出现个More，一直按回车以及yes,然后会出现下图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7d46ce7235b42f5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>一直往下回车和yes</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fd72e95629e0bbc4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>安装成功</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-6eb44e62214df4b5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）、配置环境变量</p>\n<p>为了方便编辑环境变量，这里安装一个编辑器gedit，命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gedit</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-53b5ae85401a288e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开环境变量，并使用命令：sudo gedit ~/.bashrc查看系统环境，文件末尾输入以下代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在文件的末尾加上下述代码：</span><br></pre></td></tr></table></figure>\n\n<p>如下图</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f09470e155fecbd2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（5）、更新bashrc，并查看Anacoda3的安装情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-619cb7a09394eacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>查询当前已经安装的conda库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda list</span><br></pre></td></tr></table></figure>\n\n<p>安装库(这里的***代表库名称）, 如果没有你的库文件，可以选择这个命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install ***</span><br></pre></td></tr></table></figure>\n\n<p>更新库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda update ***</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-391a8441d334bd03?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（5）、(如果你不用还可以卸载)，不卸载就跳过此处，建议不要卸载</p>\n<p>卸载conda: 直接删除anaconda文件夹即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf anaconda3</span><br></pre></td></tr></table></figure>\n\n<p>(6)、进入和退出 conda base 环境</p>\n<p>进入 conda base 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate base</span><br></pre></td></tr></table></figure>\n\n<p>退出 conda base 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p>编辑 conda 环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~&#x2F;.bashrc 或者 sudo gedit ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>2、使用以上Anaconda3安装Tensorflow</strong></p>\n<p>(1)、在linux终端或cmd中输入以下命令搜索当前可用的tensorflow版本，如果没有就要创建：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda search -t conda tensorflow</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fe8a4e1123595e80?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>安装完成之后，最后还提示激活与退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># To activate this environment, use</span><br></pre></td></tr></table></figure>\n\n<p>（2）、正式安装tensorflow</p>\n<p>激活虚拟环境后conda activate tf，我们开始用conda安装tensorflow吧！</p>\n<p> 如果你还不知道GPU是什么东东，那你的计算机里肯定没有安装cuda、cudnn 、显卡之类的东西，那就安装CPU版本；</p>\n<p>安装CPU版本的tensorflow(推荐安装)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install tensorflow</span><br></pre></td></tr></table></figure>\n\n<p>安装GPU版本</p>\n<p>（如果你不理解建议不要安装，初学者还是卸载CPU版本的tensorflow吧！）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n<p>等待几分钟之后，看看自己是否安装成功：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-c8cb43c1e8d6bc34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-41da2da8da65d70a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）、测试安装是否成功：在python3.7.6下导入tensorflow：</p>\n<p>(不报错的话说明成功安装了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import tensorflow as tf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-df2c1e9930e63b44?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>至此我们完整地安装完毕，以下是一些附件资料</p>\n<hr>\n<p><strong>附件资料</strong></p>\n<h2 id=\"Conda的环境管理及知识点\"><a href=\"#Conda的环境管理及知识点\" class=\"headerlink\" title=\"Conda的环境管理及知识点\"></a>Conda的环境管理及知识点</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#conda版本查看</span><br><span class=\"line\">#conda版本查看</span><br><span class=\"line\">conda -V</span><br><span class=\"line\">conda --version</span><br><span class=\"line\">​</span><br><span class=\"line\">#更新         </span><br><span class=\"line\">conda update conda           #更新conda</span><br><span class=\"line\">conda update anaconda        #更新anaconda</span><br><span class=\"line\">conda update anaconda-navigator    #update最新版本的anaconda-navigator</span><br><span class=\"line\">​</span><br><span class=\"line\"># 查看已安装的虚拟环境</span><br><span class=\"line\">conda env list </span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">conda info --env</span><br><span class=\"line\">​</span><br><span class=\"line\"># conda -create -n env_name list_of_packages</span><br><span class=\"line\"># env_name是需要创建的环境名称，list_of_packages是在新环境中需要安装的工具包，有多个时用空格隔开</span><br><span class=\"line\"># 创建一个名为的环境，指定Python版本是3.5（conda会自动寻找3.5.x中的最新版本）</span><br><span class=\"line\">​</span><br><span class=\"line\">conda create -n xxxx python&#x3D;3.5</span><br><span class=\"line\">conda create --name xxxx python&#x3D;3.5</span><br><span class=\"line\">​</span><br><span class=\"line\">conda activate xxxx           #开启xxxx环境</span><br><span class=\"line\">conda deactivate              #关闭环境</span><br><span class=\"line\">​</span><br><span class=\"line\"># 克隆环境，我想创建一个新环境BBB，完全克隆AAA的环境配置</span><br><span class=\"line\">conda create -n BBB --clone AAA</span><br><span class=\"line\">​</span><br><span class=\"line\"># 删除一个已有的环境</span><br><span class=\"line\">conda remove -n xxxx --all</span><br><span class=\"line\">​</span><br><span class=\"line\"># 环境重命名</span><br><span class=\"line\"># conda没有重命名的命令，所以可以先 clone 一个环境，然后删除原有的环境</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Conda的包管理知识点\"><a href=\"#Conda的包管理知识点\" class=\"headerlink\" title=\"Conda的包管理知识点\"></a>Conda的包管理知识点</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看当前环境下已安装的包</span><br><span class=\"line\">conda list</span><br><span class=\"line\"># 查看某个指定环境（xxxxx）下已安装的包</span><br><span class=\"line\">conda list -n xxxxx</span><br><span class=\"line\"># 查找package信息，例如查找numpy包信息，会列numpy的所有版本</span><br><span class=\"line\">conda search numpy</span><br><span class=\"line\"># 安装package，安装多个包用空格隔开</span><br><span class=\"line\"># 如果不用-n指定环境名称，则被安装在当前活跃环境</span><br><span class=\"line\"># 也可以通过-c指定通过某个channel安装</span><br><span class=\"line\">conda install -n xxxxx numpy pandas</span><br><span class=\"line\"># 更新package</span><br><span class=\"line\">conda update numpy           # 更新numpy（当前活跃的环境）  </span><br><span class=\"line\">conda update -n xxxxx numpy  # 更新指定xxxxx环境下的numpy</span><br><span class=\"line\">conda update python          # 假设当前环境是python3.4, conda会将python升级为3.4.x系列的最新版本</span><br><span class=\"line\"># 删除环境package</span><br><span class=\"line\">conda uninstall numpy</span><br><span class=\"line\">conda remove numpy           # 删除numpy包（当前活跃的环境）</span><br><span class=\"line\">conda remove -n xxxxx numpy  # 删除xxxxx环境下的包</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e2f8f134250641fa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"><br><strong>参考文献：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq654129588&#x2F;article&#x2F;details&#x2F;79917515</span><br><span class=\"line\">https:&#x2F;&#x2F;ask.csdn.net&#x2F;questions&#x2F;657580</span><br><span class=\"line\">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;HongjianChen&#x2F;p&#x2F;8385547.html</span><br><span class=\"line\">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_45100771&#x2F;article&#x2F;details&#x2F;102868264</span><br><span class=\"line\">https:&#x2F;&#x2F;blog.csdn.net&#x2F;superjunenaruto&#x2F;article&#x2F;details&#x2F;9539068</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>您可能喜欢的文章：</em></strong></p>\n<ul>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析开篇：一个简单的应用（2019/11/04）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（一）：NumPy数组</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（七）：pandas入门与数据结构基础</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（九）：数据的分组与聚合</a></p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-509095b3dfd78508?imageMogr2/auto-orient/strip\" alt=\"image\"></p>\n<p><strong><em>认认真真系统学习数据分析</em></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-27cc989be402ba6c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-2a8e6db7678c1331?imageMogr2/auto-orient/strip\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-26164f6d1bc4bb3d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><a href=\"https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzIwNzUwOTY1Nw==&scene=124#wechat_redirect\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIwNzUwOTY1Nw==&amp;scene=124#wechat_redirect</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-71789e2df6d6ed6f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>正文开始</strong></p>\n<p>众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。</p>","more":"<p>（注意：本文的linux系统教程适用于deepin和ubuntu 18.04两种，其他系统安装类似）</p>\n<p><strong>TensorFlow简介</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;baike.baidu.com&#x2F;item&#x2F;Tensorflow&#x2F;18828108</span><br></pre></td></tr></table></figure>\n\n<p><strong>一、在Windows10系统开展如下操作</strong></p>\n<p>安装前提：</p>\n<p>已经安装好Anaconda3, 由于国外的镜像文件下载较慢，所以我选择了国内的镜像——<em>h**ttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</em></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ce7c6e0587a7c488?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>以上请自行安装….</p>\n<p><strong>1、前期准备：**</strong>Anaconda3的终端上的过渡**</p>\n<p>打开已经安装好的Anaconda3</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-b57f7b23de823478?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>运行 Anaconda Prompt，输入如下命令检验是否安装成功</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda list</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-5a84907c79501c3b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再次输入清华镜像检验一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;</span><br></pre></td></tr></table></figure>\n\n<p>这里是因为我已经安装过了，所以结果是这样的。</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a80a3e20371e9d76?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>2、开始安装TensorFlow</strong></p>\n<p><strong>（1）运行 Anaconda Prompt，输入以下命令，创建版本为python 3.7.4的tensorflow 环境：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tensorflow python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>这里的TensorFlow我以前已经安装过了，所以下面再给大家安装另一个tensorflow2环境：输入命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda create -n tensorflow2 python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) C:\\Users\\kangs&gt;conda create -n tensorflow2 python&#x3D;3.7.4</span><br></pre></td></tr></table></figure>\n\n<p>然后打开Anaconda Navigator，进入点击中间的选项applications on可以看到我们刚刚创建的<strong>TensorFlow2</strong>，这里的<strong>TensorFlow</strong>是我以前安装的环境：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e53123b11adc7f79?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开上述左侧菜单栏，也就是开始菜单下的Anaconda Navigator 左边的 Environments，点击之后可看到此环境：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a9485535f2279889?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>（2）启动tensorflow2环境</strong></p>\n<p>这里有两种启动方式：第一种是连续刚刚的 Anaconda Prompt终端输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">activate tensorflow2</span><br></pre></td></tr></table></figure>\n\n<p>输出</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-192d5301fed0623e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>第二种打开方式，启动刚刚的Anaconda Navigator，进入环境点击</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-90dd4c3ba803a72f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>*<em>（3）安装cpu版本的tensorflow *</em></p>\n<p>有两种方法可以安装：</p>\n<p>方法一：cpu版本（我推荐的）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --ignore-installed --upgrade tensorflow</span><br></pre></td></tr></table></figure>\n\n<p>方法二：gpu版本, 注意: gpu版要事先选好, 并装好CUDA和cuDNN</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --ignore-installed --upgrade tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n<p>执行结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​</span><br></pre></td></tr></table></figure>\n\n<p>这样就安装成功了，当不使用TensorFlow时，可以通过deactivate来关闭TensorFlow环境：</p>\n<p>(不过先不要着急关闭，我们下面还有进行检验，如果最后不用，再关掉)</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-d78a84c1d330c6a9?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>（4）测试tensorflow</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python --version</span><br></pre></td></tr></table></figure>\n\n<p>创建一个项目：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import tensorflow as tf</span><br></pre></td></tr></table></figure>\n\n<p>执行结果显然是可行的，测试成功： </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-c97b1a7f8fad4028?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>提示</strong>：如果遇到No module named ‘tensorflow’，那是因为没有在tensorflow的环境下打开它们，所以记得激活tensorflow的环境。</p>\n<p><strong>（5）解决你安装的Tensorflow环境不能安装ipython,spyder等插件</strong></p>\n<p><strong>错误提示如下图：</strong></p>\n<p><strong>“无法定位程序输入点OPENSSL_sk_new_reserve于动态链接库…… libssl-1_1-x64.dll上的问题”‘’</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-59809fc432afc141?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>解放方法：**</strong>互换 libssl-1_1-x64.dll文件，时间必须一样**</p>\n<p>第一步 打开D:\\Anaconda\\Library\\bin文件夹下面的 libssl-1_1-x64.dll</p>\n<p>第二步 D:\\Anaconda\\DLLs 文件夹下面的 libssl-1_1-x64.dll</p>\n<p>如果两个文件夹时间不一样的话，把两个文件换成一样的就可以了。</p>\n<p><strong>注意：</strong>为了避免系统出错，要事先备份好一样的文件，以避免修改后出错而找不会原来的文件。最简单的方法就是复制换成另一个名称的，例如我加了一个“源文件”。</p>\n<p><strong>互换如下图：</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-a3d8e043de3cbacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>换文件之后,时间都是**</strong>2018/6/28 21:00**</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-77fbc15a650735c0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>下面再次点击安装插件就可以了</strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bd85738a366ebcdd?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>安装成功，如图下所示</strong> </p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fb77f13dd07901ec?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>二</strong>、在Linux<strong>**</strong>系统开展如下操作**</p>\n<p>这里使用的虚拟机VMware Workstation Pro 15.0安装的linux系统进行操作的，如图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-ab1ed27647df109f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><strong>下面打开deepin系统开始进行安装</strong></p>\n<p><strong>1、先安装Anaconda3</strong></p>\n<p>(1)、下载：<a href=\"https://www.anaconda.com/distribution/#linux\" target=\"_blank\" rel=\"noopener\">https://www.anaconda.com/distribution/#linux</a></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fa15556461748b0f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>将下载好的anacoda3放在主目录下（home）</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-bf11b22476c67c32?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（2）、安装命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash Anaconda3-2019.10-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>\n\n<p>回车运行如下</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-abc60657a1bc3e68?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>按回车键继续，会读取许可，出现个More，一直按回车以及yes,然后会出现下图：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e7d46ce7235b42f5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>一直往下回车和yes</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fd72e95629e0bbc4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>安装成功</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-6eb44e62214df4b5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）、配置环境变量</p>\n<p>为了方便编辑环境变量，这里安装一个编辑器gedit，命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install gedit</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-53b5ae85401a288e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>打开环境变量，并使用命令：sudo gedit ~/.bashrc查看系统环境，文件末尾输入以下代码:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在文件的末尾加上下述代码：</span><br></pre></td></tr></table></figure>\n\n<p>如下图</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-f09470e155fecbd2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（5）、更新bashrc，并查看Anacoda3的安装情况</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-619cb7a09394eacf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>查询当前已经安装的conda库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda list</span><br></pre></td></tr></table></figure>\n\n<p>安装库(这里的***代表库名称）, 如果没有你的库文件，可以选择这个命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install ***</span><br></pre></td></tr></table></figure>\n\n<p>更新库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda update ***</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-391a8441d334bd03?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（5）、(如果你不用还可以卸载)，不卸载就跳过此处，建议不要卸载</p>\n<p>卸载conda: 直接删除anaconda文件夹即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf anaconda3</span><br></pre></td></tr></table></figure>\n\n<p>(6)、进入和退出 conda base 环境</p>\n<p>进入 conda base 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda activate base</span><br></pre></td></tr></table></figure>\n\n<p>退出 conda base 环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda deactivate</span><br></pre></td></tr></table></figure>\n\n<p>编辑 conda 环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~&#x2F;.bashrc 或者 sudo gedit ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>\n\n<p><strong>2、使用以上Anaconda3安装Tensorflow</strong></p>\n<p>(1)、在linux终端或cmd中输入以下命令搜索当前可用的tensorflow版本，如果没有就要创建：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda search -t conda tensorflow</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-fe8a4e1123595e80?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>安装完成之后，最后还提示激活与退出</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># To activate this environment, use</span><br></pre></td></tr></table></figure>\n\n<p>（2）、正式安装tensorflow</p>\n<p>激活虚拟环境后conda activate tf，我们开始用conda安装tensorflow吧！</p>\n<p> 如果你还不知道GPU是什么东东，那你的计算机里肯定没有安装cuda、cudnn 、显卡之类的东西，那就安装CPU版本；</p>\n<p>安装CPU版本的tensorflow(推荐安装)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install tensorflow</span><br></pre></td></tr></table></figure>\n\n<p>安装GPU版本</p>\n<p>（如果你不理解建议不要安装，初学者还是卸载CPU版本的tensorflow吧！）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install tensorflow-gpu</span><br></pre></td></tr></table></figure>\n\n<p>等待几分钟之后，看看自己是否安装成功：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-c8cb43c1e8d6bc34?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-41da2da8da65d70a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>（3）、测试安装是否成功：在python3.7.6下导入tensorflow：</p>\n<p>(不报错的话说明成功安装了)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import tensorflow as tf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-df2c1e9930e63b44?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>至此我们完整地安装完毕，以下是一些附件资料</p>\n<hr>\n<p><strong>附件资料</strong></p>\n<h2 id=\"Conda的环境管理及知识点\"><a href=\"#Conda的环境管理及知识点\" class=\"headerlink\" title=\"Conda的环境管理及知识点\"></a>Conda的环境管理及知识点</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#conda版本查看</span><br><span class=\"line\">#conda版本查看</span><br><span class=\"line\">conda -V</span><br><span class=\"line\">conda --version</span><br><span class=\"line\">​</span><br><span class=\"line\">#更新         </span><br><span class=\"line\">conda update conda           #更新conda</span><br><span class=\"line\">conda update anaconda        #更新anaconda</span><br><span class=\"line\">conda update anaconda-navigator    #update最新版本的anaconda-navigator</span><br><span class=\"line\">​</span><br><span class=\"line\"># 查看已安装的虚拟环境</span><br><span class=\"line\">conda env list </span><br><span class=\"line\">conda info -e</span><br><span class=\"line\">conda info --env</span><br><span class=\"line\">​</span><br><span class=\"line\"># conda -create -n env_name list_of_packages</span><br><span class=\"line\"># env_name是需要创建的环境名称，list_of_packages是在新环境中需要安装的工具包，有多个时用空格隔开</span><br><span class=\"line\"># 创建一个名为的环境，指定Python版本是3.5（conda会自动寻找3.5.x中的最新版本）</span><br><span class=\"line\">​</span><br><span class=\"line\">conda create -n xxxx python&#x3D;3.5</span><br><span class=\"line\">conda create --name xxxx python&#x3D;3.5</span><br><span class=\"line\">​</span><br><span class=\"line\">conda activate xxxx           #开启xxxx环境</span><br><span class=\"line\">conda deactivate              #关闭环境</span><br><span class=\"line\">​</span><br><span class=\"line\"># 克隆环境，我想创建一个新环境BBB，完全克隆AAA的环境配置</span><br><span class=\"line\">conda create -n BBB --clone AAA</span><br><span class=\"line\">​</span><br><span class=\"line\"># 删除一个已有的环境</span><br><span class=\"line\">conda remove -n xxxx --all</span><br><span class=\"line\">​</span><br><span class=\"line\"># 环境重命名</span><br><span class=\"line\"># conda没有重命名的命令，所以可以先 clone 一个环境，然后删除原有的环境</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Conda的包管理知识点\"><a href=\"#Conda的包管理知识点\" class=\"headerlink\" title=\"Conda的包管理知识点\"></a>Conda的包管理知识点</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看当前环境下已安装的包</span><br><span class=\"line\">conda list</span><br><span class=\"line\"># 查看某个指定环境（xxxxx）下已安装的包</span><br><span class=\"line\">conda list -n xxxxx</span><br><span class=\"line\"># 查找package信息，例如查找numpy包信息，会列numpy的所有版本</span><br><span class=\"line\">conda search numpy</span><br><span class=\"line\"># 安装package，安装多个包用空格隔开</span><br><span class=\"line\"># 如果不用-n指定环境名称，则被安装在当前活跃环境</span><br><span class=\"line\"># 也可以通过-c指定通过某个channel安装</span><br><span class=\"line\">conda install -n xxxxx numpy pandas</span><br><span class=\"line\"># 更新package</span><br><span class=\"line\">conda update numpy           # 更新numpy（当前活跃的环境）  </span><br><span class=\"line\">conda update -n xxxxx numpy  # 更新指定xxxxx环境下的numpy</span><br><span class=\"line\">conda update python          # 假设当前环境是python3.4, conda会将python升级为3.4.x系列的最新版本</span><br><span class=\"line\"># 删除环境package</span><br><span class=\"line\">conda uninstall numpy</span><br><span class=\"line\">conda remove numpy           # 删除numpy包（当前活跃的环境）</span><br><span class=\"line\">conda remove -n xxxxx numpy  # 删除xxxxx环境下的包</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e2f8f134250641fa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"><br><strong>参考文献：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq654129588&#x2F;article&#x2F;details&#x2F;79917515</span><br><span class=\"line\">https:&#x2F;&#x2F;ask.csdn.net&#x2F;questions&#x2F;657580</span><br><span class=\"line\">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;HongjianChen&#x2F;p&#x2F;8385547.html</span><br><span class=\"line\">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_45100771&#x2F;article&#x2F;details&#x2F;102868264</span><br><span class=\"line\">https:&#x2F;&#x2F;blog.csdn.net&#x2F;superjunenaruto&#x2F;article&#x2F;details&#x2F;9539068</span><br></pre></td></tr></table></figure>\n\n<p><strong><em>您可能喜欢的文章：</em></strong></p>\n<ul>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析开篇：一个简单的应用（2019/11/04）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（一）：NumPy数组</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（七）：pandas入门与数据结构基础</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（九）：数据的分组与聚合</a></p>\n</li>\n</ul>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-509095b3dfd78508?imageMogr2/auto-orient/strip\" alt=\"image\"></p>\n<p><strong><em>认认真真系统学习数据分析</em></strong></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-27cc989be402ba6c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-2a8e6db7678c1331?imageMogr2/auto-orient/strip\" alt=\"image\"></p>"},{"title":"互联网学习资源","_content":"\n![](https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等~~~<br>\n\n\n\n[《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&token=51702026&lang=zh_CN)\n<!-- more -->\n\n[Python | Pandas 快速处理文本数据](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485656&idx=1&sn=57e94f6ea6c0713a9a081c0a6b207416&chksm=9710092ea06780382d78aeaa5c14559965752c28b23e3068a62ec89297980e26f858e5689b9c&token=1279158786&lang=zh_CN#rd)\n\n\n[解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485771&idx=1&sn=a8bca897963101c64dbf3072932612b0&chksm=971008bda06781ab85690587726635858ba32271536f7f199531af1e63c35bcd6f167f0f288b&token=1305373609&lang=zh_CN#rd)\n\n\n\n\n\n\n***您可能喜欢的文章：***\n\n*   [数据分析开篇：一个简单的应用（2019/11/04）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（一）：NumPy数组](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（二）：NumPy摘要----文章末尾附Python](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect) \n\n*   [2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect)\n\n*   [数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（七）：pandas入门与数据结构基础](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（九）：数据的分组与聚合](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect)\n\n\n\n\n\n\n推荐互联网人工智能学习资料\n\n[>>>点击进入<<<](https://github.com/KangChou/AI-algorithm)\n\n\n***视频赏析***\n\n视频来源我的B站：Cucker周周的实验室\n![-->](hello-world/ck.jpg)\n\n<iframe src=\"//player.bilibili.com/player.html?aid=100188774&bvid=BV1c7411D763&cid=170907793&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n<br>\n\n[>>>更多视频点击进入我的B站<<<](https://space.bilibili.com/358594193?spm_id_from=333.788.b_765f7570696e666f.2)\n\n\n\n\n怀旧经典：《牧马人》，最淳朴的爱情，也是父辈们才能拥有的爱情。\n<iframe src=\"//player.bilibili.com/player.html?aid=77312863&cid=132250178&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \n</iframe>\n<br>\n\n\n\n\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29759371&auto=1&height=66\"></iframe>\n\n\n博客网页正在更新中...\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","source":"_posts/hello-world.md","raw":"---\ntitle: 互联网学习资源\ncategories: 学习资料\n---\n\n![](https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等~~~<br>\n\n\n\n[《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&token=51702026&lang=zh_CN)\n<!-- more -->\n\n[Python | Pandas 快速处理文本数据](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485656&idx=1&sn=57e94f6ea6c0713a9a081c0a6b207416&chksm=9710092ea06780382d78aeaa5c14559965752c28b23e3068a62ec89297980e26f858e5689b9c&token=1279158786&lang=zh_CN#rd)\n\n\n[解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485771&idx=1&sn=a8bca897963101c64dbf3072932612b0&chksm=971008bda06781ab85690587726635858ba32271536f7f199531af1e63c35bcd6f167f0f288b&token=1305373609&lang=zh_CN#rd)\n\n\n\n\n\n\n***您可能喜欢的文章：***\n\n*   [数据分析开篇：一个简单的应用（2019/11/04）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（一）：NumPy数组](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（二）：NumPy摘要----文章末尾附Python](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect) \n\n*   [2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect)\n\n*   [数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（七）：pandas入门与数据结构基础](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect)\n\n*   [2020年数据分析必知必会（九）：数据的分组与聚合](http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect)\n\n\n\n\n\n\n推荐互联网人工智能学习资料\n\n[>>>点击进入<<<](https://github.com/KangChou/AI-algorithm)\n\n\n***视频赏析***\n\n视频来源我的B站：Cucker周周的实验室\n![-->](hello-world/ck.jpg)\n\n<iframe src=\"//player.bilibili.com/player.html?aid=100188774&bvid=BV1c7411D763&cid=170907793&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n<br>\n\n[>>>更多视频点击进入我的B站<<<](https://space.bilibili.com/358594193?spm_id_from=333.788.b_765f7570696e666f.2)\n\n\n\n\n怀旧经典：《牧马人》，最淳朴的爱情，也是父辈们才能拥有的爱情。\n<iframe src=\"//player.bilibili.com/player.html?aid=77312863&cid=132250178&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \n</iframe>\n<br>\n\n\n\n\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=29759371&auto=1&height=66\"></iframe>\n\n\n博客网页正在更新中...\n\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","slug":"hello-world","published":1,"date":"2020-03-30T00:39:33.087Z","updated":"2020-04-06T17:00:29.679Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8owmsq5000724ur8l0zgulp","content":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt></p>\n<p>本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等<del>~</del><br></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&token=51702026&lang=zh_CN\" target=\"_blank\" rel=\"noopener\">《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》</a></p>\n<a id=\"more\"></a>\n\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485656&idx=1&sn=57e94f6ea6c0713a9a081c0a6b207416&chksm=9710092ea06780382d78aeaa5c14559965752c28b23e3068a62ec89297980e26f858e5689b9c&token=1279158786&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">Python | Pandas 快速处理文本数据</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485771&idx=1&sn=a8bca897963101c64dbf3072932612b0&chksm=971008bda06781ab85690587726635858ba32271536f7f199531af1e63c35bcd6f167f0f288b&token=1305373609&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】</a></p>\n<p><strong><em>您可能喜欢的文章：</em></strong></p>\n<ul>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析开篇：一个简单的应用（2019/11/04）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（一）：NumPy数组</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python</a> </p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（七）：pandas入门与数据结构基础</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（九）：数据的分组与聚合</a></p>\n</li>\n</ul>\n<p>推荐互联网人工智能学习资料</p>\n<p><a href=\"https://github.com/KangChou/AI-algorithm\" target=\"_blank\" rel=\"noopener\">&gt;&gt;&gt;点击进入&lt;&lt;&lt;</a></p>\n<p><strong><em>视频赏析</em></strong></p>\n<p>视频来源我的B站：Cucker周周的实验室<br><img src=\"/2020/03/30/hello-world/ck.jpg\" alt=\"--&gt;\"></p>\n<iframe src=\"//player.bilibili.com/player.html?aid=100188774&bvid=BV1c7411D763&cid=170907793&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n<br>\n\n<p><a href=\"https://space.bilibili.com/358594193?spm_id_from=333.788.b_765f7570696e666f.2\" target=\"_blank\" rel=\"noopener\">&gt;&gt;&gt;更多视频点击进入我的B站&lt;&lt;&lt;</a></p>\n<p>怀旧经典：《牧马人》，最淳朴的爱情，也是父辈们才能拥有的爱情。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=77312863&cid=132250178&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \n</iframe>\n<br>\n\n\n\n\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=29759371&auto=1&height=66\"></iframe>\n\n\n<p>博客网页正在更新中…</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","site":{"data":{}},"excerpt":"<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-7749f7682034b964.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt></p>\n<p>本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等<del>~</del><br></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247484965&idx=1&sn=757e038fdc0eb968008ff73752b2456c&chksm=971007d3a0678ec5ae9fa1c1c871ff8cf15b67656f227327e3b507654a7cac28002f867ddb01&token=51702026&lang=zh_CN\" target=\"_blank\" rel=\"noopener\">《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》</a></p>","more":"<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485656&idx=1&sn=57e94f6ea6c0713a9a081c0a6b207416&chksm=9710092ea06780382d78aeaa5c14559965752c28b23e3068a62ec89297980e26f858e5689b9c&token=1279158786&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">Python | Pandas 快速处理文本数据</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485771&idx=1&sn=a8bca897963101c64dbf3072932612b0&chksm=971008bda06781ab85690587726635858ba32271536f7f199531af1e63c35bcd6f167f0f288b&token=1305373609&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】</a></p>\n<p><strong><em>您可能喜欢的文章：</em></strong></p>\n<ul>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485246&idx=1&sn=21e5385c26fe6866b056619e87d8829b&chksm=971006c8a0678fde4c18db3115ed91490b8c653b25aebd5bd61605eda5eeb992008c946a447a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析开篇：一个简单的应用（2019/11/04）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（一）：NumPy数组</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485315&idx=1&sn=ddec9e455757a2af1df8a3fca319b173&chksm=97100675a0678f6316f39e5569d92b5727397d86888ec28fc49ae5e3fe71ab2cc8df00889e8a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python</a> </p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485351&idx=1&sn=c0d14713527646dd7aa113b1b04452d4&chksm=97100651a0678f47fff6692d934aaab91f53b52348dc7f567be99e21358207064ae4b0c328b1&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485406&idx=1&sn=50b327edec6ea33605a6551623133a9d&chksm=97100628a0678f3ee979a6f01850b63dd1298dc07ca0e5f098e973ff1b8c888fd0125257e98a&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485459&idx=1&sn=5d9eaed9972b6dcd7e838530b6c9445f&chksm=971009e5a06780f3d8f401ecb337ce88de166edfec059d43c9a0be2274c01322e32ce84a5718&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485579&idx=1&sn=a5128b4d508a51a5f8d3ba0b82364752&chksm=9710097da067806bcd58e326e24971690d0736fe69a85f390b8043415600ae7ceb72d4729a52&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485593&idx=1&sn=7a7801b8daa3f5b43a79130df721aba1&chksm=9710096fa0678079c647b363eb92facda180402defcb4375322f30035f96902b57843226b8da&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（七）：pandas入门与数据结构基础</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485601&idx=1&sn=c8915dfba4416efc8149eb11090c70bd&chksm=97100957a067804179633e45417e803481a0057dd4bc842e6652ba4cc1a19cb24709b16c0d68&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大）</a></p>\n</li>\n<li><p><a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485699&idx=1&sn=e4a9946cfa5eb87e1796a57b2dacf111&chksm=971008f5a06781e3a09e1eef39a7edf78703f2e44451158da06d6570a84dd4e5fe3f94bb6f28&scene=21#wechat_redirect\" target=\"_blank\" rel=\"noopener\">2020年数据分析必知必会（九）：数据的分组与聚合</a></p>\n</li>\n</ul>\n<p>推荐互联网人工智能学习资料</p>\n<p><a href=\"https://github.com/KangChou/AI-algorithm\" target=\"_blank\" rel=\"noopener\">&gt;&gt;&gt;点击进入&lt;&lt;&lt;</a></p>\n<p><strong><em>视频赏析</em></strong></p>\n<p>视频来源我的B站：Cucker周周的实验室<br><img src=\"/2020/03/30/hello-world/ck.jpg\" alt=\"--&gt;\"></p>\n<iframe src=\"//player.bilibili.com/player.html?aid=100188774&bvid=BV1c7411D763&cid=170907793&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n<br>\n\n<p><a href=\"https://space.bilibili.com/358594193?spm_id_from=333.788.b_765f7570696e666f.2\" target=\"_blank\" rel=\"noopener\">&gt;&gt;&gt;更多视频点击进入我的B站&lt;&lt;&lt;</a></p>\n<p>怀旧经典：《牧马人》，最淳朴的爱情，也是父辈们才能拥有的爱情。</p>\n<iframe src=\"//player.bilibili.com/player.html?aid=77312863&cid=132250178&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> \n</iframe>\n<br>\n\n\n\n\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=29759371&auto=1&height=66\"></iframe>\n\n\n<p>博客网页正在更新中…</p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>"},{"title":"互联网学习资源","type":"算法","_content":"\n# 2020PythonKangChou\n详细请看上面的.py文件\n python 3\n# 算法基础与数据结构\n[每日算法之旅(第一天):枚举算法的平凡与伟大](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485927&idx=1&sn=b7724bfd20e306a72d2b23f795315169&chksm=97100811a06781073b4c99fda4cbc4fd904752d4076641dc5246a1a9130529531a80d1189c53&token=1006181174&lang=zh_CN#rd)\n\n# 递归的思想\n您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-782f2379558bd6da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!-- more -->\n\n您可以移除第一个玩偶的上半部分，并且在里面看到什么？另一个稍小的俄罗斯娃娃！\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e00f6450bc007061.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n您可以删除该洋娃娃并将其上半部分和下半部分分开。然后您会看到另一个甚至更小的娃娃：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-75c524c491823fff.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再一次：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-dd0462557218cf67.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n而且您可以继续。最终，您找到了最年轻的俄罗斯娃娃。它只是一件，因此无法打开：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8a10710b7e16bce0.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n我们从一个大俄罗斯玩偶开始，然后看到越来越小的俄罗斯玩偶，直到我们看到一个很小的玩偶无法容纳另一个。\n\n俄罗斯玩偶与算法有什么关系？就像一个俄罗斯娃娃里面有一个较小的俄罗斯娃娃，里面还有一个甚至更小的俄罗斯娃娃一样，一直到一个很小的俄罗斯娃娃（太小而无法容纳另一个），我们将看到如何设计一种算法来通过解决相同问题的较小实例来解决问题，除非问题很小，以至于我们只能直接解决它。我们称这种技术为递归。\n\n递归有很多应用程序。在本模块中，我们将看到如何使用递归来计算阶乘函数，确定单词是否是回文式，计算数字的幂，绘制类型的分形以及解决古老的河内塔问题。以后的模块将使用递归来解决其他问题，包括排序。\n\n\n\n## 一、数据结构基础\n### 1、创建数字列表\n使用方法range()\n\n    number=list(range(1,4)) %不包括右端点4\n### 2、访问表中的值\n\n<span style=\"color: green\">  \n    >>> number=list(range(1,2021))\n</span>\n\n    >>> \n    number\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ..., 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, \n    2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n\n    >>>> number[2019]\n    2020\n    >>> number[0]    \n     1\n    >>> list1 = ['2020','Python','baidu','douyin']\n    >>> list1[3]\n    'douyin'\n    \n   \n    >>> print (list1[3])\n    douyin\n    >>> list2 = [1,2,3,4,5,6,7,8,9,]    \n    >>> list2[1:4]\n    [2, 3, 4] \n### 3、删除中重复的元素并使得列表元素保持不变\n    [1,4,9,5,5,8,3]\n\n\n    1)\n    \n    # 删除可散列重复的元素（可散列就是列表的元素是一个随便放的数值，反之就是不可散列）\n    #思想：构造一个函数或模块来进行调用\n    def dedupe(items):\n        seen = set()#判定i元素在items中\n        #判定i元素不在seen中,注意：这里的seen被赋予一个集合列表的形象\n        #如果i元素都在列表items中，那么就输出i\n        for i in items:\n            if i not in seen:\n                yield i  #输出i\n                seen.add(i)\n        #下面给出要判断的元素和列表\n    if __name__ == \"__main__\":\n        y = [1,4,9,-5,-5,8,3] #这里的y=items\n        print (y)           #打印列表y与后面的进行对比\n        print(list(dedupe(y))) #调用上面dedupe函数的方法\n\n\n     [1, 4, 9, 5, 5, 8, 3]\n     [1, 4, 9, 5, 8, 3]\n\n\n \n \n\n    2)删除不可散列表中重复的元素，例如：列表里有字典\n    def funha(items, key=None):\n    seen = set()\n    for i in items:\n    a = i if key is None else key(i)\n    if a not in seen:\n    yield i\n    seen.add(a)\n    \n    if __name__ == \"__main__\":\n    b = [{'x': 6, 'y': 72},\n    {'x': 16, 'y': 12},\n    {'x': 26, 'y': 52},\n    {'x': 36, 'y': 32}]\n    print (b)\n    print(list(funha(b, key=lambda b: (b['x'], b['y']))))\n       \n       [{'x': 36, 'y': 32}, {'x': 16, 'y': 12}, {'x': 26, 'y': 52}, {'x': 36, 'y': 32}]\n    [{'x': 6, 'y': 72}, {'x': 16, 'y': 12}, {'x': 26, 'y': 52}] \n\n#### 附加说明 `if __name__ == 'main__':` 的作用\nPython文件通常有两种使用方法:\n第一是作为脚本直接执行;\n第二是 import 导入其他的 python 脚本程序中被调用时（模块重用）被执行。\n因此 `if __name__ == 'main__':` 的作用就是控制这两种情况执行代码的过程，在 `if __name__ == 'main__': `下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。\n\n下面举例说明：\n#### 例1 首先我们先建立一个pybianlie.py文件，运行代码如下\n\n![bianlie.JPG](https://upload-images.jianshu.io/upload_images/18578734-0e08838eafbdcb9c.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 例2 建立第二个test.py文件，运行代码如下\n![test.JPG](https://upload-images.jianshu.io/upload_images/18578734-0b627e8dcd4846e5.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n书写小技巧：图片先在简书转为MK.md文件语法，再放入github的.md文件中。\n\n### 4、计算元素出现次数最多的元素\n\n![Counter.JPG](https://upload-images.jianshu.io/upload_images/18578734-c24f6f477a6523a4.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    \n    #计算元素出现次数最多的名人\n    import collections \n    Celebrity = ['Platon','Platon','O’Henry','司马迁','Curie','Curie','','Picasso','司马迁','司马迁','Qin Shi Huang','Curie','司马迁','Qin Shi Huang','霍去病']\n    from collections import Counter\n    Celebrity_counters = Counter(Celebrity)\n    TOP_threecounter = Celebrity_counters.most_common(4)#输出四个名人\n    print (TOP_threecounter)\n    \n    执行结果：\n    [('司马迁', 4), ('Curie', 3), ('Platon', 2), ('Qin Shi Huang', 2)]\n\n","source":"_posts/kc.md","raw":"---\ntitle: 互联网学习资源\ncategories: 算法\ntype: 算法\n---\n\n# 2020PythonKangChou\n详细请看上面的.py文件\n python 3\n# 算法基础与数据结构\n[每日算法之旅(第一天):枚举算法的平凡与伟大](https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485927&idx=1&sn=b7724bfd20e306a72d2b23f795315169&chksm=97100811a06781073b4c99fda4cbc4fd904752d4076641dc5246a1a9130529531a80d1189c53&token=1006181174&lang=zh_CN#rd)\n\n# 递归的思想\n您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-782f2379558bd6da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!-- more -->\n\n您可以移除第一个玩偶的上半部分，并且在里面看到什么？另一个稍小的俄罗斯娃娃！\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-e00f6450bc007061.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n您可以删除该洋娃娃并将其上半部分和下半部分分开。然后您会看到另一个甚至更小的娃娃：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-75c524c491823fff.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n再一次：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-dd0462557218cf67.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n而且您可以继续。最终，您找到了最年轻的俄罗斯娃娃。它只是一件，因此无法打开：\n\n![image](https://upload-images.jianshu.io/upload_images/15863171-8a10710b7e16bce0.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n我们从一个大俄罗斯玩偶开始，然后看到越来越小的俄罗斯玩偶，直到我们看到一个很小的玩偶无法容纳另一个。\n\n俄罗斯玩偶与算法有什么关系？就像一个俄罗斯娃娃里面有一个较小的俄罗斯娃娃，里面还有一个甚至更小的俄罗斯娃娃一样，一直到一个很小的俄罗斯娃娃（太小而无法容纳另一个），我们将看到如何设计一种算法来通过解决相同问题的较小实例来解决问题，除非问题很小，以至于我们只能直接解决它。我们称这种技术为递归。\n\n递归有很多应用程序。在本模块中，我们将看到如何使用递归来计算阶乘函数，确定单词是否是回文式，计算数字的幂，绘制类型的分形以及解决古老的河内塔问题。以后的模块将使用递归来解决其他问题，包括排序。\n\n\n\n## 一、数据结构基础\n### 1、创建数字列表\n使用方法range()\n\n    number=list(range(1,4)) %不包括右端点4\n### 2、访问表中的值\n\n<span style=\"color: green\">  \n    >>> number=list(range(1,2021))\n</span>\n\n    >>> \n    number\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ..., 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, \n    2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n\n    >>>> number[2019]\n    2020\n    >>> number[0]    \n     1\n    >>> list1 = ['2020','Python','baidu','douyin']\n    >>> list1[3]\n    'douyin'\n    \n   \n    >>> print (list1[3])\n    douyin\n    >>> list2 = [1,2,3,4,5,6,7,8,9,]    \n    >>> list2[1:4]\n    [2, 3, 4] \n### 3、删除中重复的元素并使得列表元素保持不变\n    [1,4,9,5,5,8,3]\n\n\n    1)\n    \n    # 删除可散列重复的元素（可散列就是列表的元素是一个随便放的数值，反之就是不可散列）\n    #思想：构造一个函数或模块来进行调用\n    def dedupe(items):\n        seen = set()#判定i元素在items中\n        #判定i元素不在seen中,注意：这里的seen被赋予一个集合列表的形象\n        #如果i元素都在列表items中，那么就输出i\n        for i in items:\n            if i not in seen:\n                yield i  #输出i\n                seen.add(i)\n        #下面给出要判断的元素和列表\n    if __name__ == \"__main__\":\n        y = [1,4,9,-5,-5,8,3] #这里的y=items\n        print (y)           #打印列表y与后面的进行对比\n        print(list(dedupe(y))) #调用上面dedupe函数的方法\n\n\n     [1, 4, 9, 5, 5, 8, 3]\n     [1, 4, 9, 5, 8, 3]\n\n\n \n \n\n    2)删除不可散列表中重复的元素，例如：列表里有字典\n    def funha(items, key=None):\n    seen = set()\n    for i in items:\n    a = i if key is None else key(i)\n    if a not in seen:\n    yield i\n    seen.add(a)\n    \n    if __name__ == \"__main__\":\n    b = [{'x': 6, 'y': 72},\n    {'x': 16, 'y': 12},\n    {'x': 26, 'y': 52},\n    {'x': 36, 'y': 32}]\n    print (b)\n    print(list(funha(b, key=lambda b: (b['x'], b['y']))))\n       \n       [{'x': 36, 'y': 32}, {'x': 16, 'y': 12}, {'x': 26, 'y': 52}, {'x': 36, 'y': 32}]\n    [{'x': 6, 'y': 72}, {'x': 16, 'y': 12}, {'x': 26, 'y': 52}] \n\n#### 附加说明 `if __name__ == 'main__':` 的作用\nPython文件通常有两种使用方法:\n第一是作为脚本直接执行;\n第二是 import 导入其他的 python 脚本程序中被调用时（模块重用）被执行。\n因此 `if __name__ == 'main__':` 的作用就是控制这两种情况执行代码的过程，在 `if __name__ == 'main__': `下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。\n\n下面举例说明：\n#### 例1 首先我们先建立一个pybianlie.py文件，运行代码如下\n\n![bianlie.JPG](https://upload-images.jianshu.io/upload_images/18578734-0e08838eafbdcb9c.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 例2 建立第二个test.py文件，运行代码如下\n![test.JPG](https://upload-images.jianshu.io/upload_images/18578734-0b627e8dcd4846e5.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n书写小技巧：图片先在简书转为MK.md文件语法，再放入github的.md文件中。\n\n### 4、计算元素出现次数最多的元素\n\n![Counter.JPG](https://upload-images.jianshu.io/upload_images/18578734-c24f6f477a6523a4.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n    \n    #计算元素出现次数最多的名人\n    import collections \n    Celebrity = ['Platon','Platon','O’Henry','司马迁','Curie','Curie','','Picasso','司马迁','司马迁','Qin Shi Huang','Curie','司马迁','Qin Shi Huang','霍去病']\n    from collections import Counter\n    Celebrity_counters = Counter(Celebrity)\n    TOP_threecounter = Celebrity_counters.most_common(4)#输出四个名人\n    print (TOP_threecounter)\n    \n    执行结果：\n    [('司马迁', 4), ('Curie', 3), ('Platon', 2), ('Qin Shi Huang', 2)]\n\n","slug":"kc","published":1,"date":"2020-04-06T05:40:49.885Z","updated":"2020-04-06T16:59:02.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck8owmsq7000924ur1tgd49tl","content":"<h1 id=\"2020PythonKangChou\"><a href=\"#2020PythonKangChou\" class=\"headerlink\" title=\"2020PythonKangChou\"></a>2020PythonKangChou</h1><p>详细请看上面的.py文件<br> python 3</p>\n<h1 id=\"算法基础与数据结构\"><a href=\"#算法基础与数据结构\" class=\"headerlink\" title=\"算法基础与数据结构\"></a>算法基础与数据结构</h1><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485927&idx=1&sn=b7724bfd20e306a72d2b23f795315169&chksm=97100811a06781073b4c99fda4cbc4fd904752d4076641dc5246a1a9130529531a80d1189c53&token=1006181174&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">每日算法之旅(第一天):枚举算法的平凡与伟大</a></p>\n<h1 id=\"递归的思想\"><a href=\"#递归的思想\" class=\"headerlink\" title=\"递归的思想\"></a>递归的思想</h1><p>您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-782f2379558bd6da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<a id=\"more\"></a>\n\n<p>您可以移除第一个玩偶的上半部分，并且在里面看到什么？另一个稍小的俄罗斯娃娃！</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e00f6450bc007061.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>您可以删除该洋娃娃并将其上半部分和下半部分分开。然后您会看到另一个甚至更小的娃娃：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-75c524c491823fff.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再一次：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-dd0462557218cf67.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>而且您可以继续。最终，您找到了最年轻的俄罗斯娃娃。它只是一件，因此无法打开：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8a10710b7e16bce0.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>我们从一个大俄罗斯玩偶开始，然后看到越来越小的俄罗斯玩偶，直到我们看到一个很小的玩偶无法容纳另一个。</p>\n<p>俄罗斯玩偶与算法有什么关系？就像一个俄罗斯娃娃里面有一个较小的俄罗斯娃娃，里面还有一个甚至更小的俄罗斯娃娃一样，一直到一个很小的俄罗斯娃娃（太小而无法容纳另一个），我们将看到如何设计一种算法来通过解决相同问题的较小实例来解决问题，除非问题很小，以至于我们只能直接解决它。我们称这种技术为递归。</p>\n<p>递归有很多应用程序。在本模块中，我们将看到如何使用递归来计算阶乘函数，确定单词是否是回文式，计算数字的幂，绘制类型的分形以及解决古老的河内塔问题。以后的模块将使用递归来解决其他问题，包括排序。</p>\n<h2 id=\"一、数据结构基础\"><a href=\"#一、数据结构基础\" class=\"headerlink\" title=\"一、数据结构基础\"></a>一、数据结构基础</h2><h3 id=\"1、创建数字列表\"><a href=\"#1、创建数字列表\" class=\"headerlink\" title=\"1、创建数字列表\"></a>1、创建数字列表</h3><p>使用方法range()</p>\n<pre><code>number=list(range(1,4)) %不包括右端点4</code></pre><h3 id=\"2、访问表中的值\"><a href=\"#2、访问表中的值\" class=\"headerlink\" title=\"2、访问表中的值\"></a>2、访问表中的值</h3><span style=\"color: green\">  \n    >>> number=list(range(1,2021))\n</span>\n\n<pre><code>&gt;&gt;&gt; \nnumber\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ..., 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, \n2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n\n&gt;&gt;&gt;&gt; number[2019]\n2020\n&gt;&gt;&gt; number[0]    \n 1\n&gt;&gt;&gt; list1 = [&apos;2020&apos;,&apos;Python&apos;,&apos;baidu&apos;,&apos;douyin&apos;]\n&gt;&gt;&gt; list1[3]\n&apos;douyin&apos;\n\n\n&gt;&gt;&gt; print (list1[3])\ndouyin\n&gt;&gt;&gt; list2 = [1,2,3,4,5,6,7,8,9,]    \n&gt;&gt;&gt; list2[1:4]\n[2, 3, 4] </code></pre><h3 id=\"3、删除中重复的元素并使得列表元素保持不变\"><a href=\"#3、删除中重复的元素并使得列表元素保持不变\" class=\"headerlink\" title=\"3、删除中重复的元素并使得列表元素保持不变\"></a>3、删除中重复的元素并使得列表元素保持不变</h3><pre><code>[1,4,9,5,5,8,3]\n\n\n1)\n\n# 删除可散列重复的元素（可散列就是列表的元素是一个随便放的数值，反之就是不可散列）\n#思想：构造一个函数或模块来进行调用\ndef dedupe(items):\n    seen = set()#判定i元素在items中\n    #判定i元素不在seen中,注意：这里的seen被赋予一个集合列表的形象\n    #如果i元素都在列表items中，那么就输出i\n    for i in items:\n        if i not in seen:\n            yield i  #输出i\n            seen.add(i)\n    #下面给出要判断的元素和列表\nif __name__ == &quot;__main__&quot;:\n    y = [1,4,9,-5,-5,8,3] #这里的y=items\n    print (y)           #打印列表y与后面的进行对比\n    print(list(dedupe(y))) #调用上面dedupe函数的方法\n\n\n [1, 4, 9, 5, 5, 8, 3]\n [1, 4, 9, 5, 8, 3]\n\n\n\n\n\n2)删除不可散列表中重复的元素，例如：列表里有字典\ndef funha(items, key=None):\nseen = set()\nfor i in items:\na = i if key is None else key(i)\nif a not in seen:\nyield i\nseen.add(a)\n\nif __name__ == &quot;__main__&quot;:\nb = [{&apos;x&apos;: 6, &apos;y&apos;: 72},\n{&apos;x&apos;: 16, &apos;y&apos;: 12},\n{&apos;x&apos;: 26, &apos;y&apos;: 52},\n{&apos;x&apos;: 36, &apos;y&apos;: 32}]\nprint (b)\nprint(list(funha(b, key=lambda b: (b[&apos;x&apos;], b[&apos;y&apos;]))))\n\n   [{&apos;x&apos;: 36, &apos;y&apos;: 32}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}, {&apos;x&apos;: 36, &apos;y&apos;: 32}]\n[{&apos;x&apos;: 6, &apos;y&apos;: 72}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}] </code></pre><h4 id=\"附加说明-if-name-39-main-39-的作用\"><a href=\"#附加说明-if-name-39-main-39-的作用\" class=\"headerlink\" title=\"附加说明 if __name__ == &#39;main__&#39;: 的作用\"></a>附加说明 <code>if __name__ == &#39;main__&#39;:</code> 的作用</h4><p>Python文件通常有两种使用方法:<br>第一是作为脚本直接执行;<br>第二是 import 导入其他的 python 脚本程序中被调用时（模块重用）被执行。<br>因此 <code>if __name__ == &#39;main__&#39;:</code> 的作用就是控制这两种情况执行代码的过程，在 <code>if __name__ == &#39;main__&#39;:</code>下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。</p>\n<p>下面举例说明：</p>\n<h4 id=\"例1-首先我们先建立一个pybianlie-py文件，运行代码如下\"><a href=\"#例1-首先我们先建立一个pybianlie-py文件，运行代码如下\" class=\"headerlink\" title=\"例1 首先我们先建立一个pybianlie.py文件，运行代码如下\"></a>例1 首先我们先建立一个pybianlie.py文件，运行代码如下</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-0e08838eafbdcb9c.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"bianlie.JPG\"></p>\n<h4 id=\"例2-建立第二个test-py文件，运行代码如下\"><a href=\"#例2-建立第二个test-py文件，运行代码如下\" class=\"headerlink\" title=\"例2 建立第二个test.py文件，运行代码如下\"></a>例2 建立第二个test.py文件，运行代码如下</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-0b627e8dcd4846e5.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"test.JPG\"></p>\n<p>书写小技巧：图片先在简书转为MK.md文件语法，再放入github的.md文件中。</p>\n<h3 id=\"4、计算元素出现次数最多的元素\"><a href=\"#4、计算元素出现次数最多的元素\" class=\"headerlink\" title=\"4、计算元素出现次数最多的元素\"></a>4、计算元素出现次数最多的元素</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-c24f6f477a6523a4.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Counter.JPG\"></p>\n<pre><code>#计算元素出现次数最多的名人\nimport collections \nCelebrity = [&apos;Platon&apos;,&apos;Platon&apos;,&apos;O’Henry&apos;,&apos;司马迁&apos;,&apos;Curie&apos;,&apos;Curie&apos;,&apos;&apos;,&apos;Picasso&apos;,&apos;司马迁&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;Curie&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;霍去病&apos;]\nfrom collections import Counter\nCelebrity_counters = Counter(Celebrity)\nTOP_threecounter = Celebrity_counters.most_common(4)#输出四个名人\nprint (TOP_threecounter)\n\n执行结果：\n[(&apos;司马迁&apos;, 4), (&apos;Curie&apos;, 3), (&apos;Platon&apos;, 2), (&apos;Qin Shi Huang&apos;, 2)]</code></pre>","site":{"data":{}},"excerpt":"<h1 id=\"2020PythonKangChou\"><a href=\"#2020PythonKangChou\" class=\"headerlink\" title=\"2020PythonKangChou\"></a>2020PythonKangChou</h1><p>详细请看上面的.py文件<br> python 3</p>\n<h1 id=\"算法基础与数据结构\"><a href=\"#算法基础与数据结构\" class=\"headerlink\" title=\"算法基础与数据结构\"></a>算法基础与数据结构</h1><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzIwNzUwOTY1Nw==&mid=2247485927&idx=1&sn=b7724bfd20e306a72d2b23f795315169&chksm=97100811a06781073b4c99fda4cbc4fd904752d4076641dc5246a1a9130529531a80d1189c53&token=1006181174&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">每日算法之旅(第一天):枚举算法的平凡与伟大</a></p>\n<h1 id=\"递归的思想\"><a href=\"#递归的思想\" class=\"headerlink\" title=\"递归的思想\"></a>递归的思想</h1><p>您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-782f2379558bd6da.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>","more":"<p>您可以移除第一个玩偶的上半部分，并且在里面看到什么？另一个稍小的俄罗斯娃娃！</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-e00f6450bc007061.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>您可以删除该洋娃娃并将其上半部分和下半部分分开。然后您会看到另一个甚至更小的娃娃：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-75c524c491823fff.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>再一次：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-dd0462557218cf67.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>而且您可以继续。最终，您找到了最年轻的俄罗斯娃娃。它只是一件，因此无法打开：</p>\n<p><img src=\"https://upload-images.jianshu.io/upload_images/15863171-8a10710b7e16bce0.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<p>我们从一个大俄罗斯玩偶开始，然后看到越来越小的俄罗斯玩偶，直到我们看到一个很小的玩偶无法容纳另一个。</p>\n<p>俄罗斯玩偶与算法有什么关系？就像一个俄罗斯娃娃里面有一个较小的俄罗斯娃娃，里面还有一个甚至更小的俄罗斯娃娃一样，一直到一个很小的俄罗斯娃娃（太小而无法容纳另一个），我们将看到如何设计一种算法来通过解决相同问题的较小实例来解决问题，除非问题很小，以至于我们只能直接解决它。我们称这种技术为递归。</p>\n<p>递归有很多应用程序。在本模块中，我们将看到如何使用递归来计算阶乘函数，确定单词是否是回文式，计算数字的幂，绘制类型的分形以及解决古老的河内塔问题。以后的模块将使用递归来解决其他问题，包括排序。</p>\n<h2 id=\"一、数据结构基础\"><a href=\"#一、数据结构基础\" class=\"headerlink\" title=\"一、数据结构基础\"></a>一、数据结构基础</h2><h3 id=\"1、创建数字列表\"><a href=\"#1、创建数字列表\" class=\"headerlink\" title=\"1、创建数字列表\"></a>1、创建数字列表</h3><p>使用方法range()</p>\n<pre><code>number=list(range(1,4)) %不包括右端点4</code></pre><h3 id=\"2、访问表中的值\"><a href=\"#2、访问表中的值\" class=\"headerlink\" title=\"2、访问表中的值\"></a>2、访问表中的值</h3><span style=\"color: green\">  \n    >>> number=list(range(1,2021))\n</span>\n\n<pre><code>&gt;&gt;&gt; \nnumber\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ..., 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, \n2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020]\n\n\n&gt;&gt;&gt;&gt; number[2019]\n2020\n&gt;&gt;&gt; number[0]    \n 1\n&gt;&gt;&gt; list1 = [&apos;2020&apos;,&apos;Python&apos;,&apos;baidu&apos;,&apos;douyin&apos;]\n&gt;&gt;&gt; list1[3]\n&apos;douyin&apos;\n\n\n&gt;&gt;&gt; print (list1[3])\ndouyin\n&gt;&gt;&gt; list2 = [1,2,3,4,5,6,7,8,9,]    \n&gt;&gt;&gt; list2[1:4]\n[2, 3, 4] </code></pre><h3 id=\"3、删除中重复的元素并使得列表元素保持不变\"><a href=\"#3、删除中重复的元素并使得列表元素保持不变\" class=\"headerlink\" title=\"3、删除中重复的元素并使得列表元素保持不变\"></a>3、删除中重复的元素并使得列表元素保持不变</h3><pre><code>[1,4,9,5,5,8,3]\n\n\n1)\n\n# 删除可散列重复的元素（可散列就是列表的元素是一个随便放的数值，反之就是不可散列）\n#思想：构造一个函数或模块来进行调用\ndef dedupe(items):\n    seen = set()#判定i元素在items中\n    #判定i元素不在seen中,注意：这里的seen被赋予一个集合列表的形象\n    #如果i元素都在列表items中，那么就输出i\n    for i in items:\n        if i not in seen:\n            yield i  #输出i\n            seen.add(i)\n    #下面给出要判断的元素和列表\nif __name__ == &quot;__main__&quot;:\n    y = [1,4,9,-5,-5,8,3] #这里的y=items\n    print (y)           #打印列表y与后面的进行对比\n    print(list(dedupe(y))) #调用上面dedupe函数的方法\n\n\n [1, 4, 9, 5, 5, 8, 3]\n [1, 4, 9, 5, 8, 3]\n\n\n\n\n\n2)删除不可散列表中重复的元素，例如：列表里有字典\ndef funha(items, key=None):\nseen = set()\nfor i in items:\na = i if key is None else key(i)\nif a not in seen:\nyield i\nseen.add(a)\n\nif __name__ == &quot;__main__&quot;:\nb = [{&apos;x&apos;: 6, &apos;y&apos;: 72},\n{&apos;x&apos;: 16, &apos;y&apos;: 12},\n{&apos;x&apos;: 26, &apos;y&apos;: 52},\n{&apos;x&apos;: 36, &apos;y&apos;: 32}]\nprint (b)\nprint(list(funha(b, key=lambda b: (b[&apos;x&apos;], b[&apos;y&apos;]))))\n\n   [{&apos;x&apos;: 36, &apos;y&apos;: 32}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}, {&apos;x&apos;: 36, &apos;y&apos;: 32}]\n[{&apos;x&apos;: 6, &apos;y&apos;: 72}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}] </code></pre><h4 id=\"附加说明-if-name-39-main-39-的作用\"><a href=\"#附加说明-if-name-39-main-39-的作用\" class=\"headerlink\" title=\"附加说明 if __name__ == &#39;main__&#39;: 的作用\"></a>附加说明 <code>if __name__ == &#39;main__&#39;:</code> 的作用</h4><p>Python文件通常有两种使用方法:<br>第一是作为脚本直接执行;<br>第二是 import 导入其他的 python 脚本程序中被调用时（模块重用）被执行。<br>因此 <code>if __name__ == &#39;main__&#39;:</code> 的作用就是控制这两种情况执行代码的过程，在 <code>if __name__ == &#39;main__&#39;:</code>下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。</p>\n<p>下面举例说明：</p>\n<h4 id=\"例1-首先我们先建立一个pybianlie-py文件，运行代码如下\"><a href=\"#例1-首先我们先建立一个pybianlie-py文件，运行代码如下\" class=\"headerlink\" title=\"例1 首先我们先建立一个pybianlie.py文件，运行代码如下\"></a>例1 首先我们先建立一个pybianlie.py文件，运行代码如下</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-0e08838eafbdcb9c.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"bianlie.JPG\"></p>\n<h4 id=\"例2-建立第二个test-py文件，运行代码如下\"><a href=\"#例2-建立第二个test-py文件，运行代码如下\" class=\"headerlink\" title=\"例2 建立第二个test.py文件，运行代码如下\"></a>例2 建立第二个test.py文件，运行代码如下</h4><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-0b627e8dcd4846e5.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"test.JPG\"></p>\n<p>书写小技巧：图片先在简书转为MK.md文件语法，再放入github的.md文件中。</p>\n<h3 id=\"4、计算元素出现次数最多的元素\"><a href=\"#4、计算元素出现次数最多的元素\" class=\"headerlink\" title=\"4、计算元素出现次数最多的元素\"></a>4、计算元素出现次数最多的元素</h3><p><img src=\"https://upload-images.jianshu.io/upload_images/18578734-c24f6f477a6523a4.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Counter.JPG\"></p>\n<pre><code>#计算元素出现次数最多的名人\nimport collections \nCelebrity = [&apos;Platon&apos;,&apos;Platon&apos;,&apos;O’Henry&apos;,&apos;司马迁&apos;,&apos;Curie&apos;,&apos;Curie&apos;,&apos;&apos;,&apos;Picasso&apos;,&apos;司马迁&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;Curie&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;霍去病&apos;]\nfrom collections import Counter\nCelebrity_counters = Counter(Celebrity)\nTOP_threecounter = Celebrity_counters.most_common(4)#输出四个名人\nprint (TOP_threecounter)\n\n执行结果：\n[(&apos;司马迁&apos;, 4), (&apos;Curie&apos;, 3), (&apos;Platon&apos;, 2), (&apos;Qin Shi Huang&apos;, 2)]</code></pre>"}],"PostAsset":[{"_id":"source/_posts/hello-world/36.jpg","post":"ck8owmsq5000724ur8l0zgulp","slug":"36.jpg","modified":1,"renderable":1},{"_id":"source/_posts/hello-world/37.gif","post":"ck8owmsq5000724ur8l0zgulp","slug":"37.gif","modified":1,"renderable":1},{"_id":"source/_posts/hello-world/a2.jpg","post":"ck8owmsq5000724ur8l0zgulp","slug":"a2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/hello-world/ck.jpg","post":"ck8owmsq5000724ur8l0zgulp","slug":"ck.jpg","modified":1,"renderable":1},{"_id":"source/_posts/hello-world/wxgzh.JPG","post":"ck8owmsq5000724ur8l0zgulp","slug":"wxgzh.JPG","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ck8owmspo000024ur32sy4356","category_id":"ck8owmsq1000424ur5utjfxlr","_id":"ck8owmsqa000b24urasi3136j"},{"post_id":"ck8owmspx000224ur08u5gxm1","category_id":"ck8owmsq8000a24urbvsz5ijv","_id":"ck8owmsqb000d24ur735p9xcw"},{"post_id":"ck8owmsq3000524uraszl97q6","category_id":"ck8owmsqa000c24ur1qmkbed9","_id":"ck8owmsqc000f24ur4ogg2mj2"},{"post_id":"ck8owmsq5000724ur8l0zgulp","category_id":"ck8owmsqb000e24ur22da3rmw","_id":"ck8owmsqe000h24urdlwo6d3m"},{"post_id":"ck8owmsq7000924ur1tgd49tl","category_id":"ck8owmsqa000c24ur1qmkbed9","_id":"ck8owmsqe000i24ur0xg89f2s"}],"PostTag":[],"Tag":[]}}
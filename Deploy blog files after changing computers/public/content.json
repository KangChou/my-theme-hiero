{"meta":{"title":"诗和远方biubiu","subtitle":"作者：KangChou正在努力完善中...","description":"分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等， 闲暇之余会分享一些文学宝典， 期待您的加入~~~","author":"KangChou","url":"http://kangchou001.cn","root":"/"},"pages":[{"title":"关于作者","date":"2020-04-05T04:14:54.000Z","updated":"2020-04-06T08:27:57.751Z","comments":true,"path":"about/index.html","permalink":"http://kangchou001.cn/about/index.html","excerpt":"","text":"我是一名初入互联网的菜鸟，喜欢专研技术。如果你想了解更多关于科技的话题可以关注我的微信公众号：kangsinx 点击回到博客主页：“博客主页”"},{"title":"文章分类","date":"2020-04-05T16:20:16.000Z","updated":"2020-04-06T16:16:33.275Z","comments":true,"path":"categories/index.html","permalink":"http://kangchou001.cn/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-04-05T15:26:06.000Z","updated":"2020-04-06T16:41:20.967Z","comments":true,"path":"tags/index.html","permalink":"http://kangchou001.cn/tags/index.html","excerpt":"","text":"算法 Python 技巧 机器学习"},{"title":"","date":"2020-04-05T16:27:17.933Z","updated":"2020-04-05T16:27:17.933Z","comments":true,"path":"guestbook/index.html","permalink":"http://kangchou001.cn/guestbook/index.html","excerpt":"","text":""}],"posts":[{"title":"互联网学习资源","slug":"kc","date":"2020-04-06T05:40:49.885Z","updated":"2020-04-06T16:59:02.514Z","comments":true,"path":"2020/04/06/kc/","link":"","permalink":"http://kangchou001.cn/2020/04/06/kc/","excerpt":"2020PythonKangChou详细请看上面的.py文件 python 3 算法基础与数据结构每日算法之旅(第一天):枚举算法的平凡与伟大 递归的思想您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样：","text":"2020PythonKangChou详细请看上面的.py文件 python 3 算法基础与数据结构每日算法之旅(第一天):枚举算法的平凡与伟大 递归的思想您见过一套俄罗斯娃娃吗？最初，您只会看到一个通常为彩绘木头的雕像，看起来像这样： 您可以移除第一个玩偶的上半部分，并且在里面看到什么？另一个稍小的俄罗斯娃娃！ 您可以删除该洋娃娃并将其上半部分和下半部分分开。然后您会看到另一个甚至更小的娃娃： 再一次： 而且您可以继续。最终，您找到了最年轻的俄罗斯娃娃。它只是一件，因此无法打开： 我们从一个大俄罗斯玩偶开始，然后看到越来越小的俄罗斯玩偶，直到我们看到一个很小的玩偶无法容纳另一个。 俄罗斯玩偶与算法有什么关系？就像一个俄罗斯娃娃里面有一个较小的俄罗斯娃娃，里面还有一个甚至更小的俄罗斯娃娃一样，一直到一个很小的俄罗斯娃娃（太小而无法容纳另一个），我们将看到如何设计一种算法来通过解决相同问题的较小实例来解决问题，除非问题很小，以至于我们只能直接解决它。我们称这种技术为递归。 递归有很多应用程序。在本模块中，我们将看到如何使用递归来计算阶乘函数，确定单词是否是回文式，计算数字的幂，绘制类型的分形以及解决古老的河内塔问题。以后的模块将使用递归来解决其他问题，包括排序。 一、数据结构基础1、创建数字列表使用方法range() number=list(range(1,4)) %不包括右端点42、访问表中的值 >>> number=list(range(1,2021)) &gt;&gt;&gt; number [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, ..., 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020] &gt;&gt;&gt;&gt; number[2019] 2020 &gt;&gt;&gt; number[0] 1 &gt;&gt;&gt; list1 = [&apos;2020&apos;,&apos;Python&apos;,&apos;baidu&apos;,&apos;douyin&apos;] &gt;&gt;&gt; list1[3] &apos;douyin&apos; &gt;&gt;&gt; print (list1[3]) douyin &gt;&gt;&gt; list2 = [1,2,3,4,5,6,7,8,9,] &gt;&gt;&gt; list2[1:4] [2, 3, 4] 3、删除中重复的元素并使得列表元素保持不变[1,4,9,5,5,8,3] 1) # 删除可散列重复的元素（可散列就是列表的元素是一个随便放的数值，反之就是不可散列） #思想：构造一个函数或模块来进行调用 def dedupe(items): seen = set()#判定i元素在items中 #判定i元素不在seen中,注意：这里的seen被赋予一个集合列表的形象 #如果i元素都在列表items中，那么就输出i for i in items: if i not in seen: yield i #输出i seen.add(i) #下面给出要判断的元素和列表 if __name__ == &quot;__main__&quot;: y = [1,4,9,-5,-5,8,3] #这里的y=items print (y) #打印列表y与后面的进行对比 print(list(dedupe(y))) #调用上面dedupe函数的方法 [1, 4, 9, 5, 5, 8, 3] [1, 4, 9, 5, 8, 3] 2)删除不可散列表中重复的元素，例如：列表里有字典 def funha(items, key=None): seen = set() for i in items: a = i if key is None else key(i) if a not in seen: yield i seen.add(a) if __name__ == &quot;__main__&quot;: b = [{&apos;x&apos;: 6, &apos;y&apos;: 72}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}, {&apos;x&apos;: 36, &apos;y&apos;: 32}] print (b) print(list(funha(b, key=lambda b: (b[&apos;x&apos;], b[&apos;y&apos;])))) [{&apos;x&apos;: 36, &apos;y&apos;: 32}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}, {&apos;x&apos;: 36, &apos;y&apos;: 32}] [{&apos;x&apos;: 6, &apos;y&apos;: 72}, {&apos;x&apos;: 16, &apos;y&apos;: 12}, {&apos;x&apos;: 26, &apos;y&apos;: 52}] 附加说明 if __name__ == &#39;main__&#39;: 的作用Python文件通常有两种使用方法:第一是作为脚本直接执行;第二是 import 导入其他的 python 脚本程序中被调用时（模块重用）被执行。因此 if __name__ == &#39;main__&#39;: 的作用就是控制这两种情况执行代码的过程，在 if __name__ == &#39;main__&#39;:下的代码只有在第一种情况下（即文件作为脚本直接执行）才会被执行，而 import 到其他脚本中是不会被执行的。 下面举例说明： 例1 首先我们先建立一个pybianlie.py文件，运行代码如下 例2 建立第二个test.py文件，运行代码如下 书写小技巧：图片先在简书转为MK.md文件语法，再放入github的.md文件中。 4、计算元素出现次数最多的元素 #计算元素出现次数最多的名人 import collections Celebrity = [&apos;Platon&apos;,&apos;Platon&apos;,&apos;O’Henry&apos;,&apos;司马迁&apos;,&apos;Curie&apos;,&apos;Curie&apos;,&apos;&apos;,&apos;Picasso&apos;,&apos;司马迁&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;Curie&apos;,&apos;司马迁&apos;,&apos;Qin Shi Huang&apos;,&apos;霍去病&apos;] from collections import Counter Celebrity_counters = Counter(Celebrity) TOP_threecounter = Celebrity_counters.most_common(4)#输出四个名人 print (TOP_threecounter) 执行结果： [(&apos;司马迁&apos;, 4), (&apos;Curie&apos;, 3), (&apos;Platon&apos;, 2), (&apos;Qin Shi Huang&apos;, 2)]","categories":[{"name":"算法","slug":"算法","permalink":"http://kangchou001.cn/categories/%E7%AE%97%E6%B3%95/"}],"tags":[]},{"title":"值得你阅读的Hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！","slug":"kangsinx","date":"2020-04-05T14:57:06.000Z","updated":"2020-04-06T17:01:47.950Z","comments":true,"path":"2020/04/05/kangsinx/","link":"","permalink":"http://kangchou001.cn/2020/04/05/kangsinx/","excerpt":"本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页 值得你阅读的Hexo个人博客搭建","text":"本文的原文在我的微信公众号，欢迎点击下面蓝色字体链接进入主页 值得你阅读的Hexo个人博客搭建 Hexo快速搭建个人博客（2019/10/22更新） 使用到的工具 （本教程统一在Windows系统下搭建） Node.js、Hexo、Git、Github账号、Sublime Text3 请自行注册一个Github账号 最后的部署到网上的博客展示 文章目录： 前言 值得你知道的话 一、从创建到部署博客 二、博客的网页主题 ***三、更换域名+博客测试成功*** 前言今天一直在钻研这个博客，并搜索了大量有关hexo搭建博客的教程进行学习。我作为一个第一次使用Hexo搭建个人博客的菜鸟，我发现我踩了不少坑，哈哈，在这里我不得不吐槽一下某些撰写Hexo搭建个人博客的技术人员，用一个字来形容他们的博客就是“乱”，乱是因为我读完他们的博客写的内容发现逻辑顺序简直看得我一头雾水、细节内容对于他们来说就是一个摆设，难怪有好多人看不懂也是应该的。当然，可能是我的水平不够，也或许是在拜读他们的大作时候不够认真和严谨。 但我还是要告诫一下一些技术编辑者： 如果是怕别人偷学你的内容，那就不要发在网上；**如果你发在网上，请考虑我们读者的感受，要对自己花费那么多时间撰写的内容负责，要**让别人看懂你的文章，让别人欣赏你的作品。其实，有时候还能看出一个人的品性。 吐槽到此结束~下面开始进入博客搭建环节 值得你知道到话： 是的，你没有看错！ 不用服务器，不用注册域名，不用花钱，不用敲大代码等等 一个博客就值得你拥有 一、从创建到部署博客 1、安装好Node.js 别忘了用命令npm检验Node.js安装是否完成， 关于hexo的安装教程比较简单，网上有很多完整的教程，在这里就不再赘述。**** 安装Hexo 命令： npm install -g hexo-cli 做完了这一步之后，恭喜你，前期的准备工作已经完成，环境这一步结束了。 2、安装好Git 3、在C盘下创建hexo文件夹 4、打开Hexo文件夹下，右键点击Git bash 下执行命令 再使用一次这个命令：npm install hexo-cli -g 创建博客KangChou：hexo init KangChou cd KangChou npm install 5、命令hexo server启动github服务器 6、浏览博客 安照5中提示的网址http://localhost:4000/ 复制该网址在浏览器中打开，如下图所示：这样一个博客的架子就出来了。 7、部署前哨（一）：添加Github仓库地址 在部署之前，我们需要先知道博客的部署地址，它需要对应 GitHub 的一个 Repository 的地址，这个信息需要我们来配置一下。(这里我就省略了，自己去布置)，这是我的这个Github仓库 https://github.com/KangChou/KangChou.github.io.git 打开文件Hexo下的KangChou文件根目录下的 _config.yml 文件，我使用编辑器Sublime Text3打开的（或者你使用其他代码编辑器打开，千万别用文本编辑器打开），找到 Deployment 这个地方(提示：文件最后)，把刚才新建的 Repository 的地址贴过来 8、部署前哨（二）：**部署插件** 需要安装一个支持 Git 的部署插件： hexo-deployer-git，有了它我们才可以顺利将其部署到 GitHub 上面(如果不安装的话，在执行部署命令时会报错). 9、下面开始部署到Github 如果8的插件部署没有问题就开始进行部署，首先输入部署命令如下：hexo deploy 结尾…. 可以发现出现了上面的报错提示： 1Error: Spawn failed 解决方法第一次： 经搜索大量资料发现了下面的这个博客出现类似上述的一样问题，看了这个解决办法，我就斗胆试一试： https://blog.csdn.net/njc_sec/article/details/89021083 可惜我再重新安装上述的三个命令输入之后还是出先一样的错误。 解决方法第二次： 因此我怀疑可能是仓库的地址出错，因此去看看了看地址 这是原来的地址： 1deploy: 我按照出现错误提示中的网址去打开它： https://hexo.io/docs/troubleshooting.html 并找到了部署到Github目前的语法规定的网页下 https://hexo.io/docs/github-pages 按照上面对部署仓库的地址，我将上述的Deploy的源码修改为 1deploy: 于是我再试了上述的三个命令： hexo clean hexo g hexo d 最终出现下面的结果:说明出现的问题解决了 由于我起初没有部署仓库的密钥，所以要去仓库部署。 10、创建的 ssh 密钥的密码 (1)、我打开了我得仓库，并找到了设置 （2）查看部署密钥指南以了解更多信息 https://developer.github.com/v3/guides/managing-deploy-keys/#deploy-keys 找到了设置密码的步骤（经过翻译以后，目前我们进行到下面的5） （3）怎么创建SSH密钥? 步骤： 找到本地环境：C:\\Users\\admin.ssh 这个路径下的用户/名称/.ssh 在这路径下，打开gitbub的命令控制台 (I): git init //初始化一下，看看路径对不对 (II):ssh-keygen -t rsa -C “你的邮箱” 到本地环境.ssh路径下查看，是否生成id_rsa,id_rsa.pub这个两个文件 生成后，现在把id_rsa.pub里面的内容复制到githubd 的add github key 的key里面（也就是刚刚仓库的密钥添加的地方） 点击Add SSH key获得下面结果 注意：第一次提交，配置密钥，需要输入github的密码，如下就是添加秘钥成功 密钥配置成功后，要验证一下是否配置成功 命令：ssh -T git@github.com 出现下面提示，说明配置成功。 Hi KangChou/KangChou.github.io! You’ve successfully authenticated, but GitHub does not provide shell access 11、再次使用密钥部署 仍然使用命令： hexo clean hexo g hexo d 如果都没有问题就会出现下面的结果，输入你刚刚设置的名和SSH的密码 但是这里又出错了 追根溯源，我怀疑还是部署的仓库出现了问题：因此我再次打开，并做了修改 命令hexo d执行又出错 下面终于找到了答案。这里要特别感谢@李典金 @崔庆才两位网络开发大佬的细节点拨才通过了上面的一个小环节，从而我力挽狂澜，一气呵成，搭建了后面的所有框架。 12、终于部署成功 最后终于找到了错误的原因，这是因为我创建的仓库下Github的SSH错误 因此，我去仓库找到了 将红色的部分复制到hexo文件目录下也就是你的博客文件末尾，打开修改如下 再次输入命令hexo d执行以后出现下面的结果， 出现Deploy done :git说明已经部署成功 这时候我们访问一下 GitHub Repository 同名的链接， 比如我的 KangChou 博客的 Repository 名称取的是 KangChou.github.io， 那我就访问 http://KangChou.github.io 这时候我们就可以看到跟本地一模一样的博客内容了。 （此时你用手机同样可以打开该网站） 二、博客的网页主题 主题的设置包括中文页面、整个页面的样式、页面风格等等， 目前 Hexo 里面应用最多的主题基本就是 Next 主题， 这个主题还是挺好看的，并且它支持的一些插件和功能都极为丰富， 配置了这个主题，我们的博客可以支持更多的扩展功能，比如阅览进度条、中英文空格排版、图片懒加载等等。 13、下载主题 打开我的电脑创建的Hexo文件夹下的KangChou目录， 单击右键Git bush输入下面的命令，执行结果如下： git clone https://github.com/theme-next/hexo-theme-next themes/next 将下载后的themes主题替换原文件landscape中里所有的文件，并输入启动服务器命令 hexo server 执行结果如下 14、配置中文环境 在博客kangchou目录下打开_config.yml修改语言为中文汉语zh-Hans 执行的结果如下 由于这只是部分为中文，而我的目的是大部分是中文的， 为了方便还要在网页上手动添加更多中文描述 15、配置中文菜单栏 打开C:\\Hexo\\KangChou\\themes\\landscape\\languages 发有三种汉语:简体中文、香港繁体、台湾繁体 然后点开zh-Hans.yml其中的配置项就是已经翻译的文本 网站会根据你站点配置``yml中的语言配置来去读取对应的语言文件 打开你languages``皮肤配置``yml你会看到菜单栏基础配置： 发现home和archives菜单是开启的， 现在我们全部开**启**，只需要去掉前面的#，刷新浏览器 尝试修改站点配置yml语言，重启服务后刷新浏览器 显然结果很成功，**下面关闭git,将结果上传到Github页面：** 重新打开输入部署的三个命令： hexo clean hexo g hexo d 结果和上面一样，此时就可以访问了. 访问网站**https://kangchou.github.io/** 实际上文章到这里就已经结束博客的搭建了，至于其他的 比如上传文章、上传图片，添加logo等这些我这里就不说了， hexo官网以及其他网站都能搜索到具体的教程， 想继续完善博客网站部署的朋友可以去搜索相关文献学习。 三、更换域名 相信所有做互联网开发的科技工作者都知道，如果拥有属于自己的网站一定得看起来很专业、很官方、很大气。**因此，有些科技工作者就想更换自己网站的域名，让自己的域名看起来官方标准。也还有另一个原因，因为Github毕竟是外国网站，国内用户访问相对较慢，因此，如果有国内的域名作为辅助会事半功倍。事实上，我个人觉得只要可以搭建网站，即便是不换域名也没什么区别。不过，既然我给大家写这个教程，我还是有必要说一下，毕竟有很多人还是愿意换域名的。如果不想花钱买域名的，这一小节可以跳过。****16、购买域名+注册阿里网+实名认证****自行注册，如果你是在校大学生，包括硕士、博士购买域名都是有学生价优惠的，但是一定要使用自己在学校注册的电子邮箱，因为阿里云官网数据库可以识别你的学生信息的学年期限。此外，注册以后一定要进行学生认证、实名认证。** 然后去买域名，域名的形式有很多，按照自己的需求进行设置域名名称和域名后缀。（实名认证最快是两天的时间）**https://www.aliyun.com/** **** **17、在阿里云添加域名解析**cmd+ping你的http://github.io域名，得到一个IP 修改你的域名解析记录 添加两个A记录，用得到的IP，一个主机记录为：“www”，一个为“@”， 这样通过https://kangchou001.cn/就能访问到你的博客了 **18、**填写绑定的域名在你的本地文件下也就是hexo—&gt;你的博客（我的是KangChou）本地目录下找到 文件夹source ，并在该文件目录下面新建一个文件CNAME文件，那么一定要注意创建的CNAME文件没有任何扩展名（切记） 再一次使用部署三命令hexo clean**hexo ghexo d完成以后，**进入Github设置，找到 Custom domain添加域名后保存即可 **19、刷新网页+更改域名成功** 如果上面的17没有出错的话，那么你填完域名保存以后会出现下面的结果 那么就是更改域名成功了，此时你只需要点击上图的域名就可以访问啦。 ……到此完成了本博客的搭建…… 投稿—&gt;展示你的才华 请发邮件到 kangsinx@yeah.net 标题注明【投稿】 告诉我们 你是谁，从哪来，投什么 我们会及时回复你","categories":[{"name":"博客教程","slug":"博客教程","permalink":"http://kangchou001.cn/categories/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"}],"tags":[]},{"title":"解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】","slug":"hello-world  3","date":"2020-04-05T10:44:09.554Z","updated":"2020-04-06T17:03:49.595Z","comments":true,"path":"2020/04/05/hello-world  3/","link":"","permalink":"http://kangchou001.cn/2020/04/05/hello-world%20%203/","excerpt":"https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIwNzUwOTY1Nw==&amp;scene=124#wechat_redirect 正文开始 众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。","text":"https://mp.weixin.qq.com/mp/profile_ext?action=home&amp;__biz=MzIwNzUwOTY1Nw==&amp;scene=124#wechat_redirect 正文开始 众所周知，学习深度学习和人工智能技术的科技工作者对Tensorflow的安装一直是件麻烦的事情，其实也没那么难，只是在于操作的方法是否合理和规范而已。合理正确的安装命令和正确的操作环节是成功的关键因素。为此，我们在本文中将详细说明linux和windows两种OS系统关于TensorFlow的安装教程，并且将重点说明目前最新版本TensorFlow2.1.0的安装要素和测试检验。 （注意：本文的linux系统教程适用于deepin和ubuntu 18.04两种，其他系统安装类似） TensorFlow简介 1https:&#x2F;&#x2F;baike.baidu.com&#x2F;item&#x2F;Tensorflow&#x2F;18828108 一、在Windows10系统开展如下操作 安装前提： 已经安装好Anaconda3, 由于国外的镜像文件下载较慢，所以我选择了国内的镜像——h**ttps://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/ 以上请自行安装…. 1、前期准备：**Anaconda3的终端上的过渡** 打开已经安装好的Anaconda3 运行 Anaconda Prompt，输入如下命令检验是否安装成功 1conda list 输出： 再次输入清华镜像检验一下 1conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F; 这里是因为我已经安装过了，所以结果是这样的。 2、开始安装TensorFlow （1）运行 Anaconda Prompt，输入以下命令，创建版本为python 3.7.4的tensorflow 环境： 1conda create -n tensorflow python&#x3D;3.7.4 这里的TensorFlow我以前已经安装过了，所以下面再给大家安装另一个tensorflow2环境：输入命令 1conda create -n tensorflow2 python&#x3D;3.7.4 输出： 1(base) C:\\Users\\kangs&gt;conda create -n tensorflow2 python&#x3D;3.7.4 然后打开Anaconda Navigator，进入点击中间的选项applications on可以看到我们刚刚创建的TensorFlow2，这里的TensorFlow是我以前安装的环境： 打开上述左侧菜单栏，也就是开始菜单下的Anaconda Navigator 左边的 Environments，点击之后可看到此环境： （2）启动tensorflow2环境 这里有两种启动方式：第一种是连续刚刚的 Anaconda Prompt终端输入 1activate tensorflow2 输出 第二种打开方式，启动刚刚的Anaconda Navigator，进入环境点击 *（3）安装cpu版本的tensorflow * 有两种方法可以安装： 方法一：cpu版本（我推荐的） 1pip install --ignore-installed --upgrade tensorflow 方法二：gpu版本, 注意: gpu版要事先选好, 并装好CUDA和cuDNN 1pip install --ignore-installed --upgrade tensorflow-gpu 执行结果： 1​ 这样就安装成功了，当不使用TensorFlow时，可以通过deactivate来关闭TensorFlow环境： (不过先不要着急关闭，我们下面还有进行检验，如果最后不用，再关掉) （4）测试tensorflow 1python --version 创建一个项目： 1import tensorflow as tf 执行结果显然是可行的，测试成功： 提示：如果遇到No module named ‘tensorflow’，那是因为没有在tensorflow的环境下打开它们，所以记得激活tensorflow的环境。 （5）解决你安装的Tensorflow环境不能安装ipython,spyder等插件 错误提示如下图： “无法定位程序输入点OPENSSL_sk_new_reserve于动态链接库…… libssl-1_1-x64.dll上的问题”‘’ 解放方法：**互换 libssl-1_1-x64.dll文件，时间必须一样** 第一步 打开D:\\Anaconda\\Library\\bin文件夹下面的 libssl-1_1-x64.dll 第二步 D:\\Anaconda\\DLLs 文件夹下面的 libssl-1_1-x64.dll 如果两个文件夹时间不一样的话，把两个文件换成一样的就可以了。 注意：为了避免系统出错，要事先备份好一样的文件，以避免修改后出错而找不会原来的文件。最简单的方法就是复制换成另一个名称的，例如我加了一个“源文件”。 互换如下图： 换文件之后,时间都是**2018/6/28 21:00** 下面再次点击安装插件就可以了 安装成功，如图下所示 二、在Linux**系统开展如下操作** 这里使用的虚拟机VMware Workstation Pro 15.0安装的linux系统进行操作的，如图： 下面打开deepin系统开始进行安装 1、先安装Anaconda3 (1)、下载：https://www.anaconda.com/distribution/#linux 将下载好的anacoda3放在主目录下（home） （2）、安装命令： 1bash Anaconda3-2019.10-Linux-x86_64.sh 回车运行如下 按回车键继续，会读取许可，出现个More，一直按回车以及yes,然后会出现下图： 一直往下回车和yes 安装成功 （3）、配置环境变量 为了方便编辑环境变量，这里安装一个编辑器gedit，命令 1sudo apt-get install gedit 打开环境变量，并使用命令：sudo gedit ~/.bashrc查看系统环境，文件末尾输入以下代码: 1在文件的末尾加上下述代码： 如下图 （5）、更新bashrc，并查看Anacoda3的安装情况 1source ~&#x2F;.bashrc 查询当前已经安装的conda库 1conda list 安装库(这里的***代表库名称）, 如果没有你的库文件，可以选择这个命令： 1conda install *** 更新库 1conda update *** （5）、(如果你不用还可以卸载)，不卸载就跳过此处，建议不要卸载 卸载conda: 直接删除anaconda文件夹即可： 1rm -rf anaconda3 (6)、进入和退出 conda base 环境 进入 conda base 环境 1conda activate base 退出 conda base 环境 1conda deactivate 编辑 conda 环境变量 1vim ~&#x2F;.bashrc 或者 sudo gedit ~&#x2F;.bashrc 2、使用以上Anaconda3安装Tensorflow (1)、在linux终端或cmd中输入以下命令搜索当前可用的tensorflow版本，如果没有就要创建： 1conda search -t conda tensorflow 安装完成之后，最后还提示激活与退出 1# To activate this environment, use （2）、正式安装tensorflow 激活虚拟环境后conda activate tf，我们开始用conda安装tensorflow吧！ 如果你还不知道GPU是什么东东，那你的计算机里肯定没有安装cuda、cudnn 、显卡之类的东西，那就安装CPU版本； 安装CPU版本的tensorflow(推荐安装)： 1conda install tensorflow 安装GPU版本 （如果你不理解建议不要安装，初学者还是卸载CPU版本的tensorflow吧！） 1conda install tensorflow-gpu 等待几分钟之后，看看自己是否安装成功： （3）、测试安装是否成功：在python3.7.6下导入tensorflow： (不报错的话说明成功安装了) 1import tensorflow as tf 至此我们完整地安装完毕，以下是一些附件资料 附件资料 Conda的环境管理及知识点123456789101112131415161718192021222324252627282930313233#conda版本查看#conda版本查看conda -Vconda --version​#更新 conda update conda #更新condaconda update anaconda #更新anacondaconda update anaconda-navigator #update最新版本的anaconda-navigator​# 查看已安装的虚拟环境conda env list conda info -econda info --env​# conda -create -n env_name list_of_packages# env_name是需要创建的环境名称，list_of_packages是在新环境中需要安装的工具包，有多个时用空格隔开# 创建一个名为的环境，指定Python版本是3.5（conda会自动寻找3.5.x中的最新版本）​conda create -n xxxx python&#x3D;3.5conda create --name xxxx python&#x3D;3.5​conda activate xxxx #开启xxxx环境conda deactivate #关闭环境​# 克隆环境，我想创建一个新环境BBB，完全克隆AAA的环境配置conda create -n BBB --clone AAA​# 删除一个已有的环境conda remove -n xxxx --all​# 环境重命名# conda没有重命名的命令，所以可以先 clone 一个环境，然后删除原有的环境 Conda的包管理知识点123456789101112131415161718# 查看当前环境下已安装的包conda list# 查看某个指定环境（xxxxx）下已安装的包conda list -n xxxxx# 查找package信息，例如查找numpy包信息，会列numpy的所有版本conda search numpy# 安装package，安装多个包用空格隔开# 如果不用-n指定环境名称，则被安装在当前活跃环境# 也可以通过-c指定通过某个channel安装conda install -n xxxxx numpy pandas# 更新packageconda update numpy # 更新numpy（当前活跃的环境） conda update -n xxxxx numpy # 更新指定xxxxx环境下的numpyconda update python # 假设当前环境是python3.4, conda会将python升级为3.4.x系列的最新版本# 删除环境packageconda uninstall numpyconda remove numpy # 删除numpy包（当前活跃的环境）conda remove -n xxxxx numpy # 删除xxxxx环境下的包 参考文献： 12345​https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq654129588&#x2F;article&#x2F;details&#x2F;79917515https:&#x2F;&#x2F;ask.csdn.net&#x2F;questions&#x2F;657580https:&#x2F;&#x2F;www.cnblogs.com&#x2F;HongjianChen&#x2F;p&#x2F;8385547.htmlhttps:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_45100771&#x2F;article&#x2F;details&#x2F;102868264https:&#x2F;&#x2F;blog.csdn.net&#x2F;superjunenaruto&#x2F;article&#x2F;details&#x2F;9539068 您可能喜欢的文章： 数据分析开篇：一个简单的应用（2019/11/04） 2020年数据分析必知必会（一）：NumPy数组 2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python 2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予） 数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声） 2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现） 2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子） 2020年数据分析必知必会（七）：pandas入门与数据结构基础 2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大） 2020年数据分析必知必会（九）：数据的分组与聚合 认认真真系统学习数据分析","categories":[{"name":"算法","slug":"算法","permalink":"http://kangchou001.cn/categories/%E7%AE%97%E6%B3%95/"}],"tags":[]},{"title":"Sublime Text 3 最新注册码（ 亲测可用2020年4月1日更新）","slug":"hello-world  2","date":"2020-04-05T09:41:37.888Z","updated":"2020-04-06T17:02:04.420Z","comments":true,"path":"2020/04/05/hello-world  2/","link":"","permalink":"http://kangchou001.cn/2020/04/05/hello-world%20%202/","excerpt":"“废话不多说直接上干货”Github原文链接 备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整具体步骤请参考：https://www.jianshu.com/p/b6fae22fee0f打开sublime text ,选择help–&gt;enter license，将下面的代码内容复制到输入框中 123456789101112ZYNGA INC.50 User LicenseEA7E-811825927BA117 84C9300F 4A0CCBC4 34A56B44985E4562 59F2B63B CCCFF92F 0E646B830FD6487D 1507AE29 9CC4F9F5 0A6F32E30343D868 C18E2CD5 27641A71 25475648309705B3 E468DDC4 1B766A18 7952D28CE627DDBA 960A2153 69A2D98A C87C060745DC6049 8C04EC29 D18DFA40 442C680B1342224D 44D90641 33A3B9F2 46AADB8F","text":"“废话不多说直接上干货”Github原文链接 备注1：激活前需要对你的电脑端的hosts文件参数及内容进行调整具体步骤请参考：https://www.jianshu.com/p/b6fae22fee0f打开sublime text ,选择help–&gt;enter license，将下面的代码内容复制到输入框中 123456789101112ZYNGA INC.50 User LicenseEA7E-811825927BA117 84C9300F 4A0CCBC4 34A56B44985E4562 59F2B63B CCCFF92F 0E646B830FD6487D 1507AE29 9CC4F9F5 0A6F32E30343D868 C18E2CD5 27641A71 25475648309705B3 E468DDC4 1B766A18 7952D28CE627DDBA 960A2153 69A2D98A C87C060745DC6049 8C04EC29 D18DFA40 442C680B1342224D 44D90641 33A3B9F2 46AADB8F 执行结果解题如下： 备注2：想永久激活那就请别更新，具体操作请查考上面的链接附件：Sublime Text2 最新注册码请点击下面的蓝色链接Sublime Text 最新注册码（ 亲测可用2019年8月24日更新） 获取更多学习资源请扫码以下公众号二维码进行关注","categories":[{"name":"激活与安装","slug":"激活与安装","permalink":"http://kangchou001.cn/categories/%E6%BF%80%E6%B4%BB%E4%B8%8E%E5%AE%89%E8%A3%85/"}],"tags":[]},{"title":"互联网学习资源","slug":"hello-world","date":"2020-03-30T00:39:33.087Z","updated":"2020-04-06T17:00:29.679Z","comments":true,"path":"2020/03/30/hello-world/","link":"","permalink":"http://kangchou001.cn/2020/03/30/hello-world/","excerpt":"本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等~ 《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》","text":"本博客分享人工智能算法，Python基础知识、数据分析、数据可视化、大数据、TensorFlow和神经网络等学习资源，以及热点资讯、相关技术文章、学习视频和学习书籍等~ 《值得你阅读的hexo个人博客搭建：不用购买服务器，不用购买域名，不要钱，不用敲代码等等，是的，你没有看错，快来转载学习吧！》 Python | Pandas 快速处理文本数据 解决安装AI算法库TensorFlow 2.0的最新入坑指南以及详细的安装教程【分别在linux和windows系统下安装】 您可能喜欢的文章： 数据分析开篇：一个简单的应用（2019/11/04） 2020年数据分析必知必会（一）：NumPy数组 2020年数据分析必知必会（二）：NumPy摘要—-文章末尾附Python 2020年数据分析必知必会（三）：数组的形状和属性（有福利赠予） 数据分析必知必必会（四）：数组的转换，视图，拷贝，索引和广播（这里的“广播”是一个数组的应用：数据处理旧手机铃声） 2020年数据分析必知必会（五）：统计和线性代数（使用Numpy与Scipy实现） 2020年数据分析必知必会（六）：离散式复制的创建（以北京最近的猪肉价格为例子） 2020年数据分析必知必会（七）：pandas入门与数据结构基础 2020年数据分析必知必会（八）：使用pandas查询数据和统计分析的应用（短小但强大） 2020年数据分析必知必会（九）：数据的分组与聚合 推荐互联网人工智能学习资料 &gt;&gt;&gt;点击进入&lt;&lt;&lt; 视频赏析 视频来源我的B站：Cucker周周的实验室 &gt;&gt;&gt;更多视频点击进入我的B站&lt;&lt;&lt; 怀旧经典：《牧马人》，最淳朴的爱情，也是父辈们才能拥有的爱情。 博客网页正在更新中…","categories":[{"name":"学习资料","slug":"学习资料","permalink":"http://kangchou001.cn/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"}],"tags":[]}],"categories":[{"name":"算法","slug":"算法","permalink":"http://kangchou001.cn/categories/%E7%AE%97%E6%B3%95/"},{"name":"博客教程","slug":"博客教程","permalink":"http://kangchou001.cn/categories/%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"},{"name":"激活与安装","slug":"激活与安装","permalink":"http://kangchou001.cn/categories/%E6%BF%80%E6%B4%BB%E4%B8%8E%E5%AE%89%E8%A3%85/"},{"name":"学习资料","slug":"学习资料","permalink":"http://kangchou001.cn/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"}],"tags":[]}